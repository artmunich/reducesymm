(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[     81951,       1866]
NotebookOptionsPosition[     78025,       1735]
NotebookOutlinePosition[     78360,       1750]
CellTagsIndexPosition[     78317,       1747]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.544772277445504*^9, 3.54477229320197*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dataDir", "=", "\"\<~/Dropbox/\>\"", 
  RowBox[{"(*", 
   RowBox[{"\"\<../../matlab/ruslan/\>\"", ";"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.552800750254986*^9, 3.55280077628544*^9}, 
   3.552800879776054*^9, {3.553252032949868*^9, 3.553252081580298*^9}}],

Cell[BoxData["\<\"~/Dropbox/\"\>"], "Output",
 CellChangeTimes->{3.5533980289202223`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dataDir", "<>", "\"\<ks22tw1manif.mat\>\""}]], "Input"],

Cell[BoxData["\<\"~/Dropbox/ks22tw1manif.mat\"\>"], "Output",
 CellChangeTimes->{3.553398029920619*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"d", "=", "62"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"state", " ", "space", " ", "dimension", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"real", " ", "numbers"}], ",", " ", 
      RowBox[{"not", " ", "counting", " ", "zero", " ", "mode"}]}]}]}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.552807718215145*^9, 3.5528077241562653`*^9}, {
   3.5528091657211637`*^9, 3.5528092263*^9}, 3.552811742947341*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"dF", "=", "31"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"n", "/", "2"}], "-", "1"}], ",", " ", 
    RowBox[{
    "where", " ", "n", " ", "the", " ", "number", " ", "of", " ", "Fourier", 
     " ", "modes", " ", "counting", " ", "zero", " ", "mode"}]}], " ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.552808681189241*^9, 3.552808683435706*^9}, {
  3.552808829336174*^9, 3.552808829912114*^9}, {3.552809099887903*^9, 
  3.5528091606272593`*^9}}],

Cell["\<\
Import set of trajectories (here for unstable manifold of TW1). (Nic x \
d)-rows Nsteps-columns, where Nic the number of initial conditions, d the \
state-space dimension, Nsteps the number of time steps.\
\>", "Text",
 CellChangeTimes->{{3.552807455791*^9, 3.552807556805904*^9}, {
  3.5528076344076014`*^9, 3.552807656784021*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"tw1manif", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"dataDir", "<>", "\"\<ks22tw1manif.mat\>\""}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.5528007465681257`*^9, 3.552800748038217*^9}, {
  3.5528007806200523`*^9, 3.5528008069581947`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"tw1manif", "[", 
   RowBox[{"[", "1", "]"}], "]"}], "//", "Dimensions"}]], "Input",
 CellChangeTimes->{{3.552801089506373*^9, 3.552801118195973*^9}, {
  3.553351185661046*^9, 3.553351195332102*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1054", ",", "901"}], "}"}]], "Output",
 CellChangeTimes->{3.553398033898718*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"tw1manif", "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", 
       RowBox[{"1", ";;", 
        RowBox[{"-", "1"}], ";;", "d"}], ",", "10"}], "]"}], "]"}], " ", ",", 
    
    RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], " "}]], "Input",
 CellChangeTimes->{{3.552807712164474*^9, 3.552807814801206*^9}, {
  3.552808087934038*^9, 3.552808088117271*^9}, {3.552811756180105*^9, 
  3.552811775245401*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {Hue[0.67, 0.6, 0.6], 
    PointBox[{{1., -0.08198711889335218}, {2., -0.08198666788407978}, {
     3., -0.08198619216153334}, {4., -0.08198569037115803}, {
     5., -0.08198516108411219}, {6., -0.08198460279318842}, {
     7., -0.08198401390851016}, {8., -0.08198339275299169}, {
     9., -0.08198273755754734}, {10., -0.08198204645603782}, {
     11., -0.08198131747993735}, {12., -0.08198054855270719}, {
     13., -0.0819797374838587}, {14., -0.08197888196268928}, {
     15., -0.08197797955167242}, {16., -0.08197702767948306}, {
     17., -0.08197602363363765}}]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, -0.08198799999999999},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.553398037301516*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"tw1manif", "[", 
   RowBox[{"[", "1", "]"}], "]"}], "//", "Dimensions"}]], "Input",
 CellChangeTimes->{{3.5528078290409603`*^9, 3.552807830957337*^9}, {
  3.552808070325387*^9, 3.5528080715241623`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1054", ",", "901"}], "}"}]], "Output",
 CellChangeTimes->{3.553398038961296*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", 
  RowBox[{"Table", "[", 
   RowBox[{"i", ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "0", ",", "1", ",", "0.06"}], "}"}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.552801787729073*^9, 3.5528018141503572`*^9}, {
  3.5528073675991287`*^9, 3.552807367744475*^9}, {3.5528074040235233`*^9, 
  3.552807404727178*^9}}],

Cell[BoxData["17"], "Output",
 CellChangeTimes->{3.553398039005115*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"1054", "/", "17"}]], "Input",
 CellChangeTimes->{{3.552801820762611*^9, 3.552801823251999*^9}}],

Cell[BoxData["62"], "Output",
 CellChangeTimes->{3.553398039017218*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"901", "/", "17"}]], "Input",
 CellChangeTimes->{{3.5528018263635483`*^9, 3.552801828076344*^9}}],

Cell[BoxData["53"], "Output",
 CellChangeTimes->{3.5533980403989477`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"rpo1", "=", 
    RowBox[{"Import", "[", 
     RowBox[{"dataDir", "<>", "\"\<ks22rpo16p31s2.86.mat\>\""}], "]"}]}], " ",
    ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{",", "\"\<LabeledData\>\""}], "]"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.552801518527114*^9, 3.552801548311242*^9}, {
  3.552807037342886*^9, 3.552807105624515*^9}, {3.552807161802136*^9, 
  3.552807194657419*^9}, {3.5528072617863483`*^9, 3.552807272749201*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"rpo2", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"dataDir", "<>", "\"\<ks22rpo55p6s5p25.mat\>\""}], "]"}]}], " ", 
  ";"}]], "Input",
 CellChangeTimes->{{3.553398761022717*^9, 3.5533987711813993`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"rpo3", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"dataDir", "<>", "\"\<ks22rpo77p85s10p8.mat\>\""}], "]"}]}], " ", 
  ";"}]], "Input",
 CellChangeTimes->{{3.553399366930828*^9, 3.55339939211101*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"rpo1", "[", 
   RowBox[{"[", "1", "]"}], "]"}], "//", "Dimensions"}]], "Input",
 CellChangeTimes->{{3.553398786199766*^9, 3.553398786277689*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"62", ",", "165"}], "}"}]], "Output",
 CellChangeTimes->{3.553398786828677*^9, 3.553399394295369*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"rpo3", "[", 
   RowBox[{"[", "1", "]"}], "]"}], "//", "Dimensions"}]], "Input",
 CellChangeTimes->{{3.552807663004777*^9, 3.5528076690117188`*^9}, {
  3.55281180832279*^9, 3.5528118094315567`*^9}, {3.553398774390315*^9, 
  3.5533987744904423`*^9}, {3.553399396255829*^9, 3.5533993968971167`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"62", ",", "647"}], "}"}]], "Output",
 CellChangeTimes->{3.5533980406394367`*^9, 3.553398774890751*^9, 
  3.553399397939685*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"rotList", "[", 
   RowBox[{"th_", ",", "dF_"}], "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Exp", "[", 
     RowBox[{"I", " ", "k", " ", "th"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "1", ",", "dF"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.552808640802899*^9, 3.5528086716880093`*^9}, {
  3.552808835075783*^9, 3.552808836060569*^9}, {3.5528096462327423`*^9, 
  3.552809648896393*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"rot", "[", 
    RowBox[{"th_", ",", "dF_"}], "]"}], ":=", 
   RowBox[{"DiagonalMatrix", "[", 
    RowBox[{"rotList", "[", 
     RowBox[{"th", ",", "dF"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.548427112726866*^9, 3.548427124978426*^9}, {
   3.548427158648355*^9, 3.548427187798277*^9}, {3.548427506979024*^9, 
   3.548427508487605*^9}, 3.552209100441189*^9, {3.552209849819571*^9, 
   3.552209850014653*^9}, {3.552808845674499*^9, 3.552808849482868*^9}, {
   3.552809657854862*^9, 3.55280966440753*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", "rotDer", "]"}]], "Input",
 CellChangeTimes->{{3.5528118857917957`*^9, 3.5528118901017027`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"rotDer", "[", 
    RowBox[{"th_", ",", "dF_"}], "]"}], "=", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"rot", "[", 
      RowBox[{"th", ",", "dF"}], "]"}], ",", "th"}], "]"}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.552808997366342*^9, 3.552809034503805*^9}, {
   3.552809669135126*^9, 3.552809675943955*^9}, 3.552811894054639*^9, 
   3.5528119528486958`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"rotGen", "=", 
   RowBox[{"rotDer", "[", 
    RowBox[{"0", ",", "dF"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.552809014008534*^9, 3.552809047911495*^9}, {
  3.552809681143839*^9, 3.552809682366577*^9}, {3.552811895853447*^9, 
  3.552811956847742*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"sliceCond", "[", 
   RowBox[{"x_List", ",", "templ_List", ",", "th_", ",", "dF_"}], "]"}], ":=", 
  RowBox[{"ComplexExpand", "[", 
   RowBox[{"Re", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Conjugate", "[", "x", "]"}], ".", 
       RowBox[{"rot", "[", 
        RowBox[{
         RowBox[{"-", "th"}], ",", "dF"}], "]"}]}], ")"}], ".", 
     RowBox[{"(", 
      RowBox[{"rotGen", ".", "templ"}], ")"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.548427646283306*^9, 3.5484277403844213`*^9}, 
   3.548428010959774*^9, 3.548428164535964*^9, {3.548442212620851*^9, 
   3.548442221396084*^9}, {3.5484422716196423`*^9, 3.548442279619231*^9}, {
   3.55281185136873*^9, 3.5528118595365067`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"sliceCond", "[", 
   RowBox[{"x_List", ",", "templ_List"}], "]"}], ":=", 
  RowBox[{"ComplexExpand", "[", 
   RowBox[{"Re", "[", 
    RowBox[{
     RowBox[{"Conjugate", "[", "x", "]"}], ".", 
     RowBox[{"(", 
      RowBox[{"rotGen", ".", "templ"}], ")"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.548442820949328*^9, 3.548442839096561*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"rot2chart", "[", 
   RowBox[{"x_List", ",", "templ_List", ",", "dF_", ",", "guess_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"thSol", ",", "xRot", ",", "nrm"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"thSol", "=", 
      RowBox[{"FindRoot", "[", 
       RowBox[{
        RowBox[{"sliceCond", "[", 
         RowBox[{"x", ",", "templ", ",", "th", ",", "dF"}], "]"}], " ", ",", 
        RowBox[{"{", 
         RowBox[{"th", ",", "guess"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"xRot", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"rot", "[", 
          RowBox[{"th", ",", "dF"}], "]"}], ".", "x"}], ")"}], "/.", 
       "thSol"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"xRot", ",", 
       RowBox[{"th", "/.", "thSol"}]}], "}"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.552812002102654*^9, 3.552812012251266*^9}, 
   3.553252693956993*^9, {3.5532530019585648`*^9, 3.553253020567916*^9}, {
   3.55325305374825*^9, 3.553253114887538*^9}, {3.553253194977509*^9, 
   3.553253221896728*^9}, {3.553253269352112*^9, 3.553253277919837*^9}, {
   3.5532533284234333`*^9, 3.553253367055245*^9}, {3.5532554692743187`*^9, 
   3.5532554779657183`*^9}, {3.553255544404277*^9, 3.553255564066966*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"rot2slice", "[", 
   RowBox[{"x_List", ",", "templ_List", ",", "dF_", ",", "guess_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "xRot", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"xRot", "=", 
      RowBox[{
       RowBox[{"rot2chart", "[", 
        RowBox[{"x", ",", 
         RowBox[{
         "templ", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], " ",
          ",", "dF", ",", "guess"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Sign", "[", 
         RowBox[{"sliceCond", "[", 
          RowBox[{"xRot", ",", 
           RowBox[{
           "templ", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
          "]"}], " ", "]"}], "\[Equal]", 
        RowBox[{"Sign", "[", 
         RowBox[{"sliceCond", "[", 
          RowBox[{
           RowBox[{
           "templ", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
           ",", 
           RowBox[{
           "templ", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
          "]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"xRot", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"rot2chart", "[", 
           RowBox[{"x", ",", 
            RowBox[{
            "templ", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
            ",", "dF"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", "2"}], "}"}]}], " ", "]"}]}]}], 
   RowBox[{"(*", 
    RowBox[{"Check", " ", "ridge", " ", "crossing"}], "*)"}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.55281704039198*^9, 3.5528170664368973`*^9}, {
  3.553255494257402*^9, 3.553255511939337*^9}, {3.553255595125701*^9, 
  3.553255620166786*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"rot2chartTraj", "[", 
   RowBox[{"traj_List", ",", "templ_List", ",", "dF_", ",", "guess0_"}], 
   "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "rtraj", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"rtraj", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"0", ",", 
        RowBox[{"{", 
         RowBox[{"Length", "[", "traj", "]"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"rtraj", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "=", 
      RowBox[{"rot2chart", "[", 
       RowBox[{
        RowBox[{"traj", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", "templ", ",", "dF", ",", 
        "guess0"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"rtraj", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "=", 
        RowBox[{"rot2chart", "[", 
         RowBox[{
          RowBox[{"traj", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", "templ", ",", "dF", ",", 
          RowBox[{"rtraj", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"i", "-", "1"}], ",", "2"}], " ", "]"}], "]"}]}], " ", 
         "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "2", ",", 
         RowBox[{"Length", "[", "traj", "]"}]}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", "rtraj"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.553255662510248*^9, 3.553255955308723*^9}, {
  3.553256292269966*^9, 3.553256307923381*^9}, {3.5532563632493477`*^9, 
  3.553256374272163*^9}, {3.5532564674893723`*^9, 3.553256496838303*^9}, {
  3.553256772463635*^9, 3.553256783647627*^9}, {3.5532568705175133`*^9, 
  3.553256914179718*^9}, {3.553257028920841*^9, 3.553257052589837*^9}, {
  3.5533445150588293`*^9, 3.553344555447493*^9}, {3.553351116841692*^9, 
  3.553351129761114*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"trajRe2c", "[", "x_List", "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"x", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", 
        RowBox[{"1", ";;", 
         RowBox[{"-", "1"}], ";;", "2"}]}], "]"}], "]"}], "+", 
     RowBox[{"I", " ", 
      RowBox[{"x", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", 
         RowBox[{"2", ";;", 
          RowBox[{"-", "1"}], ";;", "2"}]}], "]"}], "]"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "[", "x", "]"}]}], "}"}]}], " ", "]"}]}]], "Input",
 CellChangeTimes->{{3.5528179161354322`*^9, 3.552818048764965*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"rpo1c", "=", 
   RowBox[{"trajRe2c", "[", 
    RowBox[{"Transpose", "[", 
     RowBox[{"rpo1", "[", 
      RowBox[{"[", "1", "]"}], "]"}], " ", "]"}], " ", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.552818054554839*^9, 3.552818095994666*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"rpo2c", "=", 
   RowBox[{"trajRe2c", "[", 
    RowBox[{"Transpose", "[", 
     RowBox[{"rpo2", "[", 
      RowBox[{"[", "1", "]"}], "]"}], " ", "]"}], " ", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.553398811461032*^9, 3.553398813681094*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"rpo3c", "=", 
   RowBox[{"trajRe2c", "[", 
    RowBox[{"Transpose", "[", 
     RowBox[{"rpo3", "[", 
      RowBox[{"[", "1", "]"}], "]"}], " ", "]"}], " ", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.55339941244134*^9, 3.5533994153861637`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "[", "rpo1c", "]"}]], "Input",
 CellChangeTimes->{{3.552818097537883*^9, 3.552818105816514*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"165", ",", "31"}], "}"}]], "Output",
 CellChangeTimes->{{3.5533987972198277`*^9, 3.553398815126483*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "[", "rpo2c", "]"}]], "Input",
 CellChangeTimes->{{3.553398821698504*^9, 3.5533988217574368`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"475", ",", "31"}], "}"}]], "Output",
 CellChangeTimes->{3.55339882217003*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "[", "rpo3c", "]"}]], "Input",
 CellChangeTimes->{{3.553399422738913*^9, 3.553399423385687*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"647", ",", "31"}], "}"}]], "Output",
 CellChangeTimes->{3.55339942371809*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"rpo1cRot", "=", 
   RowBox[{"rot2chartTraj", "[", 
    RowBox[{"rpo1c", ",", 
     RowBox[{"rpo1c", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", "dF", ",", "0"}], " ", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.5528172935324593`*^9, 3.5528173718831367`*^9}, {
   3.553252288262705*^9, 3.553252304109221*^9}, {3.553252425169847*^9, 
   3.553252433989297*^9}, {3.553252606399225*^9, 3.553252630146851*^9}, {
   3.553253391569745*^9, 3.553253403198001*^9}, {3.553253433269866*^9, 
   3.553253433849448*^9}, {3.553256128867578*^9, 3.553256131067088*^9}, {
   3.5532565230385103`*^9, 3.5532565248805637`*^9}, {3.553256973706559*^9, 
   3.553256974608946*^9}, {3.5533445938919888`*^9, 3.553344595080361*^9}, 
   3.5533511426896772`*^9, {3.5533995791612797`*^9, 3.553399580110207*^9}, {
   3.553399876581953*^9, 3.553399876748693*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"rpo2cRot", "=", 
   RowBox[{"rot2chartTraj", "[", 
    RowBox[{"rpo2c", ",", 
     RowBox[{"rpo1c", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", "dF", ",", "0"}], " ", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.553398829589678*^9, 3.553398833559009*^9}, {
  3.5533988800400476`*^9, 3.5533988808078117`*^9}, {3.553399018899139*^9, 
  3.55339901898464*^9}, {3.553399882149547*^9, 3.553399882299961*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindRoot", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient decrease in the merit function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/FindRoot/lstol\\\", ButtonNote -> \
\\\"FindRoot::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.55339989216495*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindRoot", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient decrease in the merit function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/FindRoot/lstol\\\", ButtonNote -> \
\\\"FindRoot::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5533998922252073`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindRoot", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient decrease in the merit function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/FindRoot/lstol\\\", ButtonNote -> \
\\\"FindRoot::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5533998922798977`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(FindRoot \
:: lstol\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.553399892283503*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"rpo3cRot", "=", 
   RowBox[{"rot2chartTraj", "[", 
    RowBox[{"rpo3c", ",", 
     RowBox[{"rpo1c", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", "dF", ",", "0"}], " ", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.553399435599526*^9, 3.5533994379555607`*^9}, {
  3.553399885225067*^9, 3.553399885337325*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindRoot", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient decrease in the merit function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/FindRoot/lstol\\\", ButtonNote -> \
\\\"FindRoot::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5533999158231907`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindRoot", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient decrease in the merit function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/FindRoot/lstol\\\", ButtonNote -> \
\\\"FindRoot::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.553399915968334*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindRoot", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient decrease in the merit function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/FindRoot/lstol\\\", ButtonNote -> \
\\\"FindRoot::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.553399915970956*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(FindRoot \
:: lstol\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5533999159725037`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rpo1cRot", "//", "Dimensions"}]], "Input",
 CellChangeTimes->{{3.553253405907295*^9, 3.553253410757316*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"165", ",", "2"}], "}"}]], "Output",
 CellChangeTimes->{3.5533996289006166`*^9, 3.5533999285427647`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rpo2cRot", "//", "Dimensions"}]], "Input",
 CellChangeTimes->{{3.553398840409954*^9, 3.553398840460268*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"475", ",", "2"}], "}"}]], "Output",
 CellChangeTimes->{3.553398851364263*^9, 3.553398898905437*^9, 
  3.553399928590529*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"trajC2re", "[", "a_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "ar", "}"}], ",", 
    RowBox[{
     RowBox[{"ar", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"0", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "a", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", 
          RowBox[{"2", "*", 
           RowBox[{
            RowBox[{"Dimensions", "[", "a", "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"ar", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", 
            RowBox[{
             RowBox[{"2", "*", 
              RowBox[{"(", 
               RowBox[{"j", "-", "1"}], ")"}]}], "+", "1"}]}], "]"}], "]"}], 
         "=", 
         RowBox[{"Re", "[", 
          RowBox[{"a", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j"}], "]"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"ar", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", 
            RowBox[{
             RowBox[{"2", "*", 
              RowBox[{"(", 
               RowBox[{"j", "-", "1"}], ")"}]}], "+", "2"}]}], "]"}], "]"}], 
         "=", 
         RowBox[{"Im", "[", 
          RowBox[{"a", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j"}], "]"}], "]"}], "]"}]}], ";"}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "a", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", 
         RowBox[{
          RowBox[{"Dimensions", "[", "a", "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "\[IndentingNewLine]", 
      "]"}], ";", "\[IndentingNewLine]", "ar"}]}], " ", "\[IndentingNewLine]",
    "]"}]}]], "Input",
 CellChangeTimes->{{3.553253536931847*^9, 3.553253567839449*^9}, {
  3.553253861868319*^9, 3.553254132167067*^9}, {3.553254167546282*^9, 
  3.553254172566854*^9}, {3.5532542127560463`*^9, 3.5532542575602083`*^9}, {
  3.553254304968453*^9, 3.553254352822132*^9}, {3.553344985105562*^9, 
  3.553344999306056*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"trajSliceC2re", "[", "a_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "ar", "}"}], ",", 
    RowBox[{
     RowBox[{"ar", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"0", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "a", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", 
          RowBox[{"2", "*", 
           RowBox[{"Length", "[", 
            RowBox[{"a", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}]}]}], "}"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"ar", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", 
            RowBox[{
             RowBox[{"2", "*", 
              RowBox[{"(", 
               RowBox[{"j", "-", "1"}], ")"}]}], "+", "1"}]}], "]"}], "]"}], 
         "=", 
         RowBox[{"Re", "[", 
          RowBox[{"a", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "1", ",", "j"}], "]"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"ar", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", 
            RowBox[{
             RowBox[{"2", "*", 
              RowBox[{"(", 
               RowBox[{"j", "-", "1"}], ")"}]}], "+", "2"}]}], "]"}], "]"}], 
         "=", 
         RowBox[{"Im", "[", 
          RowBox[{"a", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "1", ",", "j"}], "]"}], "]"}], "]"}]}], ";"}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "a", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", 
         RowBox[{"Length", "[", 
          RowBox[{"a", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}]}], "}"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", "ar"}]}], " ",
    "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.553345007237874*^9, 3.553345040197028*^9}, {
  3.553345078745764*^9, 3.553345111417156*^9}, {3.553345175194175*^9, 
  3.553345212554553*^9}, {3.553345271843257*^9, 3.553345289376647*^9}, {
  3.5533453812384167`*^9, 3.553345422945856*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rpo1cRot", "//", "Dimensions"}]], "Input",
 CellChangeTimes->{{3.553345151965248*^9, 3.553345162232806*^9}, {
  3.55334524020214*^9, 3.5533452412688303`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"165", ",", "2"}], "}"}]], "Output",
 CellChangeTimes->{3.553398851502365*^9, 3.553399928664456*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"rpo1Rot", "=", 
   RowBox[{"trajSliceC2re", "[", "rpo1cRot", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.55325424723281*^9, 3.5532542712130823`*^9}, {
  3.553345119318305*^9, 3.553345121097538*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"rpo2Rot", "=", 
   RowBox[{"trajSliceC2re", "[", "rpo2cRot", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.553398859637154*^9, 3.553398862030642*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"rpo3Rot", "=", 
   RowBox[{"trajSliceC2re", "[", "rpo3cRot", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.553399459001834*^9, 3.553399462435916*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "[", "rpo1Rot", "]"}]], "Input",
 CellChangeTimes->{{3.553254358552341*^9, 3.5532543667153473`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"165", ",", "62"}], "}"}]], "Output",
 CellChangeTimes->{3.5533989085991287`*^9, 3.5533999290274887`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rpo1Rot", "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.553344625816732*^9, 3.553344630313445*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "9.066596874658945`*^-16", ",", "0.43176504257652154`", ",", 
   "0.4154322579372206`", ",", "0.15707721222375023`", ",", 
   RowBox[{"-", "0.48659482577916274`"}], ",", "0.0181486648333625`", ",", 
   RowBox[{"-", "0.03662380281782299`"}], ",", 
   RowBox[{"-", "0.078038619219029`"}], ",", "0.06333185420978799`", ",", 
   RowBox[{"-", "0.07463308611166067`"}], ",", "0.01050994505011549`", ",", 
   "0.034674881159344965`", ",", 
   RowBox[{"-", "0.004489125599258006`"}], ",", "0.008386016068020672`", ",", 
   
   RowBox[{"-", "0.005389017235246541`"}], ",", 
   RowBox[{"-", "0.003688211880370739`"}], ",", "0.0011992883884229066`", ",", 
   RowBox[{"-", "0.0011344690641402948`"}], ",", "0.000635114887367958`", ",",
    "0.0001254048982380472`", ",", 
   RowBox[{"-", "0.00010961823338257186`"}], ",", "0.00026265154792946745`", 
   ",", 
   RowBox[{"-", "0.00006778256954054036`"}], ",", 
   RowBox[{"-", "0.000018768929377130678`"}], ",", 
   RowBox[{"-", "1.3509785636308518`*^-6"}], ",", 
   RowBox[{"-", "0.00003108837791428853`"}], ",", "0.000010416687900204515`", 
   ",", "7.742875713647914`*^-7", ",", "6.285998502882146`*^-7", ",", 
   "2.954991021126653`*^-6", ",", 
   RowBox[{"-", "1.1446233413794213`*^-6"}], ",", "3.938375006972304`*^-7", 
   ",", 
   RowBox[{"-", "1.2888334220287135`*^-7"}], ",", 
   RowBox[{"-", "3.3978264397930487`*^-7"}], ",", "9.54506064663238`*^-8", 
   ",", 
   RowBox[{"-", "6.993605648327132`*^-8"}], ",", "2.734589612213551`*^-8", 
   ",", "3.196079082964871`*^-8", ",", 
   RowBox[{"-", "8.434586632966095`*^-9"}], ",", "9.036395396190606`*^-9", 
   ",", 
   RowBox[{"-", "3.5807004037900816`*^-9"}], ",", 
   RowBox[{"-", "2.0819176271326555`*^-9"}], ",", "6.636254908584842`*^-10", 
   ",", 
   RowBox[{"-", "1.2043117940556703`*^-9"}], ",", "3.5629281887842324`*^-10", 
   ",", "1.4324860375284264`*^-10", ",", 
   RowBox[{"-", "3.334274604396497`*^-11"}], ",", "1.2951834751308976`*^-10", 
   ",", 
   RowBox[{"-", "3.7586152987508945`*^-11"}], ",", 
   RowBox[{"-", "1.5751163583233967`*^-11"}], ",", "3.786665933575492`*^-12", 
   ",", 
   RowBox[{"-", "1.0583843031357675`*^-11"}], ",", "4.05304431772392`*^-12", 
   ",", "1.992354389612102`*^-12", ",", 
   RowBox[{"-", "1.0990926249343716`*^-12"}], ",", "1.1125995052761465`*^-12",
    ",", 
   RowBox[{"-", "4.1319419889209394`*^-13"}], ",", 
   RowBox[{"-", "3.993962010186574`*^-13"}], ",", "2.0488948196196093`*^-13", 
   ",", 
   RowBox[{"-", "1.7900426997505886`*^-13"}], ",", "4.862843276554483`*^-14", 
   ",", "8.069135987974115`*^-14"}], "}"}]], "Output",
 CellChangeTimes->{3.553398911068935*^9, 3.553399929065337*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"plot3dTraj", "[", 
   RowBox[{"a_", ",", "proj_", ",", 
    RowBox[{"col_:", "Black"}]}], "]"}], ":=", 
  RowBox[{"Graphics3D", "[", 
   RowBox[{"{", 
    RowBox[{"col", ",", 
     RowBox[{"Line", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"a", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", 
             RowBox[{"proj", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], " ", "]"}], "]"}], ",", 
          RowBox[{"a", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", 
             RowBox[{"proj", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], " ", "]"}], "]"}], ",", 
          RowBox[{"a", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", 
             RowBox[{"proj", "[", 
              RowBox[{"[", "3", "]"}], "]"}]}], " ", "]"}], "]"}]}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "a", "]"}]}], "}"}]}], "]"}], "]"}]}], "}"}],
    "]"}]}]], "Input",
 CellChangeTimes->{{3.5532534891222553`*^9, 3.55325352255608*^9}, {
  3.553254427985331*^9, 3.553254436904654*^9}, {3.553254670729519*^9, 
  3.553254734454301*^9}, {3.553399489060199*^9, 3.553399508785584*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"plot3dTraj", "[", 
    RowBox[{"rpo1Rot", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "]"}], ",", 
   RowBox[{"plot3dTraj", "[", 
    RowBox[{"rpo2Rot", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", "Green"}], "]"}], ",", 
   RowBox[{"plot3dTraj", "[", 
    RowBox[{"rpo3Rot", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", "Red"}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.553253472551371*^9, 3.553253475635148*^9}, {
  3.5532547777957687`*^9, 3.553254793116294*^9}, {3.553398917349222*^9, 
  3.5533989310106153`*^9}, {3.553399474660068*^9, 3.5533994782224283`*^9}, {
  3.553399516142727*^9, 3.553399523430921*^9}}],

Cell[BoxData[
 Graphics3DBox[{Line3DBox[CompressedData["
1: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
KFav/n+/fvB/v/4PClM1zg==
    "]], 
   {RGBColor[0, 1, 0], Line3DBox[CompressedData["
1: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
Cf4HzvHUGQ==
     "]]}, 
   {RGBColor[1, 0, 0], Line3DBox[CompressedData["
1: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
     "]]}}]], "Output",
 CellChangeTimes->{{3.553398914026721*^9, 3.553398932096931*^9}, 
   3.553399038151936*^9, 3.553399479461747*^9, {3.553399511310843*^9, 
   3.553399524411158*^9}, {3.553399629234239*^9, 3.5533996508457108`*^9}, 
   3.553399929595167*^9}]
}, Open  ]]
},
WindowSize->{740, 746},
WindowMargins->{{Automatic, 33}, {Automatic, 0}},
FrontEndVersion->"8.0 for Linux x86 (64-bit) (October 10, 2011)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[557, 20, 138, 2, 30, "Input"],
Cell[CellGroupData[{
Cell[720, 26, 285, 5, 30, "Input"],
Cell[1008, 33, 89, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1134, 39, 79, 1, 30, "Input"],
Cell[1216, 42, 103, 1, 30, "Output"]
}, Open  ]],
Cell[1334, 46, 472, 12, 30, "Input"],
Cell[1809, 60, 529, 14, 50, "Input"],
Cell[2341, 76, 342, 6, 49, "Text"],
Cell[2686, 84, 287, 7, 30, "Input"],
Cell[CellGroupData[{
Cell[2998, 95, 233, 5, 30, "Input"],
Cell[3234, 102, 120, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3391, 110, 488, 13, 30, "Input"],
Cell[3882, 125, 877, 18, 214, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4796, 148, 237, 5, 30, "Input"],
Cell[5036, 155, 120, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5193, 163, 362, 9, 30, "Input"],
Cell[5558, 174, 71, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5666, 180, 119, 2, 30, "Input"],
Cell[5788, 184, 71, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5896, 190, 120, 2, 30, "Input"],
Cell[6019, 194, 73, 1, 30, "Output"]
}, Open  ]],
Cell[6107, 198, 488, 12, 50, "Input"],
Cell[6598, 212, 239, 6, 30, "Input"],
Cell[6840, 220, 237, 6, 30, "Input"],
Cell[CellGroupData[{
Cell[7102, 230, 180, 4, 30, "Input"],
Cell[7285, 236, 140, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7462, 244, 331, 6, 30, "Input"],
Cell[7796, 252, 167, 4, 30, "Output"]
}, Open  ]],
Cell[7978, 259, 467, 12, 30, "Input"],
Cell[8448, 273, 567, 12, 30, "Input"],
Cell[9018, 287, 133, 2, 30, "Input"],
Cell[9154, 291, 415, 12, 30, "Input"],
Cell[9572, 305, 296, 7, 30, "Input"],
Cell[9871, 314, 755, 18, 50, "Input"],
Cell[10629, 334, 386, 10, 50, "Input"],
Cell[11018, 346, 1407, 34, 107, "Input"],
Cell[12428, 382, 1893, 50, 126, "Input"],
Cell[14324, 434, 1911, 48, 145, "Input"],
Cell[16238, 484, 677, 20, 50, "Input"],
Cell[16918, 506, 285, 8, 30, "Input"],
Cell[17206, 516, 285, 8, 30, "Input"],
Cell[17494, 526, 286, 8, 30, "Input"],
Cell[CellGroupData[{
Cell[17805, 538, 133, 2, 30, "Input"],
Cell[17941, 542, 144, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18122, 550, 135, 2, 30, "Input"],
Cell[18260, 554, 117, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18414, 562, 133, 2, 30, "Input"],
Cell[18550, 566, 117, 3, 30, "Output"]
}, Open  ]],
Cell[18682, 572, 875, 16, 30, "Input"],
Cell[CellGroupData[{
Cell[19582, 592, 448, 10, 30, "Input"],
Cell[20033, 604, 687, 13, 93, "Message"],
Cell[20723, 619, 690, 13, 93, "Message"],
Cell[21416, 634, 690, 13, 93, "Message"],
Cell[22109, 649, 532, 11, 23, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22678, 665, 352, 9, 30, "Input"],
Cell[23033, 676, 690, 13, 93, "Message"],
Cell[23726, 691, 688, 13, 93, "Message"],
Cell[24417, 706, 688, 13, 93, "Message"],
Cell[25108, 721, 534, 11, 23, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25679, 737, 132, 2, 30, "Input"],
Cell[25814, 741, 143, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25994, 749, 132, 2, 30, "Input"],
Cell[26129, 753, 164, 4, 30, "Output"]
}, Open  ]],
Cell[26308, 760, 2358, 65, 183, "Input"],
Cell[28669, 827, 2396, 66, 183, "Input"],
Cell[CellGroupData[{
Cell[31090, 897, 182, 3, 30, "Input"],
Cell[31275, 902, 139, 3, 30, "Output"]
}, Open  ]],
Cell[31429, 908, 237, 5, 30, "Input"],
Cell[31669, 915, 187, 4, 30, "Input"],
Cell[31859, 921, 187, 4, 30, "Input"],
Cell[CellGroupData[{
Cell[32071, 929, 137, 2, 30, "Input"],
Cell[32211, 933, 144, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[32392, 941, 149, 3, 30, "Input"],
Cell[32544, 946, 2683, 52, 244, "Output"]
}, Open  ]],
Cell[35242, 1001, 1292, 35, 107, "Input"],
Cell[CellGroupData[{
Cell[36559, 1040, 780, 19, 50, "Input"],
Cell[37342, 1061, 40667, 671, 447, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
