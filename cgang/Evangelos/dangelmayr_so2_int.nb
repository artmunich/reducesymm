(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    320230,       6533]
NotebookOptionsPosition[    316195,       6407]
NotebookOutlinePosition[    316551,       6423]
CellTagsIndexPosition[    316508,       6420]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["ES \tCreated file \t\t2012 -04-23", "Text",
 CellChangeTimes->{{3.544184874997901*^9, 3.544184929678816*^9}}],

Cell[TextData[{
 "Integrate and visualize phase space of Dangelmayr system with O(2)-> SO(2) \
symmetry breaking term, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Mu]", "2"], "\[Rule]", " ", 
    RowBox[{
     SubscriptBox["\[Mu]", "2"], "-", 
     RowBox[{"i", " ", 
      SubscriptBox["e", "2"]}]}]}], TraditionalForm]]],
 "."
}], "Text",
 CellChangeTimes->{{3.544184936182323*^9, 3.54418499075439*^9}, {
  3.5441854274209633`*^9, 3.544185534107278*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.544772277445504*^9, 3.54477229320197*^9}}],

Cell["Aesthetics, functionality etc", "Text",
 CellChangeTimes->{{3.544963378135149*^9, 3.5449634000763483`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"manAppear", "=", 
   RowBox[{"Appearance", "\[Rule]", " ", "\"\<Open\>\""}]}], ";"}]], "Input",
 CellChangeTimes->{{3.544963415618672*^9, 3.544963439414976*^9}}],

Cell["Pick default parameters. ", "Text",
 CellChangeTimes->{{3.54416890101201*^9, 3.544168908187469*^9}, {
   3.5441793192258787`*^9, 3.544179320817676*^9}, 3.5441849345717916`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"m1o", "=", 
     RowBox[{"-", "0.14"}]}], ";", " ", 
    RowBox[{"m2o", "=", "1.175"}], ";", " ", 
    RowBox[{"c1o", "=", "1"}], ";", " ", 
    RowBox[{"c2o", "=", 
     RowBox[{"-", "1"}]}], ";", " ", 
    RowBox[{"a1o", "=", 
     RowBox[{"-", "0.245"}]}], ";", " ", 
    RowBox[{"a2o", "=", 
     RowBox[{"-", "3.44"}]}], ";", "  ", 
    RowBox[{"b1o", "=", "1.326"}], ";", 
    RowBox[{"b2o", "=", 
     RowBox[{"-", "0.47"}]}], ";", " ", 
    RowBox[{"e2o", "=", "0.855"}], ";"}], "*)"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Lei", "'"}], "s", " ", "parameters", " ", "for", " ", 
    "quasiperiodic", " ", 
    RowBox[{"behavior", "."}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.5441689886161137`*^9, 3.544169008673305*^9}, {
   3.54416910786028*^9, 3.544169111716692*^9}, {3.544169286793989*^9, 
   3.544169347136836*^9}, {3.5441720679255457`*^9, 3.544172111412084*^9}, {
   3.544172471993565*^9, 3.5441724918490562`*^9}, {3.5441725897472687`*^9, 
   3.5441726177252827`*^9}, {3.54417266756569*^9, 3.544172808776225*^9}, {
   3.54417938538064*^9, 3.54417939889005*^9}, {3.544179464414268*^9, 
   3.544179472126401*^9}, {3.544263774133905*^9, 3.544263850940093*^9}, {
   3.544263936785104*^9, 3.5442639459780607`*^9}, 3.544332285207025*^9, {
   3.544332638878726*^9, 3.544332685327684*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"m1o", "=", 
    RowBox[{"-", "0.337"}]}], ";", " ", 
   RowBox[{"m2o", "=", "0.27"}], ";", " ", 
   RowBox[{"c1o", "=", "1"}], ";", " ", 
   RowBox[{"c2o", "=", "1"}], ";", " ", 
   RowBox[{"a1o", "=", 
    RowBox[{"-", "0.4"}]}], ";", " ", 
   RowBox[{"b1o", "=", "1.6"}], ";", " ", 
   RowBox[{"a2o", "=", 
    RowBox[{"-", "6"}]}], ";", " ", 
   RowBox[{"b2o", "=", 
    RowBox[{"-", "0.1"}]}], ";", " ", 
   RowBox[{"e2o", "=", "1.217"}], ";", " ", 
   RowBox[{"e1o", "=", "0"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Evangelos", " ", "parameters", " ", "for", " ", "chaotic", " ", 
     "system"}], ",", " ", 
    RowBox[{
    "perhaps", " ", "too", " ", "interesting", " ", "of", " ", "a", " ", 
     "behavior", " ", "for", " ", "first", " ", "study"}]}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.544263767126932*^9, 3.5442637691236343`*^9}, {
  3.5442640744132423`*^9, 3.5442640765960484`*^9}, {3.5443326575090237`*^9, 
  3.544332658525818*^9}, {3.544334915044753*^9, 3.544334960790547*^9}, {
  3.5443611702414503`*^9, 3.544361173756879*^9}, {3.5443657069770527`*^9, 
  3.544365711468389*^9}, {3.5526338139688597`*^9, 3.552633816990733*^9}},
 FontWeight->"Plain"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"m1o", "=", 
    RowBox[{"-", "0.337"}]}], ";", " ", 
   RowBox[{"m2o", "=", "0.27"}], ";", " ", 
   RowBox[{"c1o", "=", "1"}], ";", " ", 
   RowBox[{"c2o", "=", "1"}], ";", " ", 
   RowBox[{"a1o", "=", 
    RowBox[{"-", "1.4"}]}], ";", " ", 
   RowBox[{"b1o", "=", "1.6"}], ";", " ", 
   RowBox[{"a2o", "=", 
    RowBox[{"-", "6"}]}], ";", " ", 
   RowBox[{"b2o", "=", 
    RowBox[{"-", "0.1"}]}], ";", " ", 
   RowBox[{"e2o", "=", "1.217"}], ";", " ", 
   RowBox[{"e1o", "=", "0"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"Bryce", " ", 
    RowBox[{"values", "?"}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.552365526778607*^9, 3.55236559962586*^9}, 
   3.552633823848053*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"m1o", "=", 
    RowBox[{"-", "0.234"}]}], ";", " ", 
   RowBox[{"m2o", "=", "0.28"}], ";", " ", 
   RowBox[{"c1o", "=", "1"}], ";", " ", 
   RowBox[{"c2o", "=", "1"}], ";", " ", 
   RowBox[{"a1o", "=", 
    RowBox[{"-", "1.4"}]}], ";", " ", 
   RowBox[{"b1o", "=", "1.526"}], ";", " ", 
   RowBox[{"a2o", "=", 
    RowBox[{"-", "2.18"}]}], ";", " ", 
   RowBox[{"b2o", "=", 
    RowBox[{"-", "0.1"}]}], ";", " ", 
   RowBox[{"e2o", "=", "1.217"}], ";", " ", 
   RowBox[{"e1o", "=", "0"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "Evangelos", " ", "values", " ", "for", " ", "2", " ", "relative", " ", 
    "equilibria"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.5523735893788347`*^9, 3.552373649085887*^9}, 
   3.552633828344347*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"m1o", "=", 
     RowBox[{"-", "0.38"}]}], ";", " ", 
    RowBox[{"m2o", "=", "0.38"}], ";", " ", 
    RowBox[{"c1o", "=", 
     RowBox[{"-", "1"}]}], ";", " ", 
    RowBox[{"c2o", "=", "1"}], ";", " ", 
    RowBox[{"a1o", "=", 
     RowBox[{"-", "1.31"}]}], ";", " ", 
    RowBox[{"b1o", "=", "1.504"}], ";", " ", 
    RowBox[{"a2o", "=", 
     RowBox[{"-", "2.6"}]}], ";", " ", 
    RowBox[{"b2o", "=", "0.22"}], ";", " ", 
    RowBox[{"e2o", "=", "1.61"}], ";", " ", 
    RowBox[{"e1o", "=", "0"}], ";"}], "  ", "*)"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Predrag", "'"}], "s", " ", 
    RowBox[{"values", "?"}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.553422514930887*^9, 3.553422576976156*^9}, {
  3.553578255491984*^9, 3.553578261230618*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"m1o", "=", "2.0"}], ";", " ", 
    RowBox[{"m2o", "=", "1.0"}], ";", 
    RowBox[{"a1o", "=", 
     RowBox[{"-", "7.5"}]}], ";", 
    RowBox[{"a2o", "=", 
     RowBox[{"-", "2"}]}], ";", 
    RowBox[{"b1o", "=", 
     RowBox[{"-", "4"}]}], ";", 
    RowBox[{"b2o", "=", 
     RowBox[{"-", "2.25"}]}], ";", 
    RowBox[{"c1o", "=", "10"}], ";", 
    RowBox[{"c2o", "=", 
     RowBox[{"-", "35"}]}], ";", 
    RowBox[{"e2o", "=", "2"}], ";"}], "*)"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"Keith", "'"}], "s", " ", "parameters"}], ",", " ", 
    RowBox[{"no", " ", "chaos"}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.54463109491945*^9, 3.544631173599331*^9}, {
  3.5446326541030207`*^9, 3.5446326564723043`*^9}, {3.544634130866683*^9, 
  3.544634140481296*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"m1o", "=", 
    RowBox[{"-", "0.337"}]}], ";", " ", 
   RowBox[{"m2o", "=", "0.27"}], ";", " ", 
   RowBox[{"c1o", "=", "1"}], ";", " ", 
   RowBox[{"c2o", "=", 
    RowBox[{"-", "1"}]}], ";", " ", 
   RowBox[{"a1o", "=", 
    RowBox[{"-", "1.5"}]}], ";", " ", 
   RowBox[{"b1o", "=", "1.583"}], ";", " ", 
   RowBox[{"a2o", "=", 
    RowBox[{"-", "6.19"}]}], ";", " ", 
   RowBox[{"b2o", "=", 
    RowBox[{"-", "0.115"}]}], ";", " ", 
   RowBox[{"e2o", "=", "1.211"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Evangelos", " ", "parameters", " ", "for", " ", "chaotic", " ", 
     "system"}], ",", " ", 
    RowBox[{
     RowBox[{
     "appears", " ", "to", " ", "be", " ", "fit", " ", "into", " ", "a", " ", 
      "2"}], "-", 
     RowBox[{
     "dimensional", " ", "branched", " ", "manifold", " ", 
      "description"}]}]}], "*)"}], "*)"}]], "Input",
 CellChangeTimes->{{3.544334395639483*^9, 3.544334438139592*^9}, {
  3.544334953574869*^9, 3.544335043790042*^9}, {3.544361161306116*^9, 
  3.544361166784646*^9}, {3.544366618847971*^9, 3.544366622560454*^9}, {
  3.5443688450096188`*^9, 3.5443688511437063`*^9}, {3.544808371366012*^9, 
  3.544808375600779*^9}, {3.544808878995824*^9, 3.5448088824055223`*^9}}],

Cell[TextData[{
 "Create function which defines and integrates the system for given \
parameters, returns ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["z", "1"], ",", 
    SubscriptBox["z", "2"]}], TraditionalForm]]],
 " as function of time."
}], "Text",
 CellChangeTimes->{{3.544180523048514*^9, 3.544180557296008*^9}, {
  3.5441855455092916`*^9, 3.544185562202907*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"solPar", "[", 
   RowBox[{
   "t_", ",", "m1_", ",", " ", "m2_", ",", " ", "c1_", ",", " ", "c2_", ",", 
    " ", "a1_", ",", " ", "a2_", ",", " ", "b1_", ",", " ", "b2_", ",", " ", 
    "e1_", ",", "e2_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"solPar", "[", 
    RowBox[{
    "t", ",", "m1", ",", " ", "m2", ",", " ", "c1", ",", " ", "c2", ",", " ", 
     "a1", ",", "  ", "a2", ",", "b1", ",", " ", "b2", ",", " ", "e2"}], 
    "]"}], "=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"eqs", ",", "vars", ",", "sol"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"eqs", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"z1", "[", "t", "]"}], ",", "t"}], "]"}], "\[Equal]", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"m1", "-", 
              RowBox[{"I", " ", "e1"}]}], ")"}], " ", 
            RowBox[{"z1", "[", "t", "]"}]}], "+", 
           RowBox[{"a1", " ", 
            RowBox[{"z1", "[", "t", "]"}], 
            SuperscriptBox[
             RowBox[{"Abs", "[", 
              RowBox[{"z1", "[", "t", "]"}], "]"}], "2"]}], "+", 
           RowBox[{"b1", " ", 
            RowBox[{"z1", "[", "t", "]"}], 
            SuperscriptBox[
             RowBox[{"Abs", "[", 
              RowBox[{"z2", "[", "t", "]"}], "]"}], "2"]}], "+", 
           RowBox[{"c1", " ", 
            RowBox[{"Conjugate", "[", 
             RowBox[{"z1", "[", "t", "]"}], "]"}], 
            RowBox[{"z2", "[", "t", "]"}]}]}]}], ",", " ", 
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"z2", "[", "t", "]"}], ",", "t"}], "]"}], "\[Equal]", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"m2", "-", 
              RowBox[{"I", " ", "e2"}]}], ")"}], " ", 
            RowBox[{"z2", "[", "t", "]"}]}], "+", 
           RowBox[{"a2", " ", 
            RowBox[{"z2", "[", "t", "]"}], 
            SuperscriptBox[
             RowBox[{"Abs", "[", 
              RowBox[{"z1", "[", "t", "]"}], "]"}], "2"]}], "+", 
           RowBox[{"b2", " ", 
            RowBox[{"z2", "[", "t", "]"}], 
            SuperscriptBox[
             RowBox[{"Abs", "[", 
              RowBox[{"z2", "[", "t", "]"}], "]"}], "2"]}], "+", 
           RowBox[{"c2", " ", 
            SuperscriptBox[
             RowBox[{"z1", "[", "t", "]"}], "2"]}]}]}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"vars", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"z1", "[", "t", "]"}], ",", 
         RowBox[{"z2", "[", "t", "]"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"sol", "[", 
        RowBox[{"z1ic_", ",", "z2ic_", ",", "t1_", ",", "t2_"}], "]"}], ":=", 
       
       RowBox[{"NDSolve", "[", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"eqs", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"z1", "[", "0", "]"}], "\[Equal]", "z1ic"}], ",", 
              RowBox[{
               RowBox[{"z2", "[", "0", "]"}], "\[Equal]", "z2ic"}]}], "}"}]}],
            "}"}], "]"}], ",", "vars", ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "t1", ",", "t2"}], "}"}], ",", 
         RowBox[{"Method", "\[Rule]", "\"\<StiffnessSwitching\>\""}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"sol", "[", 
       RowBox[{
        RowBox[{"0.1", "+", 
         RowBox[{"0.2", "I"}]}], ",", 
        RowBox[{"0.2", "-", 
         RowBox[{"0.3", "I"}]}], ",", "0", ",", "600"}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.544173660678701*^9, 3.544173886710997*^9}, {
   3.544176666448263*^9, 3.544176669861157*^9}, {3.544176705932578*^9, 
   3.5441767352078743`*^9}, {3.544176806366824*^9, 3.544176823163671*^9}, 
   3.544176856596731*^9, {3.54417700071743*^9, 3.544177031620178*^9}, {
   3.544177187820319*^9, 3.5441771881393957`*^9}, {3.544179339096092*^9, 
   3.54417936110604*^9}, {3.54418496829361*^9, 3.544184970787209*^9}, {
   3.544264097496628*^9, 3.5442641262408447`*^9}, {3.5443355110063562`*^9, 
   3.5443355277091827`*^9}, {3.544799262128504*^9, 3.544799267013712*^9}, {
   3.5522094354432592`*^9, 3.552209438339329*^9}, {3.552209483641848*^9, 
   3.552209487175902*^9}, 3.5526334698169413`*^9, {3.552633840377737*^9, 
   3.552633860534544*^9}, {3.5527525022878017`*^9, 3.552752506638782*^9}}],

Cell["\<\
Similar to solPar, but also specify initial condition, tmin, tmax.\
\>", "Text",
 CellChangeTimes->{{3.544775615846876*^9, 3.544775640751071*^9}, {
  3.544775694680209*^9, 3.544775697576086*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"solParIC", "[", 
   RowBox[{
   "t_", ",", "m1_", ",", " ", "m2_", ",", " ", "c1_", ",", " ", "c2_", ",", 
    " ", "a1_", ",", " ", "a2_", ",", " ", "b1_", ",", " ", "b2_", ",", "e1_",
     ",", " ", "e2_", ",", "ic_List", ",", "tmin_", ",", "tmax_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"solParIC", "[", 
    RowBox[{
    "t", ",", "m1", ",", " ", "m2", ",", " ", "c1", ",", " ", "c2", ",", " ", 
     "a1", ",", "a2", ",", " ", "b1", ",", " ", "b2", ",", "e1", ",", " ", 
     "e2", ",", "ic", ",", "tmin", ",", "tmax"}], "]"}], "=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"eqs", ",", "vars", ",", "sol"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"eqs", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"z1", "[", "t", "]"}], ",", "t"}], "]"}], "\[Equal]", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"m1", "-", 
              RowBox[{"I", " ", "e1"}]}], ")"}], " ", 
            RowBox[{"z1", "[", "t", "]"}]}], "+", 
           RowBox[{"a1", " ", 
            RowBox[{"z1", "[", "t", "]"}], 
            SuperscriptBox[
             RowBox[{"Abs", "[", 
              RowBox[{"z1", "[", "t", "]"}], "]"}], "2"]}], "+", 
           RowBox[{"b1", " ", 
            RowBox[{"z1", "[", "t", "]"}], 
            SuperscriptBox[
             RowBox[{"Abs", "[", 
              RowBox[{"z2", "[", "t", "]"}], "]"}], "2"]}], "+", 
           RowBox[{"c1", " ", 
            RowBox[{"Conjugate", "[", 
             RowBox[{"z1", "[", "t", "]"}], "]"}], 
            RowBox[{"z2", "[", "t", "]"}]}]}]}], ",", " ", 
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"z2", "[", "t", "]"}], ",", "t"}], "]"}], "\[Equal]", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"m2", "-", 
              RowBox[{"I", " ", "e2"}]}], ")"}], " ", 
            RowBox[{"z2", "[", "t", "]"}]}], "+", 
           RowBox[{"a2", " ", 
            RowBox[{"z2", "[", "t", "]"}], 
            SuperscriptBox[
             RowBox[{"Abs", "[", 
              RowBox[{"z1", "[", "t", "]"}], "]"}], "2"]}], "+", 
           RowBox[{"b2", " ", 
            RowBox[{"z2", "[", "t", "]"}], 
            SuperscriptBox[
             RowBox[{"Abs", "[", 
              RowBox[{"z2", "[", "t", "]"}], "]"}], "2"]}], "+", 
           RowBox[{"c2", " ", 
            SuperscriptBox[
             RowBox[{"z1", "[", "t", "]"}], "2"]}]}]}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"vars", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"z1", "[", "t", "]"}], ",", 
         RowBox[{"z2", "[", "t", "]"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"sol", "[", 
        RowBox[{"z1ic_", ",", "z2ic_", ",", "t1_", ",", "t2_"}], "]"}], ":=", 
       
       RowBox[{"NDSolve", "[", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"eqs", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"z1", "[", "0", "]"}], "\[Equal]", "z1ic"}], ",", 
              RowBox[{
               RowBox[{"z2", "[", "0", "]"}], "\[Equal]", "z2ic"}]}], "}"}]}],
            "}"}], "]"}], ",", "vars", ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "t1", ",", "t2"}], "}"}], ",", 
         RowBox[{"Method", "\[Rule]", "\"\<StiffnessSwitching\>\""}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"sol", "[", 
        RowBox[{
         RowBox[{"ic", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"ic", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", "tmin", ",", "tmax"}], "]"}], "//",
        "Flatten"}]}]}], "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.544775602178562*^9, 3.544775612121307*^9}, {
   3.5447756569050083`*^9, 3.544775724191353*^9}, 3.54479962658994*^9, {
   3.547563253637734*^9, 3.547563255118384*^9}, 3.5526334700694237`*^9, {
   3.552633873666651*^9, 3.552633902859276*^9}, {3.552634448438353*^9, 
   3.5526344517254972`*^9}}],

Cell["\<\
Function which finds relative equilibria for given parameters ( e1=0)\
\>", "Text",
 CellChangeTimes->{{3.544775248577076*^9, 3.544775279670206*^9}, {
  3.552633924745214*^9, 3.5526339291687317`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"reqbPar", "[", 
   RowBox[{
   "m1_", ",", "m2_", ",", "c1_", ",", "c2_", ",", "a1_", ",", "a2_", ",", 
    "b1_", ",", "b2_", ",", "e1_", ",", "e2_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"sol", ",", "A1", ",", "A2", ",", "w"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"A1", "[", 
       RowBox[{"u_", ",", "v_"}], "]"}], ":=", 
      RowBox[{"m1", "+", 
       RowBox[{"a1", " ", "u"}], "+", 
       RowBox[{"b1", " ", "v"}]}]}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"A2", "[", 
       RowBox[{"u_", ",", "v_"}], "]"}], ":=", 
      RowBox[{"m2", "+", 
       RowBox[{"a2", " ", "u"}], "+", 
       RowBox[{"b2", " ", "v"}]}]}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{"sol", "=", 
      RowBox[{"Solve", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"c2", " ", "u", " ", 
             RowBox[{"A1", "[", 
              RowBox[{"u", ",", "v"}], "]"}]}], "-", 
            RowBox[{"c1", " ", "v", " ", 
             RowBox[{"A2", "[", 
              RowBox[{"u", ",", "v"}], "]"}]}]}], "\[Equal]", "0"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"A1", "[", 
                   RowBox[{"u", ",", "v"}], "]"}], "/", "c1"}], ")"}], "2"], 
               "-", " ", "v"}], ")"}], " ", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"c2", " ", "u"}], "+", 
                RowBox[{"2", "c1", " ", "v"}]}], ")"}], "^", "2"}]}], "+", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "2"}], "e1"}], "+", "e2"}], ")"}], "^", "2"}], 
             " ", 
             RowBox[{"v", "^", "2"}]}]}], "\[Equal]", "0"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"u", ",", "v"}], "}"}], ",", "Reals"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"sol", "=", 
      RowBox[{"Select", "[", 
       RowBox[{"sol", ",", 
        RowBox[{
         RowBox[{"And", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"u", "/.", "#"}], ")"}], "\[GreaterEqual]", " ", "0"}], 
           " ", ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"v", "/.", "#"}], ")"}], ">", " ", "0"}]}], "]"}], 
         "&"}]}], "]"}]}], ";", " ", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Select", " ", "non"}], "-", 
       RowBox[{"negative", " ", "solutions"}]}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "sol", "]"}], ">", "0"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"u", ",", "v", ",", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], " ", "u", " ", 
            RowBox[{
             RowBox[{"A1", "[", 
              RowBox[{"u", ",", "v"}], "]"}], " ", "/", "c1"}]}], ")"}], ",", 
          
          FractionBox[
           RowBox[{"2", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "2"}], "e1"}], "+", "e2"}], ")"}], " ", "u", " ", 
            "v"}], 
           RowBox[{
            RowBox[{"c2", " ", "u"}], " ", "+", 
            RowBox[{"2", " ", "c1", " ", "v"}]}]]}], "}"}], "/.", "sol"}]}], 
      "]"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.544763952253755*^9, 3.544764061400659*^9}, {
   3.544764100533409*^9, 3.5447642505044823`*^9}, {3.544764287399029*^9, 
   3.544764290366967*^9}, {3.544764507142949*^9, 3.544764508077491*^9}, {
   3.54477149505954*^9, 3.544771572157584*^9}, {3.544772035968287*^9, 
   3.544772108827087*^9}, {3.544772162387499*^9, 3.544772168823081*^9}, {
   3.544772214155171*^9, 3.5447722465172987`*^9}, {3.5447723756569157`*^9, 
   3.5447724046379633`*^9}, {3.544772607175826*^9, 3.544772611197515*^9}, {
   3.5447726826847477`*^9, 3.54477276075928*^9}, {3.544772790884742*^9, 
   3.544772799248806*^9}, {3.5447728325046597`*^9, 3.544772866118198*^9}, {
   3.544773040481337*^9, 3.544773056692416*^9}, {3.544773095941741*^9, 
   3.544773212459013*^9}, {3.544775454514896*^9, 3.5447755064521017`*^9}, {
   3.5447755393157167`*^9, 3.5447755510095453`*^9}, {3.5447787314172688`*^9, 
   3.544778740658226*^9}, 3.552633576050851*^9, {3.55274961174993*^9, 
   3.552749633463921*^9}, {3.5527522949067497`*^9, 3.552752300473484*^9}}],

Cell["Equations in invariant polynomials (with e1 = 0).", "Text",
 CellChangeTimes->{{3.5526340674925127`*^9, 3.552634093261877*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"varsIP", "=", 
   RowBox[{"{", 
    RowBox[{"u", ",", "v", ",", "w", ",", "q"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eqsIP", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"2", "m1", "  ", "u"}], "+", 
      RowBox[{"2", "a1", " ", 
       SuperscriptBox["u", "2"]}], "+", 
      RowBox[{"2", "b1", " ", "u", " ", "v"}], "+", 
      RowBox[{"c1", " ", "w"}]}], ",", 
     RowBox[{
      RowBox[{"2", "m2", " ", "v"}], "+", 
      RowBox[{"2", "a2", " ", "u", " ", "v"}], "+", 
      RowBox[{"2", "b2", " ", 
       SuperscriptBox["v", "2"]}], "+", 
      RowBox[{"c2", " ", "w"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", "m1"}], "+", "m2"}], ")"}], "w"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", "a1"}], "+", "a2"}], ")"}], "u", " ", "w"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", "b1"}], "+", "b2"}], ")"}], "v", " ", "w"}], "+", 
      RowBox[{"4", "c1", " ", "u", " ", "v"}], "+", " ", 
      RowBox[{"2", "c2", " ", 
       SuperscriptBox["u", "2"]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], "e1"}], "+", "e2"}], ")"}], " ", "q"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", "m1"}], "+", "m2"}], ")"}], "q"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", "a1"}], "+", "a2"}], ")"}], "u", " ", "q"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", "b1"}], "+", "b2"}], ")"}], "v", " ", "q"}], " ", "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], "e1"}], "+", "e2"}], ")"}], " ", "w"}]}], ",", 
     RowBox[{
      SuperscriptBox["w", "2"], "+", 
      SuperscriptBox["q", "2"], "-", 
      RowBox[{"4", 
       SuperscriptBox["u", "2"], "v"}]}]}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.5523722890150347`*^9, {3.552633996243541*^9, 3.5526340023500433`*^9}, {
   3.552634060164688*^9, 3.5526340638174953`*^9}, {3.552749648063727*^9, 
   3.552749670324785*^9}}],

Cell["Function which computes stability matrix", "Text",
 CellChangeTimes->{{3.5523708428945*^9, 3.55237085606427*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"matVar", "[", 
    RowBox[{
    "u_", ",", "v_", ",", "w_", ",", "q_", ",", "m1_", ",", "m2_", ",", "c1_",
      ",", "c2_", ",", "a1_", ",", "a2_", ",", "b1_", ",", "b2_", ",", "e1_", 
     ",", "e2_"}], "]"}], "=", "\[IndentingNewLine]", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"eqsIP", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"varsIP", "[", 
        RowBox[{"[", "j", "]"}], "]"}]}], " ", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "varsIP", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", 
       RowBox[{"Length", "[", "varsIP", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.552370866738681*^9, 3.552370898535379*^9}, {
   3.552370998802874*^9, 3.5523710688610764`*^9}, {3.552372271636759*^9, 
   3.552372298941368*^9}, 3.55263355977071*^9, {3.552752318329315*^9, 
   3.552752322755829*^9}, 3.553583213478351*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"eqsIPsyz", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"2", " ", "m1", " ", "u"}], "+", 
      RowBox[{"2", " ", "a1", " ", 
       RowBox[{"u", "^", "2"}]}], "+", 
      RowBox[{"2", " ", "b1", " ", "u", " ", "v"}], "+", 
      RowBox[{"c1", " ", "w"}]}], ",", 
     RowBox[{
      RowBox[{"2", " ", "m2", " ", "v"}], "+", 
      RowBox[{"2", " ", "a2", " ", "u", " ", "v"}], "+", 
      RowBox[{"2", " ", "b2", " ", 
       RowBox[{"v", "^", "2"}]}], "+", 
      RowBox[{"c2", " ", "w"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", "m1"}], "+", "m2"}], ")"}], " ", "w"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", "a1"}], "+", "a2"}], ")"}], " ", "u", " ", "w"}], 
      "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", "b1"}], "+", "b2"}], ")"}], " ", "v", " ", "w"}], 
      "+", 
      RowBox[{"4", " ", "c1", " ", "u", " ", "v"}], "+", 
      RowBox[{"2", " ", "c2", " ", 
       RowBox[{"u", "^", "2"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", "e1"}], "-", "e2"}], ")"}], " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"4", " ", 
           RowBox[{"u", "^", "2"}], " ", "v"}], "-", 
          RowBox[{"w", "^", "2"}]}], ")"}], "^", 
        RowBox[{"(", 
         RowBox[{"1", "/", "2"}], ")"}]}]}]}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{3.553583208868619*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"matVarSyz", "[", 
    RowBox[{
    "u_", ",", "v_", ",", "w_", ",", "m1_", ",", "m2_", ",", "c1_", ",", 
     "c2_", ",", "a1_", ",", "a2_", ",", "b1_", ",", "b2_", ",", "e1_", ",", 
     "e2_"}], "]"}], "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"eqsIPsyz", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"varsIP", "[", 
        RowBox[{"[", "j", "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{
        RowBox[{"Length", "[", "varsIP", "]"}], "-", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", 
       RowBox[{
        RowBox[{"Length", "[", "varsIP", "]"}], "-", "1"}]}], "}"}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.552751503306903*^9, 3.552751522358857*^9}, {
   3.552752340707636*^9, 3.5527523446992283`*^9}, 3.5535832025990868`*^9}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"varsCart", "=", 
     RowBox[{"{", 
      RowBox[{"x1", ",", "y1", ",", "x2", ",", "y2"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"eqsCartTmp", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ComplexExpand", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"m1", "-", 
            RowBox[{"I", " ", "e1"}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"x1", "+", 
            RowBox[{"I", " ", "y1"}]}], ")"}]}], "+", 
         RowBox[{"a1", " ", 
          RowBox[{"(", 
           RowBox[{"x1", "+", 
            RowBox[{"I", " ", "y1"}]}], ")"}], 
          RowBox[{"(", " ", 
           RowBox[{
            RowBox[{"x1", "^", "2"}], "+", 
            RowBox[{"y1", "^", "2"}]}], ")"}]}], "+", 
         RowBox[{"b1", " ", 
          RowBox[{"(", 
           RowBox[{"x1", "+", 
            RowBox[{"I", " ", "y1"}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"x2", "^", "2"}], "+", " ", 
            RowBox[{"y2", "^", "2"}]}], ")"}]}], "+", 
         RowBox[{"c1", " ", 
          RowBox[{"Conjugate", "[", 
           RowBox[{"(", 
            RowBox[{"x1", "+", 
             RowBox[{"I", " ", "y1"}]}], ")"}], "]"}], 
          RowBox[{"(", 
           RowBox[{"x2", "+", 
            RowBox[{"I", " ", "y2"}]}], ")"}]}]}], "]"}], ",", " ", 
       RowBox[{"ComplexExpand", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"m2", "-", 
            RowBox[{"I", " ", "e2"}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"x2", "+", 
            RowBox[{"I", " ", "y2"}]}], ")"}]}], "+", 
         RowBox[{"a2", " ", 
          RowBox[{"(", 
           RowBox[{"x2", "+", 
            RowBox[{"I", " ", "y2"}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"x1", "^", "2"}], "+", 
            RowBox[{"y1", "^", "2"}]}], ")"}]}], "+", 
         RowBox[{"b2", " ", 
          RowBox[{"(", 
           RowBox[{"x2", "+", 
            RowBox[{"I", " ", "y2"}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"x2", "^", "2"}], "+", 
            RowBox[{"y2", "^", "2"}]}], ")"}]}], "+", 
         RowBox[{"c2", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x1", "+", 
             RowBox[{"I", " ", "y1"}]}], ")"}], "2"]}]}], "]"}]}], "}"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"eqsCart", "=", 
     RowBox[{"ComplexExpand", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Re", "[", 
         RowBox[{"eqsCartTmp", "[", 
          RowBox[{"[", "1", "]"}], "]"}], " ", "]"}], ",", 
        RowBox[{"Im", "[", 
         RowBox[{"eqsCartTmp", "[", 
          RowBox[{"[", "1", "]"}], "]"}], " ", "]"}], ",", 
        RowBox[{"Re", "[", 
         RowBox[{"eqsCartTmp", "[", 
          RowBox[{"[", "2", "]"}], "]"}], " ", "]"}], ",", 
        RowBox[{"Im", "[", 
         RowBox[{"eqsCartTmp", "[", 
          RowBox[{"[", "2", "]"}], "]"}], " ", "]"}]}], "}"}], "]"}]}], ";"}],
    "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.553580975815518*^9, 3.553581086811532*^9}, {
   3.5535811702146797`*^9, 3.553581332081395*^9}, {3.553581386055298*^9, 
   3.553581389767603*^9}, {3.553581421901835*^9, 3.553581611679267*^9}, 
   3.553583195352147*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"matVarCart", "[", 
    RowBox[{
    "x1_", ",", "y1_", ",", "x2_", ",", "y2_", ",", "m1_", ",", "m2_", ",", 
     "c1_", ",", "c2_", ",", "a1_", ",", "a2_", ",", "b1_", ",", "b2_", ",", 
     "e1_", ",", "e2_"}], "]"}], "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"eqsCart", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"varsCart", "[", 
        RowBox[{"[", "j", "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "varsCart", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", 
       RowBox[{"Length", "[", "varsCart", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.553581102141568*^9, 3.5535811361873198`*^9}, 
   3.553583168054441*^9, {3.553583371506386*^9, 3.553583403524459*^9}}],

Cell["\<\
Function which computes eigenvalues of relative equilibrium (given in \
invariant polynomial variables)\
\>", "Text",
 CellChangeTimes->{{3.552370779124959*^9, 3.55237080799162*^9}, {
  3.55237110836644*^9, 3.5523711258147306`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"reqbEil", "[", 
   RowBox[{
   "p_List", ",", "m1_", ",", "m2_", ",", "c1_", ",", "c2_", ",", "a1_", ",", 
    "a2_", ",", "b1_", ",", "b2_", ",", "e1_", ",", "e2_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"A", ",", "B", ",", "u", ",", "v", ",", "w", ",", "q"}], "}"}], 
    ",", 
    RowBox[{
     RowBox[{"A", "=", 
      RowBox[{"matVar", "[", 
       RowBox[{
        RowBox[{"p", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
        ",", 
        RowBox[{"p", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
        ",", 
        RowBox[{"p", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
        ",", 
        RowBox[{"p", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}], 
        ",", "m1", ",", "m2", ",", "c1", ",", "c2", ",", "a1", ",", "a2", ",",
         "b1", ",", "b2", ",", "e1", ",", "e2"}], "]"}]}], ";", "  ", 
     RowBox[{"Eigenvalues", "[", "A", "]"}]}]}], " ", "]"}]}]], "Input",
 CellChangeTimes->{{3.552370770834732*^9, 3.552370776760848*^9}, {
   3.5523708117141647`*^9, 3.552370838045349*^9}, {3.55237109476334*^9, 
   3.552371097586536*^9}, {3.552371132428816*^9, 3.5523712798287363`*^9}, {
   3.552371688630764*^9, 3.5523717641184473`*^9}, {3.552372334935248*^9, 
   3.552372371909445*^9}, 3.552633563724052*^9, {3.552633596380445*^9, 
   3.5526336278808613`*^9}, {3.5527523860473433`*^9, 3.552752401336629*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"reqbEilSyz", "[", 
   RowBox[{
   "p_List", ",", "m1_", ",", "m2_", ",", "c1_", ",", "c2_", ",", "a1_", ",", 
    "a2_", ",", "b1_", ",", "b2_", ",", "e1_", ",", "e2_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"A", ",", "B", ",", "u", ",", "v", ",", "w", ",", "q"}], "}"}], 
    ",", 
    RowBox[{
     RowBox[{"A", "=", 
      RowBox[{"matVarSyz", "[", 
       RowBox[{
        RowBox[{"p", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
        ",", 
        RowBox[{"p", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
        ",", 
        RowBox[{"p", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
        ",", "m1", ",", "m2", ",", "c1", ",", "c2", ",", "a1", ",", "a2", ",",
         "b1", ",", "b2", ",", "e1", ",", "e2"}], "]"}]}], ";", "  ", 
     RowBox[{"Eigenvalues", "[", "A", "]"}]}]}], " ", "]"}]}]], "Input",
 CellChangeTimes->{{3.552752827419526*^9, 3.5527528415076447`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"reqbEilCart", "[", 
   RowBox[{
   "p_List", ",", "m1_", ",", "m2_", ",", "c1_", ",", "c2_", ",", "a1_", ",", 
    "a2_", ",", "b1_", ",", "b2_", ",", "e1_", ",", "e2_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"A", ",", "B", ",", "u", ",", "v", ",", "w", ",", "q"}], "}"}], 
    ",", 
    RowBox[{
     RowBox[{"A", "=", 
      RowBox[{"matVarCart", "[", 
       RowBox[{
        RowBox[{"p", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
        ",", 
        RowBox[{"p", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
        ",", 
        RowBox[{"p", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
        ",", 
        RowBox[{"p", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}], 
        ",", "m1", ",", "m2", ",", "c1", ",", "c2", ",", "a1", ",", "a2", ",",
         "b1", ",", "b2", ",", "e1", ",", "e2"}], "]"}]}], ";", "  ", 
     RowBox[{"Eigenvalues", "[", "A", "]"}]}]}], " ", "]"}]}]], "Input",
 CellChangeTimes->{{3.553583335724658*^9, 3.553583356814847*^9}, {
  3.55358341382681*^9, 3.553583421494301*^9}}],

Cell[TextData[{
 "Function which  to plot nullclines  which returns f(u,v) and g(u,v) and the \
",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["w", "2"], "+", 
    SuperscriptBox["q", "2"], "-", 
    RowBox[{"4", 
     SuperscriptBox["u", "2"], "v"}]}], TraditionalForm]]],
 " (related to relative equilibria searches)."
}], "Text",
 CellChangeTimes->{{3.544775295048661*^9, 3.544775408313676*^9}, {
  3.5448006768146877`*^9, 3.544800701879106*^9}, {3.544800744155089*^9, 
  3.544800771971134*^9}, {3.544800859707095*^9, 3.54480086060207*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"reqbEqPar", "[", 
   RowBox[{
   "u_", ",", "v_", ",", "m1_", ",", "m2_", ",", "c1_", ",", "c2_", ",", 
    "a1_", ",", "a2_", ",", "b1_", ",", "b2_", ",", "e1_", ",", "e2_"}], 
   "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"eqs", ",", "A1", ",", "A2"}], "}"}], ",", 
    RowBox[{
     RowBox[{"A1", "=", 
      RowBox[{"m1", "+", 
       RowBox[{"a1", " ", "u"}], "+", 
       RowBox[{"b1", " ", "v"}]}]}], ";", " ", 
     RowBox[{"A2", "=", 
      RowBox[{"m2", "+", 
       RowBox[{"a2", " ", "u"}], "+", 
       RowBox[{"b2", " ", "v"}]}]}], ";", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"c2", " ", "u", " ", "A1"}], "-", 
        RowBox[{"c1", " ", "v", " ", "A2"}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"A1", "^", "2"}], "/", 
            SuperscriptBox["c1", "2"]}], "-", " ", "v"}], ")"}], " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"c2", " ", "u"}], "+", 
            RowBox[{"2", " ", "c1", " ", "v"}]}], ")"}], "^", "2"}]}], "+", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], "e1"}], "+", "e2"}], ")"}], "^", "2"}], " ", 
         
         RowBox[{"v", "^", "2"}]}]}], ",", 
       RowBox[{
        RowBox[{"4", 
         RowBox[{"A1", "^", "2"}], " ", 
         RowBox[{
          RowBox[{"u", "^", "2"}], "/", 
          RowBox[{"c1", "^", "2"}]}]}], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{"2", "u", " ", "v", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "2"}], "e1"}], "+", " ", "e2"}], ")"}]}], 
           RowBox[{
            RowBox[{"2", "c1", " ", "v"}], "+", 
            RowBox[{"c2", " ", "u"}]}]], ")"}], "2"], "-", 
        RowBox[{"4", 
         SuperscriptBox["u", "2"], "v"}]}]}], "}"}]}]}], " ", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.544765248141238*^9, 3.5447652633997393`*^9}, {
   3.5447729989194193`*^9, 3.5447730149604883`*^9}, {3.544798209612711*^9, 
   3.544798315007257*^9}, {3.5447983702424297`*^9, 3.5447983883054457`*^9}, {
   3.544798472164011*^9, 3.544798482854403*^9}, {3.5447985255361967`*^9, 
   3.5447985443747873`*^9}, {3.544798640038487*^9, 3.544798646004321*^9}, 
   3.552633564695098*^9, {3.5527497311734877`*^9, 3.552749748875033*^9}, {
   3.5527524103122587`*^9, 3.552752414984694*^9}, {3.552753558336482*^9, 
   3.5527535611842527`*^9}}],

Cell["Plot contours corresponding to  f(u,v)=0 and g(u,v)=0.", "Text",
 CellChangeTimes->{{3.544775415382601*^9, 3.544775441786722*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Manipulate", "[", 
   RowBox[{
    RowBox[{"ContourPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"reqbEqPar", "[", 
           RowBox[{
           "u", ",", "v", ",", "m1", ",", "m2", ",", "c1", ",", "c2", ",", 
            "a1", ",", "a2", ",", "b1", ",", "b2", ",", "e1", ",", "e2"}], 
           "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "0"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"reqbEqPar", "[", 
           RowBox[{
           "u", ",", "v", ",", "m1", ",", "m2", ",", "c1", ",", "c2", ",", 
            "a1", ",", "a2", ",", "b1", ",", "b2", ",", "e1", ",", "e2"}], 
           "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", "0"}]}], 
       RowBox[{"(*", 
        RowBox[{",", 
         RowBox[{
          RowBox[{
           RowBox[{"reqbEqPar", "[", 
            RowBox[{
            "u", ",", "v", ",", "m1", ",", "m2", ",", "c1", ",", "c2", ",", 
             "a1", ",", "a2", ",", "b1", ",", "b2", ",", "e1", ",", "e2"}], 
            "]"}], "[", 
           RowBox[{"[", "3", "]"}], "]"}], "\[Equal]", "0"}]}], "*)"}], "}"}],
       ",", 
      RowBox[{"{", 
       RowBox[{"u", ",", "0.0001", ",", "umax"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"v", ",", "0.0001", ",", "vmax"}], "}"}], ",", 
      RowBox[{"ContourStyle", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{"Red", ",", "Green"}], "}"}]}], ",", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<u\>\"", ",", "\"\<v\>\""}], "}"}]}]}], " ", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"m1", ",", "m1o"}], "}"}], ",", 
      RowBox[{"-", "2"}], ",", "2", ",", "manAppear"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"m2", ",", "m2o"}], "}"}], ",", 
      RowBox[{"-", "2"}], ",", "2", ",", "manAppear"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"c1", ",", "c1o"}], "}"}], ",", 
      RowBox[{"-", "1"}], ",", "1", ",", "2", ",", "manAppear"}], "}"}], ",", 
    
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"c2", ",", "c2o"}], "}"}], ",", 
      RowBox[{"-", "1"}], ",", "1", ",", "2", ",", "manAppear"}], "}"}], ",", 
    
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a1", ",", "a1o"}], "}"}], ",", 
      RowBox[{"-", "2"}], ",", "1", ",", "manAppear"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a2", ",", "a2o"}], "}"}], ",", 
      RowBox[{"-", "7"}], ",", "7", ",", "manAppear"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"b1", ",", "b1o"}], "}"}], ",", "1", ",", "2", ",", 
      "manAppear"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"b2", ",", "b2o"}], "}"}], ",", 
      RowBox[{"-", "1"}], ",", "1", ",", "manAppear"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"e2", ",", "e2o"}], "}"}], ",", "0", ",", "2", ",", 
      "manAppear"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"umax", ",", "2"}], "}"}], ",", "0", ",", "5", ",", 
      "manAppear"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"vmax", ",", "2"}], "}"}], ",", "0", ",", "5", ",", 
      "manAppear"}], "}"}]}], "]"}], "*)"}]], "Input",
 CellChangeTimes->{{3.544765378156144*^9, 3.5447654597795267`*^9}, {
  3.544765961783383*^9, 3.5447659724560432`*^9}, {3.54476602359249*^9, 
  3.5447661033103228`*^9}, {3.544798333017312*^9, 3.544798363943046*^9}, {
  3.544798565499219*^9, 3.544798565785244*^9}, {3.54479862488284*^9, 
  3.54479865746979*^9}, {3.5449636633838387`*^9, 3.544963718103331*^9}, {
  3.552380317252282*^9, 3.552380329737974*^9}, {3.5526285365316887`*^9, 
  3.5526285390707693`*^9}, {3.552633637176898*^9, 3.552633639570383*^9}, {
  3.55275254439914*^9, 3.552752544429932*^9}}],

Cell["\<\
Plot contours corresponding to  f(u,v)=0 and g(u,v)=0 and (coarse) contours \
of maximum real part of eigenvalue of relative equilibria (Light-colored \
region corresponds to positive eigenvqlue, dark-colored region to negative \
eigenvalue). -Slow\
\>", "Text",
 CellChangeTimes->{{3.544775415382601*^9, 3.544775441786722*^9}, {
  3.552381997352916*^9, 3.5523820973475723`*^9}, {3.552624316179636*^9, 
  3.5526243270437*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Manipulate", "[", 
   RowBox[{
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"ContourPlot", "[", 
       RowBox[{
        RowBox[{"Max", "[", 
         RowBox[{"Re", "[", 
          RowBox[{"reqbEil", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"u", ",", "v", ",", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], " ", "u", " ", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"m1", "+", 
                   RowBox[{"a1", " ", "u"}], "+", 
                   RowBox[{"b1", " ", "v"}]}], ")"}], " ", "/", "c1"}]}], 
               ")"}], ",", 
              FractionBox[
               RowBox[{"2", "e2", " ", "u", " ", "v"}], 
               RowBox[{
                RowBox[{"c2", " ", "u"}], " ", "+", 
                RowBox[{"2", " ", "c1", " ", "v"}]}]]}], "}"}], ",", "m1", 
            ",", "m2", ",", "c1", ",", "c2", ",", "a1", ",", "a2", ",", "b1", 
            ",", "b2", ",", "e1", ",", "e2"}], "]"}], "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"u", ",", "0.0001", ",", "umax"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"v", ",", "0.0001", ",", "vmax"}], "}"}], ",", 
        RowBox[{"PlotPoints", "\[Rule]", "5"}], ",", 
        RowBox[{"MaxRecursion", "\[Rule]", " ", "0"}], ",", 
        RowBox[{"Contours", "\[Rule]", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.1"}], ",", "0", ",", "0.1"}], "}"}]}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<u\>\"", ",", "\"\<v\>\""}], "}"}]}]}], "]"}], ",", 
      RowBox[{"ContourPlot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"reqbEqPar", "[", 
             RowBox[{
             "u", ",", "v", ",", "m1", ",", "m2", ",", "c1", ",", "c2", ",", 
              "a1", ",", "a2", ",", "b1", ",", "b2", ",", "e1", ",", "e2"}], 
             "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "0"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"reqbEqPar", "[", 
             RowBox[{
             "u", ",", "v", ",", "m1", ",", "m2", ",", "c1", ",", "c2", ",", 
              "a1", ",", "a2", ",", "b1", ",", "b2", ",", "e1", ",", "e2"}], 
             "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", "0"}]}], " ", 
         RowBox[{"(*", 
          RowBox[{",", 
           RowBox[{
            RowBox[{
             RowBox[{"reqbEqPar", "[", 
              RowBox[{
              "u", ",", "v", ",", "m1", ",", "m2", ",", "c1", ",", "c2", ",", 
               "a1", ",", "a2", ",", "b1", ",", "b2", ",", "e1", ",", "e2"}], 
              "]"}], "[", 
             RowBox[{"[", "3", "]"}], "]"}], "\[Equal]", "0"}]}], "*)"}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"u", ",", "0.0001", ",", "umax"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"v", ",", "0.0001", ",", "vmax"}], "}"}], ",", 
        RowBox[{"ContourStyle", "\[Rule]", " ", 
         RowBox[{"{", 
          RowBox[{"Red", ",", "Green"}], "}"}]}]}], " ", "]"}]}], " ", "]"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"m1", ",", "m1o"}], "}"}], ",", 
      RowBox[{"-", "2"}], ",", "2", ",", "manAppear"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"m2", ",", "m2o"}], "}"}], ",", 
      RowBox[{"-", "2"}], ",", "2", ",", "manAppear"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"c1", ",", "c1o"}], "}"}], ",", 
      RowBox[{"-", "1"}], ",", "1", ",", "2", ",", "manAppear"}], "}"}], ",", 
    
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"c2", ",", "c2o"}], "}"}], ",", 
      RowBox[{"-", "1"}], ",", "1", ",", "2", ",", "manAppear"}], "}"}], ",", 
    
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a1", ",", "a1o"}], "}"}], ",", 
      RowBox[{"-", "2"}], ",", "1", ",", "manAppear"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a2", ",", "a2o"}], "}"}], ",", 
      RowBox[{"-", "7"}], ",", "7", ",", "manAppear"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"b1", ",", "b1o"}], "}"}], ",", "1", ",", "2", ",", 
      "manAppear"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"b2", ",", "b2o"}], "}"}], ",", 
      RowBox[{"-", "1"}], ",", "1", ",", "manAppear"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"e2", ",", "e2o"}], "}"}], ",", "0", ",", "2", ",", 
      "manAppear"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"umax", ",", "2"}], "}"}], ",", "0", ",", "5", ",", 
      "manAppear"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"vmax", ",", "2"}], "}"}], ",", "0", ",", "5", ",", 
      "manAppear"}], "}"}]}], "]"}], "*)"}]], "Input",
 CellChangeTimes->{{3.544765378156144*^9, 3.5447654597795267`*^9}, {
  3.544765961783383*^9, 3.5447659724560432`*^9}, {3.54476602359249*^9, 
  3.5447661033103228`*^9}, {3.544798333017312*^9, 3.544798363943046*^9}, {
  3.544798565499219*^9, 3.544798565785244*^9}, {3.54479862488284*^9, 
  3.54479865746979*^9}, {3.5449636633838387`*^9, 3.544963718103331*^9}, {
  3.55237134061875*^9, 3.5523714060324802`*^9}, {3.552371439706806*^9, 
  3.552371519974201*^9}, {3.552371993225037*^9, 3.552372003911252*^9}, {
  3.5523726806477423`*^9, 3.5523727042467833`*^9}, {3.552373137519801*^9, 
  3.552373153905819*^9}, {3.552373564061533*^9, 3.552373569527155*^9}, {
  3.552377205020944*^9, 3.552377274215105*^9}, {3.5526243047351227`*^9, 
  3.552624307751008*^9}, {3.552633647342658*^9, 3.552633652424502*^9}, {
  3.5527525444415007`*^9, 3.552752544466283*^9}}],

Cell["\<\
Plot contours corresponding to  f(u,v)=0 and g(u,v)=0. Shaded area \
corresponds to tr A <  0, where A the stability matrix.\
\>", "Text",
 CellChangeTimes->{{3.544775415382601*^9, 3.544775441786722*^9}, {
  3.552381997352916*^9, 3.5523820973475723`*^9}, {3.552624316179636*^9, 
  3.552624407684443*^9}, {3.552624727181672*^9, 3.5526247494207478`*^9}, {
  3.552629404508317*^9, 3.552629446701964*^9}, {3.552635545586327*^9, 
  3.552635547727892*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Show", "[", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"ContourPlot", "[", 
       RowBox[{
        RowBox[{"Tr", "[", 
         RowBox[{"matVar", "[", 
          RowBox[{
          "u", ",", "v", ",", "w", ",", "q", ",", "m1", ",", "m2", ",", "c1", 
           ",", "c2", ",", "a1", ",", "a2", ",", "b1", ",", "b2", ",", "e1", 
           ",", "e2"}], "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"u", ",", "0.0001", ",", "umax"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"v", ",", "0.0001", ",", "vmax"}], "}"}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<u\>\"", ",", "\"\<v\>\""}], "}"}]}], ",", 
        RowBox[{"Contours", "\[Rule]", " ", 
         RowBox[{"{", "0", "}"}]}]}], "]"}], ","}], "*)"}], 
    RowBox[{
     RowBox[{"ContourPlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"reqbEqPar", "[", 
            RowBox[{
            "u", ",", "v", ",", "m1", ",", "m2", ",", "c1", ",", "c2", ",", 
             "a1", ",", "a2", ",", "b1", ",", "b2", ",", "e1", ",", "e2"}], 
            "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "0"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"reqbEqPar", "[", 
            RowBox[{
            "u", ",", "v", ",", "m1", ",", "m2", ",", "c1", ",", "c2", ",", 
             "a1", ",", "a2", ",", "b1", ",", "b2", ",", "e1", ",", "e2"}], 
            "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", "0"}]}], " ", 
        RowBox[{"(*", 
         RowBox[{",", 
          RowBox[{
           RowBox[{
            RowBox[{"reqbEqPar", "[", 
             RowBox[{
             "u", ",", "v", ",", "m1", ",", "m2", ",", "c1", ",", "c2", ",", 
              "a1", ",", "a2", ",", "b1", ",", "b2", ",", "e1", ",", "e2"}], 
             "]"}], "[", 
            RowBox[{"[", "3", "]"}], "]"}], "\[Equal]", "0"}]}], "*)"}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"u", ",", "0.0001", ",", "umax"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"v", ",", "0.0001", ",", "vmax"}], "}"}], ",", 
       RowBox[{"ContourStyle", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{"Red", ",", "Green"}], "}"}]}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<u\>\"", ",", "\"\<v\>\""}], "}"}]}]}], " ", "]"}], " ", 
     ",", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"b1", "+", "b2"}], "\[NotEqual]", " ", "0"}], ",", 
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           FractionBox[
            RowBox[{
             RowBox[{"-", "4"}], 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", "a1"}], "+", "a2"}], ")"}]}], 
            RowBox[{"6", 
             RowBox[{"(", 
              RowBox[{"b1", "+", "b2"}], ")"}]}]], "u"}], "-", 
          FractionBox[
           RowBox[{
            RowBox[{"6", "m1"}], "+", 
            RowBox[{"4", "m2"}]}], 
           RowBox[{"6", 
            RowBox[{"(", 
             RowBox[{"b1", "+", "b2"}], ")"}]}]]}], ",", 
         RowBox[{"{", 
          RowBox[{"u", ",", "0", ",", "umax"}], "}"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "umax"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "vmax"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"b1", "+", "b2"}], ">", "0"}], ",", 
            RowBox[{"Filling", "\[Rule]", " ", "Bottom"}], ",", 
            RowBox[{"Filling", "\[Rule]", "Top"}]}], "]"}], "]"}]}], "]"}], 
       ",", 
       RowBox[{"Graphics", "[", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", 
              FractionBox[
               RowBox[{
                RowBox[{"6", "m1"}], "+", 
                RowBox[{"4", "m2"}]}], 
               RowBox[{"4", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", "a1"}], "+", "a2"}], ")"}]}]]}], ",", "0"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", 
              FractionBox[
               RowBox[{
                RowBox[{"6", "m1"}], "+", 
                RowBox[{"4", "m2"}]}], 
               RowBox[{"4", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", "a1"}], "+", "a2"}], ")"}]}]]}], ",", "umax"}],
             "}"}]}], "}"}], " ", "]"}], "]"}]}], "]"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"m1", ",", "m1o"}], "}"}], ",", 
     RowBox[{"-", "2"}], ",", "2", ",", "manAppear"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"m2", ",", "m2o"}], "}"}], ",", 
     RowBox[{"-", "2"}], ",", "2", ",", "manAppear"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"c1", ",", "c1o"}], "}"}], ",", 
     RowBox[{"-", "1"}], ",", "1", ",", "2", ",", "manAppear"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"c2", ",", "c2o"}], "}"}], ",", 
     RowBox[{"-", "1"}], ",", "1", ",", "2", ",", "manAppear"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a1", ",", "a1o"}], "}"}], ",", 
     RowBox[{"-", "2"}], ",", "1", ",", "manAppear"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a2", ",", "a2o"}], "}"}], ",", 
     RowBox[{"-", "7"}], ",", "7", ",", "manAppear"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"b1", ",", "b1o"}], "}"}], ",", 
     RowBox[{"-", "2"}], ",", "2", ",", "manAppear"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"b2", ",", "b2o"}], "}"}], ",", 
     RowBox[{"-", "2"}], ",", "2", ",", "manAppear"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"e1", ",", "e1o"}], "}"}], ",", "0", ",", "2", ",", 
     "manAppear"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"e2", ",", "e2o"}], "}"}], ",", "0", ",", "2", ",", 
     "manAppear"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"umax", ",", "2"}], "}"}], ",", "0", ",", "5", ",", 
     "manAppear"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"vmax", ",", "2"}], "}"}], ",", "0", ",", "5", ",", 
     "manAppear"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.544765378156144*^9, 3.5447654597795267`*^9}, {
   3.544765961783383*^9, 3.5447659724560432`*^9}, {3.54476602359249*^9, 
   3.5447661033103228`*^9}, {3.544798333017312*^9, 3.544798363943046*^9}, {
   3.544798565499219*^9, 3.544798565785244*^9}, {3.54479862488284*^9, 
   3.54479865746979*^9}, {3.5449636633838387`*^9, 3.544963718103331*^9}, {
   3.55237134061875*^9, 3.5523714060324802`*^9}, {3.552371439706806*^9, 
   3.552371519974201*^9}, {3.552371993225037*^9, 3.552372003911252*^9}, {
   3.5523726806477423`*^9, 3.5523727042467833`*^9}, {3.552373137519801*^9, 
   3.552373153905819*^9}, {3.552373564061533*^9, 3.552373569527155*^9}, {
   3.552377205020944*^9, 3.552377274215105*^9}, {3.5526243047351227`*^9, 
   3.552624307751008*^9}, {3.552624410050273*^9, 3.552624412221855*^9}, {
   3.552624484744298*^9, 3.552624494778653*^9}, {3.552624536605517*^9, 
   3.5526245854421864`*^9}, {3.552624636554434*^9, 3.552624660383307*^9}, {
   3.552624693601712*^9, 3.55262471112971*^9}, {3.552628674992095*^9, 
   3.552628724873108*^9}, {3.552628776078644*^9, 3.552628840074169*^9}, {
   3.552629277232847*^9, 3.5526292941836157`*^9}, {3.552631995963626*^9, 
   3.552632081404109*^9}, {3.5526321409545403`*^9, 3.552632171400825*^9}, {
   3.5526323000542316`*^9, 3.552632342685464*^9}, {3.552632400584819*^9, 
   3.552632464249798*^9}, 3.552632516379346*^9, 3.552633385202694*^9, {
   3.5526336581807203`*^9, 3.5526336646473713`*^9}, {3.552634123837235*^9, 
   3.55263412915132*^9}, 3.5526351168127003`*^9, {3.5526351515798483`*^9, 
   3.552635358838147*^9}, {3.552635392563171*^9, 3.552635396533732*^9}, {
   3.55263557924058*^9, 3.5526355835583897`*^9}, {3.552752424786928*^9, 
   3.5527524346695023`*^9}, {3.552752544504553*^9, 3.552752544524515*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a1$$ = -1.4, $CellContext`a2$$ = -2.18, \
$CellContext`b1$$ = 1.526, $CellContext`b2$$ = -0.1, $CellContext`c1$$ = 
    1, $CellContext`c2$$ = 1, $CellContext`e1$$ = 0, $CellContext`e2$$ = 
    1.217, $CellContext`m1$$ = -0.234, $CellContext`m2$$ = 
    0.28, $CellContext`umax$$ = 2, $CellContext`vmax$$ = 2, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`m1$$], -0.234}, -2, 2}, {{
       Hold[$CellContext`m2$$], 0.28}, -2, 2}, {{
       Hold[$CellContext`c1$$], 1}, -1, 1, 2}, {{
       Hold[$CellContext`c2$$], 1}, -1, 1, 2}, {{
       Hold[$CellContext`a1$$], -1.4}, -2, 1}, {{
       Hold[$CellContext`a2$$], -2.18}, -7, 7}, {{
       Hold[$CellContext`b1$$], 1.526}, -2, 2}, {{
       Hold[$CellContext`b2$$], -0.1}, -2, 2}, {{
       Hold[$CellContext`e1$$], 0}, 0, 2}, {{
       Hold[$CellContext`e2$$], 1.217}, 0, 2}, {{
       Hold[$CellContext`umax$$], 2}, 0, 5}, {{
       Hold[$CellContext`vmax$$], 2}, 0, 5}}, Typeset`size$$ = {
    360., {175., 180.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`m1$725$$ = 
    0, $CellContext`m2$730$$ = 0, $CellContext`c1$731$$ = 
    0, $CellContext`c2$732$$ = 0, $CellContext`a1$733$$ = 
    0, $CellContext`a2$734$$ = 0, $CellContext`b1$735$$ = 
    0, $CellContext`b2$736$$ = 0, $CellContext`e1$737$$ = 
    0, $CellContext`e2$738$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`a1$$ = -1.4, $CellContext`a2$$ = -2.18, \
$CellContext`b1$$ = 1.526, $CellContext`b2$$ = -0.1, $CellContext`c1$$ = 
        1, $CellContext`c2$$ = 1, $CellContext`e1$$ = 0, $CellContext`e2$$ = 
        1.217, $CellContext`m1$$ = -0.234, $CellContext`m2$$ = 
        0.28, $CellContext`umax$$ = 2, $CellContext`vmax$$ = 2}, 
      "ControllerVariables" :> {
        Hold[$CellContext`m1$$, $CellContext`m1$725$$, 0], 
        Hold[$CellContext`m2$$, $CellContext`m2$730$$, 0], 
        Hold[$CellContext`c1$$, $CellContext`c1$731$$, 0], 
        Hold[$CellContext`c2$$, $CellContext`c2$732$$, 0], 
        Hold[$CellContext`a1$$, $CellContext`a1$733$$, 0], 
        Hold[$CellContext`a2$$, $CellContext`a2$734$$, 0], 
        Hold[$CellContext`b1$$, $CellContext`b1$735$$, 0], 
        Hold[$CellContext`b2$$, $CellContext`b2$736$$, 0], 
        Hold[$CellContext`e1$$, $CellContext`e1$737$$, 0], 
        Hold[$CellContext`e2$$, $CellContext`e2$738$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Show[
        ContourPlot[{Part[
            $CellContext`reqbEqPar[$CellContext`u, $CellContext`v, \
$CellContext`m1$$, $CellContext`m2$$, $CellContext`c1$$, $CellContext`c2$$, \
$CellContext`a1$$, $CellContext`a2$$, $CellContext`b1$$, $CellContext`b2$$, \
$CellContext`e1$$, $CellContext`e2$$], 1] == 0, Part[
            $CellContext`reqbEqPar[$CellContext`u, $CellContext`v, \
$CellContext`m1$$, $CellContext`m2$$, $CellContext`c1$$, $CellContext`c2$$, \
$CellContext`a1$$, $CellContext`a2$$, $CellContext`b1$$, $CellContext`b2$$, \
$CellContext`e1$$, $CellContext`e2$$], 2] == 0}, {$CellContext`u, 
          0.0001, $CellContext`umax$$}, {$CellContext`v, 
          0.0001, $CellContext`vmax$$}, ContourStyle -> {Red, Green}, 
         FrameLabel -> {"u", "v"}], 
        If[$CellContext`b1$$ + $CellContext`b2$$ != 0, 
         Plot[((-4) (2 $CellContext`a1$$ + $CellContext`a2$$)/(
            6 ($CellContext`b1$$ + $CellContext`b2$$))) $CellContext`u - (
           6 $CellContext`m1$$ + 4 $CellContext`m2$$)/(
          6 ($CellContext`b1$$ + $CellContext`b2$$)), {$CellContext`u, 
           0, $CellContext`umax$$}, 
          PlotRange -> {{0, $CellContext`umax$$}, {0, $CellContext`vmax$$}}, 
          Evaluate[
           
           If[$CellContext`b1$$ + $CellContext`b2$$ > 0, Filling -> Bottom, 
            Filling -> Top]]], 
         Graphics[
          
          Line[{{-((6 $CellContext`m1$$ + 4 $CellContext`m2$$)/(
              4 (2 $CellContext`a1$$ + $CellContext`a2$$))), 
             0}, {-((6 $CellContext`m1$$ + 4 $CellContext`m2$$)/(
              4 (2 $CellContext`a1$$ + $CellContext`a2$$))), \
$CellContext`umax$$}}]]]], 
      "Specifications" :> {{{$CellContext`m1$$, -0.234}, -2, 2, Appearance -> 
         "Open"}, {{$CellContext`m2$$, 0.28}, -2, 2, Appearance -> 
         "Open"}, {{$CellContext`c1$$, 1}, -1, 1, 2, Appearance -> 
         "Open"}, {{$CellContext`c2$$, 1}, -1, 1, 2, Appearance -> 
         "Open"}, {{$CellContext`a1$$, -1.4}, -2, 1, Appearance -> 
         "Open"}, {{$CellContext`a2$$, -2.18}, -7, 7, Appearance -> 
         "Open"}, {{$CellContext`b1$$, 1.526}, -2, 2, Appearance -> 
         "Open"}, {{$CellContext`b2$$, -0.1}, -2, 2, Appearance -> 
         "Open"}, {{$CellContext`e1$$, 0}, 0, 2, Appearance -> 
         "Open"}, {{$CellContext`e2$$, 1.217}, 0, 2, Appearance -> 
         "Open"}, {{$CellContext`umax$$, 2}, 0, 5, Appearance -> 
         "Open"}, {{$CellContext`vmax$$, 2}, 0, 5, Appearance -> "Open"}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{666., {308., 313.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.553578275064883*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"reqbPol2z", "[", "p_List", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "psi1", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"psi1", "=", 
      RowBox[{"psi", "/.", 
       RowBox[{"First", "[", 
        RowBox[{"NSolve", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"2", 
            RowBox[{"p", "[", 
             RowBox[{"[", "1", "]"}], "]"}], 
            SuperscriptBox[
             RowBox[{"p", "[", 
              RowBox[{"[", "2", "]"}], "]"}], 
             RowBox[{"1", "/", "2"}]], 
            RowBox[{"Cos", "[", "psi", "]"}]}], "\[Equal]", 
           RowBox[{"p", "[", 
            RowBox[{"[", "3", "]"}], "]"}]}], ",", "psi"}], "]"}], "]"}]}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"p", "[", 
         RowBox[{"[", "1", "]"}], "]"}], 
        RowBox[{"1", "/", "2"}]], ",", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"p", "[", 
          RowBox[{"[", "2", "]"}], "]"}], 
         RowBox[{"1", "/", "2"}]], " ", 
        RowBox[{"Exp", "[", 
         RowBox[{"I", " ", "psi1"}], "]"}]}]}], "}"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.544774213480164*^9, 3.544774220909507*^9}, {
   3.5447745649676533`*^9, 3.544774592777618*^9}, {3.5447748931978197`*^9, 
   3.544774917567789*^9}, {3.5447749538281307`*^9, 3.544774997395979*^9}, 
   3.544775033980081*^9, 3.5447768336112003`*^9, {3.5447775345856237`*^9, 
   3.544777538151205*^9}, {3.5447782979936934`*^9, 3.544778313597724*^9}, {
   3.5447988221089373`*^9, 3.54479883706184*^9}, {3.5449529484217243`*^9, 
   3.544952949975802*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"reqbPol2cart", "[", "p_List", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "psi1", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"psi1", "=", 
      RowBox[{"psi", "/.", 
       RowBox[{"First", "[", 
        RowBox[{"NSolve", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"2", 
            RowBox[{"p", "[", 
             RowBox[{"[", "1", "]"}], "]"}], 
            SuperscriptBox[
             RowBox[{"p", "[", 
              RowBox[{"[", "2", "]"}], "]"}], 
             RowBox[{"1", "/", "2"}]], 
            RowBox[{"Cos", "[", "psi", "]"}]}], "\[Equal]", 
           RowBox[{"p", "[", 
            RowBox[{"[", "3", "]"}], "]"}]}], ",", "psi"}], "]"}], "]"}]}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"p", "[", 
          RowBox[{"[", "1", "]"}], "]"}], 
         RowBox[{"1", "/", "2"}]], "//", "Re"}], ",", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"p", "[", 
          RowBox[{"[", "1", "]"}], "]"}], 
         RowBox[{"1", "/", "2"}]], "//", "Im"}], ",", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"p", "[", 
           RowBox[{"[", "2", "]"}], "]"}], 
          RowBox[{"1", "/", "2"}]], " ", 
         RowBox[{"Exp", "[", 
          RowBox[{"I", " ", "psi1"}], "]"}]}], "//", "Im"}], ",", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"p", "[", 
           RowBox[{"[", "2", "]"}], "]"}], 
          RowBox[{"1", "/", "2"}]], " ", 
         RowBox[{"Exp", "[", 
          RowBox[{"I", " ", "psi1"}], "]"}]}], "//", "Im"}]}], "}"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.553583442416051*^9, 3.553583487505678*^9}}],

Cell["\<\
Create manipulator objects for interactive manipulations. Use sliders to \
change parameter values. The plots will be updated accordingly.\
\>", "Text",
 CellChangeTimes->{{3.544180564362221*^9, 3.544180580200227*^9}, {
  3.54418559565012*^9, 3.544185619553917*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"plotPS", "[", 
   RowBox[{
   "m1_", ",", "m2_", ",", "c1_", ",", "c2_", ",", "a1_", ",", "a2_", ",", 
    "b1_", ",", "b2_", ",", "e1_", ",", "e2_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"pl1", ",", "reqb", ",", "reqbz", ",", "plreqb", ",", 
      RowBox[{"treqb", "=", "30"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"pl1", "=", 
      RowBox[{"ParametricPlot3D", "[", 
       RowBox[{
        RowBox[{"Evaluate", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Re", "[", 
             RowBox[{"z1", "[", "t", "]"}], "]"}], ",", 
            RowBox[{"Im", "[", 
             RowBox[{"z1", "[", "t", "]"}], "]"}], ",", 
            RowBox[{"Re", "[", 
             RowBox[{"z2", "[", "t", "]"}], "]"}]}], "}"}], "/.", 
          RowBox[{"solPar", "[", 
           RowBox[{
           "t", ",", "m1", ",", "m2", ",", "c1", ",", "c2", ",", "a1", ",", 
            "a2", ",", "b1", ",", "b2", ",", "e1", ",", "e2"}], "]"}]}], 
         "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "100", ",", "501"}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
        RowBox[{"AxesLabel", "\[Rule]", " ", 
         RowBox[{"{", 
          RowBox[{
          "\"\<Re \!\(\*SubscriptBox[\(z\), \(1\)]\)\>\"", ",", 
           "\"\<Im \!\(\*SubscriptBox[\(z\), \(1\)]\)\>\"", ",", 
           "\"\<Re \!\(\*SubscriptBox[\(z\), \(2\)]\)\>\""}], "}"}]}], ",", 
        RowBox[{"BoxRatios", "\[Rule]", " ", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1", ",", "1"}], "}"}]}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"reqb", "=", 
      RowBox[{"reqbPar", "[", 
       RowBox[{
       "m1", ",", "m2", ",", "c1", ",", "c2", ",", "a1", ",", "a2", ",", "b1",
         ",", "b2", ",", "e1", ",", "e2"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"reqbz", "=", 
      RowBox[{"Map", "[", 
       RowBox[{"reqbPol2z", ",", "reqb"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"plreqb", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"ParametricPlot3D", "[", 
         RowBox[{
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Re", "[", 
               RowBox[{"z1", "[", "t", "]"}], "]"}], ",", 
              RowBox[{"Im", "[", 
               RowBox[{"z1", "[", "t", "]"}], "]"}], ",", 
              RowBox[{"Re", "[", 
               RowBox[{"z2", "[", "t", "]"}], "]"}]}], "}"}], "/.", 
            RowBox[{"solParIC", "[", 
             RowBox[{
             "t", ",", "m1", ",", "m2", ",", "c1", ",", "c2", ",", "a1", ",", 
              "a2", ",", "b1", ",", "b2", ",", "e1", ",", "e2", ",", 
              RowBox[{"reqbz", "[", 
               RowBox[{"[", "i", "]"}], "]"}], " ", ",", "0", ",", "treqb"}], 
             "]"}]}], " ", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", "treqb"}], "}"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", " ", 
           RowBox[{"Hue", "[", 
            RowBox[{"i", "/", 
             RowBox[{"Length", "[", "reqbz", "]"}]}], " ", "]"}]}]}], "]"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "reqbz", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Show", "[", 
      RowBox[{"pl1", ",", "plreqb"}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.544775848487503*^9, 3.5447759231163282`*^9}, {
   3.544775979473816*^9, 3.544775995905272*^9}, {3.5447763579370337`*^9, 
   3.544776595163186*^9}, 3.5447766824015417`*^9, {3.5447767317959414`*^9, 
   3.544776747025654*^9}, {3.544776891375552*^9, 3.544776936907424*^9}, {
   3.544777003123618*^9, 3.544777018242639*^9}, {3.544777199398965*^9, 
   3.544777251287664*^9}, {3.544777287260346*^9, 3.544777287448689*^9}, {
   3.5447782344190407`*^9, 3.544778234558672*^9}, {3.544798983858788*^9, 
   3.544798984056705*^9}, {3.544799015368103*^9, 3.544799015735984*^9}, {
   3.544799054589788*^9, 3.544799055724884*^9}, {3.54479913490383*^9, 
   3.544799150600018*^9}, {3.544799470843081*^9, 3.544799520414865*^9}, {
   3.544799573471678*^9, 3.544799595029508*^9}, {3.552209521538761*^9, 
   3.552209524084381*^9}, 3.5526335703268948`*^9, {3.552633714267069*^9, 
   3.552633716249728*^9}, {3.552634318925467*^9, 3.552634365865581*^9}, 
   3.552752544556486*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"plotPSip", "[", 
   RowBox[{
   "m1_", ",", "m2_", ",", "c1_", ",", "c2_", ",", "a1_", ",", "a2_", ",", 
    "b1_", ",", "b2_", ",", "e1_", ",", "e2_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"pl1", ",", "reqb", ",", "reqbz", ",", "plreqb", ",", 
      RowBox[{"treqb", "=", "30"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"pl1", "=", 
      RowBox[{"ParametricPlot3D", "[", 
       RowBox[{
        RowBox[{"Evaluate", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{"z1", "[", "t", "]"}], "]"}], ",", 
            RowBox[{"Abs", "[", 
             RowBox[{"z2", "[", "t", "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Conjugate", "[", 
               RowBox[{"z2", "[", "t", "]"}], "]"}], 
              SuperscriptBox[
               RowBox[{"z1", "[", "t", "]"}], "2"]}], "+", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"Conjugate", "[", 
                RowBox[{"z1", "[", "t", "]"}], "]"}], "2"], 
              RowBox[{"z2", "[", "t", "]"}]}]}]}], "}"}], "/.", 
          RowBox[{"solPar", "[", 
           RowBox[{
           "t", ",", "m1", ",", "m2", ",", "c1", ",", "c2", ",", "a1", ",", 
            "a2", ",", "b1", ",", "b2", ",", "e1", ",", "e2"}], "]"}]}], 
         "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "100", ",", "501"}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
        RowBox[{"AxesLabel", "\[Rule]", " ", 
         RowBox[{"{", 
          RowBox[{
          "\"\<|\!\(\*SubscriptBox[\(z\), \(1\)]\)|\>\"", ",", 
           "\"\<|\!\(\*SubscriptBox[\(z\), \(2\)]\)|\>\"", ",", "\"\<w\>\""}],
           "}"}]}], ",", 
        RowBox[{"BoxRatios", "\[Rule]", " ", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1", ",", "1"}], "}"}]}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"reqb", "=", 
      RowBox[{"reqbPar", "[", 
       RowBox[{
       "m1", ",", "m2", ",", "c1", ",", "c2", ",", "a1", ",", "a2", ",", "b1",
         ",", "b2", ",", "e1", ",", "e2"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"reqbz", "=", 
      RowBox[{"Map", "[", 
       RowBox[{"reqbPol2z", ",", "reqb"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"plreqb", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"ParametricPlot3D", "[", 
         RowBox[{
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Abs", "[", 
               RowBox[{"z1", "[", "t", "]"}], "]"}], ",", 
              RowBox[{"Abs", "[", 
               RowBox[{"z2", "[", "t", "]"}], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"Conjugate", "[", 
                 RowBox[{"z2", "[", "t", "]"}], "]"}], 
                SuperscriptBox[
                 RowBox[{"z1", "[", "t", "]"}], "2"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"Conjugate", "[", 
                  RowBox[{"z1", "[", "t", "]"}], "]"}], "2"], 
                RowBox[{"z2", "[", "t", "]"}]}]}]}], "}"}], "/.", 
            RowBox[{"solParIC", "[", 
             RowBox[{
             "t", ",", "m1", ",", "m2", ",", "c1", ",", "c2", ",", "a1", ",", 
              "a2", ",", "b1", ",", "b2", ",", "e1", ",", "e2", ",", 
              RowBox[{"reqbz", "[", 
               RowBox[{"[", "i", "]"}], "]"}], " ", ",", "0", ",", "treqb"}], 
             "]"}]}], " ", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", "treqb"}], "}"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", " ", 
           RowBox[{"Hue", "[", 
            RowBox[{"i", "/", 
             RowBox[{"Length", "[", "reqbz", "]"}]}], " ", "]"}]}]}], "]"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "reqbz", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Show", "[", 
      RowBox[{"pl1", ",", "plreqb"}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.5447997272505693`*^9, 3.544799847119287*^9}, {
   3.544799882634365*^9, 3.544799889868269*^9}, {3.544799997958497*^9, 
   3.54480001182115*^9}, {3.552209538056281*^9, 3.552209541940647*^9}, {
   3.5523657321911087`*^9, 3.5523657354676723`*^9}, 3.552633571784009*^9, {
   3.552633721278061*^9, 3.5526337236314*^9}, {3.5526343758399897`*^9, 
   3.5526344001176033`*^9}, 3.55275254456704*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Off", "[", 
   RowBox[{"Solve", "::", "ratnz"}], "]"}], ";", 
  RowBox[{"Off", "[", 
   RowBox[{"NSolve", "::", "ifun"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.544777089044635*^9, 3.544777164033288*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"plotPS", "[", 
    RowBox[{
    "m1", ",", "m2", ",", "c1", ",", "c2", ",", "a1", ",", "a2", ",", "b1", 
     ",", "b2", ",", "e1", ",", "e2"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"m1", ",", "m1o"}], "}"}], ",", 
     RowBox[{"-", "2"}], ",", "2", ",", "manAppear"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"m2", ",", "m2o"}], "}"}], ",", 
     RowBox[{"-", "2"}], ",", "2", ",", "manAppear"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"c1", ",", "c1o"}], "}"}], ",", 
     RowBox[{"-", "1"}], ",", "1", ",", "2", ",", "manAppear"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"c2", ",", "c2o"}], "}"}], ",", 
     RowBox[{"-", "1"}], ",", "1", ",", "2", ",", "manAppear"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a1", ",", "a1o"}], "}"}], ",", 
     RowBox[{"-", "2"}], ",", "1", ",", "manAppear"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a2", ",", "a2o"}], "}"}], ",", 
     RowBox[{"-", "7"}], ",", "7", ",", "manAppear"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"b1", ",", "b1o"}], "}"}], ",", "1", ",", "2", ",", 
     "manAppear"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"b2", ",", "b2o"}], "}"}], ",", 
     RowBox[{"-", "1"}], ",", "1", ",", "manAppear"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"e1", ",", "e1o"}], "}"}], ",", "0", ",", "2", ",", 
     "manAppear"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"e2", ",", "e2o"}], "}"}], ",", "0", ",", "2", ",", 
     "manAppear"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5447759486797333`*^9, 3.54477596483195*^9}, {
  3.544963887441545*^9, 3.5449639134384604`*^9}, {3.5526251575841217`*^9, 
  3.5526251915239964`*^9}, {3.5526337337262077`*^9, 3.552633740855534*^9}, {
  3.552634170344851*^9, 3.552634175174252*^9}, {3.5526342116992607`*^9, 
  3.552634215040086*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a1$$ = -1.4, $CellContext`a2$$ = -2.18, \
$CellContext`b1$$ = 1.526, $CellContext`b2$$ = -0.1, $CellContext`c1$$ = 
    1, $CellContext`c2$$ = 1, $CellContext`e1$$ = 0, $CellContext`e2$$ = 
    1.217, $CellContext`m1$$ = -0.234, $CellContext`m2$$ = 0.28, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`m1$$], -0.234}, -2, 2}, {{
       Hold[$CellContext`m2$$], 0.28}, -2, 2}, {{
       Hold[$CellContext`c1$$], 1}, -1, 1, 2}, {{
       Hold[$CellContext`c2$$], 1}, -1, 1, 2}, {{
       Hold[$CellContext`a1$$], -1.4}, -2, 1}, {{
       Hold[$CellContext`a2$$], -2.18}, -7, 7}, {{
       Hold[$CellContext`b1$$], 1.526}, 1, 2}, {{
       Hold[$CellContext`b2$$], -0.1}, -1, 1}, {{
       Hold[$CellContext`e1$$], 0}, 0, 2}, {{
       Hold[$CellContext`e2$$], 1.217}, 0, 2}}, Typeset`size$$ = {
    360., {184., 188.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`m1$1244$$ = 
    0, $CellContext`m2$1245$$ = 0, $CellContext`c1$1246$$ = 
    0, $CellContext`c2$1247$$ = 0, $CellContext`a1$1248$$ = 
    0, $CellContext`a2$1249$$ = 0, $CellContext`b1$1250$$ = 
    0, $CellContext`b2$1251$$ = 0, $CellContext`e1$1252$$ = 
    0, $CellContext`e2$1253$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`a1$$ = -1.4, $CellContext`a2$$ = -2.18, \
$CellContext`b1$$ = 1.526, $CellContext`b2$$ = -0.1, $CellContext`c1$$ = 
        1, $CellContext`c2$$ = 1, $CellContext`e1$$ = 0, $CellContext`e2$$ = 
        1.217, $CellContext`m1$$ = -0.234, $CellContext`m2$$ = 0.28}, 
      "ControllerVariables" :> {
        Hold[$CellContext`m1$$, $CellContext`m1$1244$$, 0], 
        Hold[$CellContext`m2$$, $CellContext`m2$1245$$, 0], 
        Hold[$CellContext`c1$$, $CellContext`c1$1246$$, 0], 
        Hold[$CellContext`c2$$, $CellContext`c2$1247$$, 0], 
        Hold[$CellContext`a1$$, $CellContext`a1$1248$$, 0], 
        Hold[$CellContext`a2$$, $CellContext`a2$1249$$, 0], 
        Hold[$CellContext`b1$$, $CellContext`b1$1250$$, 0], 
        Hold[$CellContext`b2$$, $CellContext`b2$1251$$, 0], 
        Hold[$CellContext`e1$$, $CellContext`e1$1252$$, 0], 
        Hold[$CellContext`e2$$, $CellContext`e2$1253$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> $CellContext`plotPS[$CellContext`m1$$, $CellContext`m2$$, \
$CellContext`c1$$, $CellContext`c2$$, $CellContext`a1$$, $CellContext`a2$$, \
$CellContext`b1$$, $CellContext`b2$$, $CellContext`e1$$, $CellContext`e2$$], 
      "Specifications" :> {{{$CellContext`m1$$, -0.234}, -2, 2, Appearance -> 
         "Open"}, {{$CellContext`m2$$, 0.28}, -2, 2, Appearance -> 
         "Open"}, {{$CellContext`c1$$, 1}, -1, 1, 2, Appearance -> 
         "Open"}, {{$CellContext`c2$$, 1}, -1, 1, 2, Appearance -> 
         "Open"}, {{$CellContext`a1$$, -1.4}, -2, 1, Appearance -> 
         "Open"}, {{$CellContext`a2$$, -2.18}, -7, 7, Appearance -> 
         "Open"}, {{$CellContext`b1$$, 1.526}, 1, 2, Appearance -> 
         "Open"}, {{$CellContext`b2$$, -0.1}, -1, 1, Appearance -> 
         "Open"}, {{$CellContext`e1$$, 0}, 0, 2, Appearance -> 
         "Open"}, {{$CellContext`e2$$, 1.217}, 0, 2, Appearance -> "Open"}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{650., {259., 264.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.553578275896912*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"manAppear", "=", 
   RowBox[{"Appearance", "\[Rule]", " ", "\"\<Open\>\""}]}], ";"}]], "Input",
 CellChangeTimes->{{3.544955824510244*^9, 3.544955830633129*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"plotPSip", "[", 
    RowBox[{
    "m1", ",", "m2", ",", "c1", ",", "c2", ",", "a1", ",", "a2", ",", "b1", 
     ",", "b2", ",", "e1", ",", "e2"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"m1", ",", "m1o"}], "}"}], ",", 
     RowBox[{"-", "2"}], ",", "2", ",", "0.01", ",", "manAppear"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"m2", ",", "m2o"}], "}"}], ",", 
     RowBox[{"-", "2"}], ",", "2", ",", "0.01", ",", "manAppear"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"c1", ",", "c1o"}], "}"}], ",", 
     RowBox[{"-", "1"}], ",", "1", ",", "2", ",", "manAppear"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"c2", ",", "c2o"}], "}"}], ",", 
     RowBox[{"-", "1"}], ",", "1", ",", "2", ",", "manAppear"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a1", ",", "a1o"}], "}"}], ",", 
     RowBox[{"-", "2"}], ",", "1", ",", "0.01", ",", "manAppear"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a2", ",", "a2o"}], "}"}], ",", 
     RowBox[{"-", "7"}], ",", "7", ",", "0.01", ",", "manAppear"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"b1", ",", "b1o"}], "}"}], ",", 
     RowBox[{"-", "2"}], ",", "2", ",", "0.01", ",", "manAppear"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"b2", ",", "b2o"}], "}"}], ",", 
     RowBox[{"-", "2"}], ",", "2", ",", "0.01", ",", "manAppear"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"e1", ",", "e1o"}], "}"}], ",", "0", ",", "2", ",", "0.01", ",",
      "manAppear"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"e2", ",", "e2o"}], "}"}], ",", "0", ",", "2", ",", "0.01", ",",
      "manAppear"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5447759486797333`*^9, 3.54477596483195*^9}, {
   3.544799867205254*^9, 3.544799867446159*^9}, {3.5448001002274942`*^9, 
   3.5448001087165194`*^9}, {3.544953123668086*^9, 3.5449531304008617`*^9}, {
   3.5449557727069407`*^9, 3.5449558603059483`*^9}, {3.552382168287073*^9, 
   3.5523821707045507`*^9}, {3.552382202715987*^9, 3.552382203879127*^9}, {
   3.5523822722469473`*^9, 3.55238230216369*^9}, {3.552382770375841*^9, 
   3.552382776488961*^9}, 3.552633766697529*^9, {3.55263450761534*^9, 
   3.552634524755787*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a1$$ = -1.4, $CellContext`a2$$ = -2.18, \
$CellContext`b1$$ = 1.526, $CellContext`b2$$ = -0.1, $CellContext`c1$$ = 
    1, $CellContext`c2$$ = 1, $CellContext`e1$$ = 0, $CellContext`e2$$ = 
    1.217, $CellContext`m1$$ = -0.234, $CellContext`m2$$ = 0.28, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`m1$$], -0.234}, -2, 2, 0.01}, {{
       Hold[$CellContext`m2$$], 0.28}, -2, 2, 0.01}, {{
       Hold[$CellContext`c1$$], 1}, -1, 1, 2}, {{
       Hold[$CellContext`c2$$], 1}, -1, 1, 2}, {{
       Hold[$CellContext`a1$$], -1.4}, -2, 1, 0.01}, {{
       Hold[$CellContext`a2$$], -2.18}, -7, 7, 0.01}, {{
       Hold[$CellContext`b1$$], 1.526}, -2, 2, 0.01}, {{
       Hold[$CellContext`b2$$], -0.1}, -2, 2, 0.01}, {{
       Hold[$CellContext`e1$$], 0}, 0, 2, 0.01}, {{
       Hold[$CellContext`e2$$], 1.217}, 0, 2, 0.01}}, Typeset`size$$ = {
    360., {189., 192.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`m1$1421$$ = 
    0, $CellContext`m2$1422$$ = 0, $CellContext`c1$1423$$ = 
    0, $CellContext`c2$1424$$ = 0, $CellContext`a1$1425$$ = 
    0, $CellContext`a2$1426$$ = 0, $CellContext`b1$1427$$ = 
    0, $CellContext`b2$1428$$ = 0, $CellContext`e1$1429$$ = 
    0, $CellContext`e2$1430$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`a1$$ = -1.4, $CellContext`a2$$ = -2.18, \
$CellContext`b1$$ = 1.526, $CellContext`b2$$ = -0.1, $CellContext`c1$$ = 
        1, $CellContext`c2$$ = 1, $CellContext`e1$$ = 0, $CellContext`e2$$ = 
        1.217, $CellContext`m1$$ = -0.234, $CellContext`m2$$ = 0.28}, 
      "ControllerVariables" :> {
        Hold[$CellContext`m1$$, $CellContext`m1$1421$$, 0], 
        Hold[$CellContext`m2$$, $CellContext`m2$1422$$, 0], 
        Hold[$CellContext`c1$$, $CellContext`c1$1423$$, 0], 
        Hold[$CellContext`c2$$, $CellContext`c2$1424$$, 0], 
        Hold[$CellContext`a1$$, $CellContext`a1$1425$$, 0], 
        Hold[$CellContext`a2$$, $CellContext`a2$1426$$, 0], 
        Hold[$CellContext`b1$$, $CellContext`b1$1427$$, 0], 
        Hold[$CellContext`b2$$, $CellContext`b2$1428$$, 0], 
        Hold[$CellContext`e1$$, $CellContext`e1$1429$$, 0], 
        Hold[$CellContext`e2$$, $CellContext`e2$1430$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> $CellContext`plotPSip[$CellContext`m1$$, $CellContext`m2$$, \
$CellContext`c1$$, $CellContext`c2$$, $CellContext`a1$$, $CellContext`a2$$, \
$CellContext`b1$$, $CellContext`b2$$, $CellContext`e1$$, $CellContext`e2$$], 
      "Specifications" :> {{{$CellContext`m1$$, -0.234}, -2, 2, 0.01, 
         Appearance -> "Open"}, {{$CellContext`m2$$, 0.28}, -2, 2, 0.01, 
         Appearance -> "Open"}, {{$CellContext`c1$$, 1}, -1, 1, 2, Appearance -> 
         "Open"}, {{$CellContext`c2$$, 1}, -1, 1, 2, Appearance -> 
         "Open"}, {{$CellContext`a1$$, -1.4}, -2, 1, 0.01, Appearance -> 
         "Open"}, {{$CellContext`a2$$, -2.18}, -7, 7, 0.01, Appearance -> 
         "Open"}, {{$CellContext`b1$$, 1.526}, -2, 2, 0.01, Appearance -> 
         "Open"}, {{$CellContext`b2$$, -0.1}, -2, 2, 0.01, Appearance -> 
         "Open"}, {{$CellContext`e1$$, 0}, 0, 2, 0.01, Appearance -> 
         "Open"}, {{$CellContext`e2$$, 1.217}, 0, 2, 0.01, Appearance -> 
         "Open"}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{650., {259., 264.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.553578277747554*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DynamicModule", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a1", "=", 
      RowBox[{"-", "0.98`"}]}], ",", 
     RowBox[{"a2", "=", 
      RowBox[{"-", "4.82`"}]}], ",", 
     RowBox[{"b1", "=", "1.6`"}], ",", 
     RowBox[{"b2", "=", "0.020000000000000018`"}], ",", 
     RowBox[{"c1", "=", "1"}], ",", 
     RowBox[{"c2", "=", "1"}], ",", 
     RowBox[{"e1", "=", "1.465`"}], ",", 
     RowBox[{"e2", "=", "1.217`"}], ",", 
     RowBox[{"m1", "=", 
      RowBox[{"-", "0.337`"}]}], ",", 
     RowBox[{"m2", "=", "0.27`"}]}], "}"}], ",", 
   RowBox[{"plotPSip", "[", 
    RowBox[{
    "m1", ",", "m2", ",", "c1", ",", "c2", ",", "a1", ",", "a2", ",", "b1", 
     ",", "b2", ",", "e1", ",", "e2"}], "]"}]}], "]"}]], "Input",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.552750474470283*^9}],

Cell[BoxData[
 DynamicModuleBox[{$CellContext`a1$$ = -0.98, $CellContext`a2$$ = -4.82, \
$CellContext`b1$$ = 1.6, $CellContext`b2$$ = 
  0.020000000000000018`, $CellContext`c1$$ = 1, $CellContext`c2$$ = 
  1, $CellContext`e1$$ = 1.465, $CellContext`e2$$ = 
  1.217, $CellContext`m1$$ = -0.337, $CellContext`m2$$ = 0.27}, 
  Graphics3DBox[{{}, {}, 
    {Hue[0.67, 0.6, 0.6], Line3DBox[CompressedData["
1:eJwUmnc4Vv8bxyXZfSUzIqNIJdqTN0JSSFFSKkVC9t4jWZG9R0QyMrPX8dh7
771XSklJkZ/fX+e67ufzfJ5zrnPu+/V+PdfhfWJ0S5ucjIxsnY6MbOf28VVJ
lfDX2hZ8umcjOTFUj8qeKb/O30HE7meRwvcomsHJp5FjfLoeO9bOVMyeCCRq
2DK/PFRsRGJ74uD1wjqQNP0YY6n8CemnAxwBmfU4HmAvfsy2DisL5sb9d18T
frP2vK+F6kBbn/h98Vkdxg2EM6MU3AlTOq5NvZoaeG/yFGwY1WH9afjUZyoX
wvsVjbOuXzXURvYov/Spgwk+nae6Z0XMK8iqVgVU4dP1Bn6rojpQ9n57YJWu
S9AP6rCnt1VC3+c2hfl6Hb6dUR85r3OVSL1JbZ0vWYkz+hMrcir1eKAuoj9+
XA3eV6cyD/WQwMH12PBKbz1+7Q56yx6hjwYWAWpeMxKO++xe6nNrQA7tvcsP
9pqDn5J0QZKHBMH8vCefTzQipiZzRi3MGrr5RhEGAxWovVrmVjbXCOH7Es/E
Y+ywt/ZTCmNsBXZEMUgH5jahqVlAOfaFA2iifiokGlfA2kRNUj+mGS+ySunJ
TjqCPle59PjtCjTFsn38FtuCjcwYn+ubDgj75TidLl0B1rS703WZrbCXXeCs
aLFHXT/rkD8qMHbbw3eoqg3ilMqq0Qm2WKE7tM/4QgWs7H2cdz9vR9CIYxy7
vxUCHU+1dPNX4OoBgTdic+3IONjSfaLMDKSclEMy0wT+bERP/X3QgdCxIVel
CUN8OF3NwqNGwLm8cCd1RQdaqu6ck9/3DM+M59spksq3P3fLM+TsREXW24ml
nffx5JYC34XuMrDyfo7/btuJ+st8r30oZMBqy+GVvFSKfZWyExxznWCvNSOO
c5whLHkeitSsl+Bwe3qwglYXwiPCe3/dUyH4rzOnTe0sQW35Pa74lS5kDYUx
nlTSJLz5ubP3MhSjNzrgkeebbmQMiymdGdchhoc+M8TuK8J8R8TQ/pM94Gpc
LaoLMSD8+ygYnDgLMZ7yw7CztwcBpY6C+pQmhEyk8sclygLMDximaVv14oHP
VKmygSkh6+xuU9yZh9ScN3dHGPpAe53ssNywKbE27Z9BHZqLIkHOlz5v+xDx
QYjzh50p8d8/tti0u5+g0ZH72+FUP5jri9/VW5kQO2J22l/gzYGx5jDTw95+
fFR5Ed0zYkT8plu/WEOWjY9+LilKbwawr0t+JXZanxiO2zogRpWFEb6BkqoH
g7h14G6uOL0OoSL9Zvi4TwYuqC0dFcAQWI/yZx5X1CQ+zp/JlAxPB0PqTePz
osPgixFVm5ZVJShUGm8ekk6HIpmU36jQCMptxXbH+50nlPMaKfgD0pGyoqxw
RHAUByWSpvcLy4B388BuMdMMcKffKPQUGMPpieiF854P4KKixl48lInaGV/V
FsZx0Oh+nAiL1gHt6cZnYitZ0NwMSKF+OQ7vP/PlH8KN8WPc9l+BZA7chTKG
nFbGUXN+kX+HrwVmf9N1Xe79hIRDbE6X9CdQmrl+T7nWFgaXho45VhTA2Tcp
5sHrSWR5XAuyOfMSyisROgPMxeDntQ4tEJnCTssrxmIm7vBittxzPK0U/zLj
M28NTMFf2tjgSr8XqrSjtTw8CDw4TirqcZpGtd+/evkHvtB+RVadcZcEbZ74
9HjOGUT8tnLptPfHSa/r1mnMVZgzWranSp6BUNXL/XHPArGSpNN5mqwGx97d
y7Thm8VKtKUWl18wYrhk9twUqYP/zmJLGM9iWnKHgCwpFGvSavrkbxtgf/6J
/IOYWWSztrHK7o+AquPtw4USzfjpdYHyRekspGz8Jf/0RiEno/Db3Z1tECK/
vbjSOwtKqpI3P8je4nZgo1THYjuc+eg96ZdmcSbV5Xv8mXjIjbXs+0+lE4ZL
28fvszBizJCu6HgHmlc2n1UKurCZc4KWtnsWqyUlg2mUiTAIaBjdzdiDhhe/
JgecZnH1UcJmaEAiwllfbXXd70Xmmjfls6kZhF6jp4pTTIQT5YM26ad92CG2
X9SVbgamSjYfFAXegbFBJPLq6X7sHYwZNl+eAveqaeTB69Ho1qAZZ63th0/j
zcD6gklU5+sb2V4IwpFf3/7t4R+Ap8TkgrHrBKx1Va1HJl7hBGvgfjfFAfDU
F1fp645DwvlR8Ak3YyySvp+lkxlAWUal8cLKKB6/zT2RFq1OXI7lC2/a7MdB
0eHrBqoj4GBPPdnyxYEIWX7bm/qiHzJzci63y4fQS6vyX9h5H2KL//iJlbA+
9PHOsJ46NAip+aZUr+hgIlixib8nsheXU5T8qQr6YX23+j3LWATBqXmGPNet
B3HyKYw3tfog99uO80RrDHH8qK4iodWN+7o/pTyO98L6yYIY/ak4YmWVUBW7
2gWJz+lvEg704NCJID21+ThiiL3e8ffJToh0LqWTS3bj1YQ9s7dAPJE1zfNY
WrADX4YPqf0X1AWOkwYr37e216//YD3P2Y4nzI8XPKm6cHqf8a4c7TiioEHI
eeS/VrS2yPNYB3bim2PUxQiHWCLxUEw872oT3ihmc/Fc7QSfwicoGEcRDP6a
Bp0rDQijSrqjta8TodnZ1+Iawoj0xvYkOq566N+4nbFJ1onkh38uhqQGEQY/
rheKu9cizetg5JG/HSidezB9z+wNIfRf8uLFyzUYMv8ZnkLTCWt3mVPbV0Fs
fVdTSJSoxszTlvc2Jzqxw4aoVWGwJm59MfHyelUFhbS7lpY2nThO8YLN2VyN
sNUK2nnkTyXkeeuPyY10Ys2F1/A8izbOkULUJxIqIVPO+zLteheiuIsVYzas
0aUal+foXAmsrRTFt3ShyexvTFiOKzjg2rrhX4n4nw/O/dTuxpOPHy8F/fbA
jdOHLB52V0Lc62l6054erB1poii64YPPXBp/Y69Uwe6kh8x8TQ9K1DLaef39
kM9AU/W8vQqHNE+/L7XrRVCNW9W5Jn+MPHmw88qzamxd6TWaONIHKeadWmpc
AZj/zyde5Es1LLmvr/Z09GH+mISQf6E/zHN2qkO1Buvh50miD/qxK+WM9ryU
Hw52jlyfj6uB2TJZ9IPSfoiykTetbrzGwBQ1rWZ3DT52l7wZ/28AohQDgg60
njjlcvA02a8aXDa4KFijP4CVW6V/5TNfoiBERcCSrhYcWscXzScHEMbeR1Ki
doT9v2eLE2y1oFWRsQqxGkSu8EIUE505fAy11D9y1MJ+p7KkxKEhyH2WOO+U
9QQO2v895mOoRRd1sqL3yBDIrj2yt5IBURIp6Vq5VAPuDKHYj2+GYelHcqSd
0yOoPxqICiTXQPEfpcnewyOQT7IsPGliTQgVyyounauBVA+/zHD8COjS91qZ
7HUhDN7R8f5LqoaLT7LkNdpR7JUNPbN28hWxjyb/DdNmFeLfypzrNB2Ffrv0
Hpl3noT0ZX+KA5JVeEG/t5VrcRTtZfTCcSaviV02t79/sKkEMz/p7ITNGK7r
+lx1T/clchZ4MJ5GAi1pdpPYO46H599cEr/pR3Cr/KLgGqqAb+CbOA6LcXQm
2rZ/4fIn8pn3bA1TV4D88KKM6vg4ONV8+PW4/Ym8uB/rl/TLMStcRdGjNIEr
S++rN5j8iDfav5XkmkpRk6lc41k+Aat3GRS2vj7E7jJWXl6tEoStJWeOCk3C
grV59AnJk3jwTjyFpFEMZ79TfLyxk/A/OFb+LuUl8WftxXvliSKQLbxsXeaf
AkVh5SdpTluiuva1Td/+Yhxe8L3yomwKrd08YUEHnxD03tNvNFGC7zyn91U+
m8Zx0/+EB8J0ceI4Tbe+WRm0isyZ29lmsJLPQhy84YabkntuWxtUgP6yVvrr
2hncejrMYDYQCJaQRIbZukpYZXOyVOnOwv/rxHm3kBgs+NQt5XbV4OGJobfc
G7MY+fa9QE3zPe7Vp14NjW8At8ShqkbzOfxr3qv84E06VJ+VF3+RasUfC8OI
o/lzOFsTSWVX9QkDTMNf2Co7UHW240V6wxzII5iUGV8X4cuQ8+qNh91YblB2
uJQ5h1m71CgJdQIDOiM3v+zswxSr+sEFtTkUhK3GkDtUom2wmrw3agDC7QFl
temz8N3xYl9BSzUqH2Xavd05DLrzeo/eRsxgWFxOypy9FpptrfllUyNoLtXw
Cjk7Ddu2Kycf5tfgarKU/YOrY/B1unvmbMokyNv+MrQKVSPBzGJBgHscd5/c
D+5km4DDj5vrvuyVKOZ9TeXzZBxThUrRl6+MwVJfft2mnQCl+SMNaoNxzLy0
43/9fhgR344YBkqU4Ie41Z2xc+MQvep7lu3yID4v+xWocuVv574Tj8QyxhDP
ceuELmM/qr/Kt3ac2M5nzM2lnEWjeCU96s97uBedlIMK2g0pkJHJHuD8MAKL
C699XZ268f2VStqc3zvY0+m6OnkO4zZtyjcd9i6I0eZttstFbPtDGM2O04Ow
e6kXHDPYjmHtPIuscgcw7j/g8GKjH6vFBucEGtpAFmeTf+TqFdT/+1OWWtWH
VWrxdb1/LWgelRNbSTEj5o685F/360X+yGB8n0oz9nIUUnaKuhL9jq8mmHR6
8Dn0UODpoUaE5icP+1/2JKIvH1vKvd4NLuqSLc2oBrQPBP1xDPIh7n/dJx9w
qQtjTnPP/vOuh+VtIQqJdD9i085p8NXxTlR7+HmUOtch6GhlpX2NP7FDnaT7
/GAHzo8bUOgG1qKDL8XsLFcAUUfjXUbG0w47j1JKh7IaCBfUHzWb8yeak6R2
xsu1gtYxYGr6ezW0BP+pNAr4E470ZmTHDZpBHRez2CVSjZUDLz1Up32Jb2Qp
TAUFjWDh//3qj3MVrhkmR0kNeBM/mh7I7xFugA3v/sVf3ytx1VthjtXAg2CX
PJ4yVl+Hm/+l5cj6VIJjNKWvsfIlcWvHz7EIu1ro8UwLeytXQjRR4vRIlhMh
6P7Z8oPk9nwTiPx2V7oSkjCfUqy0IgxueKl28lQjMPkdNbVOJVwTDowunzcm
1khdQ2CvgsMyWfPN7EpQU8j0ZrA8IZ7+u1p893glvt3hPnt+XxWiC2vPsIxK
Eqrxlr3f9EkYdoDiRnAV3k3tjdd8dBNHu02Yb/ZVYEHIV6VvfzU4XRf9zjs+
xa7Jzv0NRhXgmXhF4fGxGsE9z+W+kBuAUfxYn9TR7TrvX7r30jWwVzX9VX7M
FBf+8Ijt+kLAk0Msefzzdt/fV2vLizXH05pcsmkzAuv9k5cvptWiUJZdnKfW
Ao0FlIYK38vBvxTy+Oy9Ogh+lea8UGIBjSZTewbtcjx7p+dT87cOOSubIYkN
5rhWLuc+3VqGfLv+CJUP9RD1rqAjTpihudE+b/FMGcy+72948rwBrd94WlX3
myBL9KphwbtSDJp9DK+SasTtgsOrZGIGaLC//a81qgQXB2yefhFuhruklt/W
JU0UHj9VqbS/BOvc0Y8FhVrw+ybfoAG/KnjMyVxPeRXjnrml3L19rViVlG/u
ugS0nmZw+VJfhNBf3taZv1vhdjT8O+vTk8SuAhZ39olCxPk3Gu6oaIOIS7P5
mrIioccZcIFmrABWQUJhC5fbETit98su/y5xworxlltNPu7U5WTnR7dj8nuG
wCvbh8RV3YeSY9F5oNilcTObsgNlFZNxFcOaRFKrT/sV41xcnD57cMOxA6+n
jzNRdz4lyncK1wle/wQBP29PXcpOWMxcinPk1yaOHi772ns2BxXxtrt/RHZC
2WtKMqRGm6h9pPD1+Pns7d+teJZ3vgs3f1YRwvHaxLmjbT4bClnoLuCukx7q
Qr6R7aXIGC3CpN1b4vxEBiZzKBZObc8TR0b99wOpT4g247g0e6F05D344DHH
14P6wzTqmWGPiMsfjRxfn0sFHVc+03WV7Vx/MJ2SgluZeLrTNfejYAreO97W
m1jtxUlhFmX9d1LE37uTK0dMk6GXa3ggJrkPZI/cH9O6MhEKK9q0bkeTURcR
dOSAaT+81yuj/wRcxjVWC5NLj5NRv3t11l1pAEYv45mumihhoG+k1ZshBY4H
r9AXXhpEt+JYIoOOGt7QDA0UHUnFEQUTD27RISRG5d+XcHgM5od536kj0vCS
gs09V2AYl5sZO/KCtAB38lNxYukQuTZ3Wmj/CC4W/XxWJf8cQc9In6k3M0Cr
7zO3xTiKfeK9R7ms9HFVekZLRC8Loa94Oy1/jOLXR4x7UxlCa1ymKlgrG3vW
HSs1SGPY+93nvxh6Y6Trub5eepGDrohz1FTy43jtuyf71qwxMjJFE3e7fQLL
twdHDcvHoR155axvpAneeQzJRKflQiObX1NWagIGt6vH2A6bIpbLhMZhJg/5
HXb8cT0TyMpqdpF1NYWYNBLsTxXg0vH39l/Ntz0ol5ngCTZFg7JS/oGwQniS
WTxQ4JjCMvG1eMdVU6iHnyr1ZyyGrYuQDRcxhRvkFDe/vzZB0iGDzISEEjTT
s7o2aEwjp59dPeqZMXyEHS3mFcpwdkulKfnHNA7Ehq9PfDNAypeFxJOsBKp6
KX1JdjOokht/xDWmB0VDJwcy7wposg5mS0/OINEpe/PCUx0I65eMsfVWov9L
n8cx/1lsvD8zUp72GMHpkruqt+des+U/XdLqLB4L6v4dpboPZXEq3isva5Dz
2u0pSXcOEjrnRkaqbqOfhqvo4r9abOX9pzi1OIeKI6/OVnhfwfm/nGR3gupB
/1Si4oXBPMadPyx3N50ijBdO7lKTaUTXjEJt5OQ8NPeH5TwZvkewMqwc5Gdv
hlr5ffLEiwu4ecxNmeOJHnHZbCosb08rqIpc+gWeL2CY4UCxv785Uehd/aaQ
vR1fz9GxQHMBoslN8xPWdkTbbpF9RSIdyLasdp1mWsD0DWE+B5eXhAixLD0l
2wmF5vgdT/zmcV4gybm0yJuoUrXRirjXDTaDvKMiYnMQ52D63tAQROysof2z
Q6oHbPc57gkEzkKBI/Nq8VYI8WPa0+YiZS8CBV6lvPgyA/kLv9z8xsK272Y4
M2t0L/yndgb+kZlB0qfZ63V7IolCh/r8a397oeVyfrDLYxoXbroIzp+LITBS
XabJ1Yew1R8izm+ncPai9rpLeRwhzmmvyvanF7rKogcVcidxKMKBc4sigShS
Z7FIie2Fhb409d6WCaTHZKx7HXlPzFrVmVVz9GLQzqZKbmkc1kZfi+n/JBF/
DDVNvex6YMjecE9x3zjyA/3uqd5NJqyXmk2tGrvhzriDynU7v4hY+9bJSqcQ
1iJ7Y9zouxFoMciUajMC3jqn4vmuFGJx/ea1aMku8Mymif9nPgytrfBFXaZU
Yqe6hUeJVidoZT/9m44Ygn3IJYYXP1IIV5GyY6JGHRD+GMhB0TWIhyEPrm5J
pRBmbo18zQbtUMz4YxC/nXe6vTQ+CtEkEyXVPH+teloRIzJfXl48gL783MlE
jSRC0Yrr3OJIMyZ2M7jGagyA5VzZyAXFRKItyQvKVE2gLGE2KuAYgMcUR/rC
XDxR6qH377FmA8Yd34aL/OiH8q2Q3fMGsYT1Dbls6l91qJZ9/PzCYj8cnva1
SXmHE57R11zF62ox4/Kv3mLnAPiuW81JnAgkflzb0Cxr3+Zo5IWItxiAxtSE
FvuMO5GjkyZRy1WD8jodAbXAAZTaJwwahZgSg+9ZIVxcjevJ4zcP/hvAs/s7
WfdHPMaRaprU9sxqZNyM46BwGwQdm2LT8GMXtDwo+FqyswYNLxfV3h0YQhnF
8M1vN9/gv1qWm6o5NfCx/ts6XT8Em7hijSNPQjBns368KaMWIu8/y9NYDsPj
7r3/cDIKp86YHSzeUQ+BwIg3vUdHsHXE6krJ0zicdx523LBrQGAb6Wd59wgU
b+lcik99h/VKL0rRHU3gTmIvSjcexeuge9TFyomIlMx49sq2GTMvdFv6Wkcx
k2JlIcbzHvUMA0+E5ltgfYclbuDnKO7HnGYZPbJdL2M9fk+hDUfi7QOGacew
Af9gio+JODl2l0xYpR3Wf5f/lQiM4QFJO224MQGLJ9o3V3+3Q8k9SKhDeQxa
0YmN1f7vMJyqXLX2pgOl/t92yb0cA8+VLjO6r3F4J2ur4PBfJxzJE9lMEscg
lnb3oWJoDMifPaIQMurEpQX3nRZhY/hFSB6plwhHvWyNw3pyJxKL1zrVt3P+
kYKkt80MgUg6KlS5r7ATfwYD2aVLRnEoe+KEeog7QmP+uDQmduJHUHkf+75R
NNx/ekHliwnkmAaDbaw6wdiVz5NoMQKJ2K8+7vqPiI6+Gdr6M51ouX6awnVm
GHs2ZEjXApwIt4tOz4ontnPAIU83IdNhvHPr+t4b503o9G3a6Nt0wDh0Raie
ZRgPblb8OSoRSLS3R71SXWtH3Deye5vFQwhUNbjVHhRKTJ9mjzO60w75bzyT
124OYYLpi/rERgRBq9ViUCTWhpWEtLGD3wZBydixUKMZTdyere/yzm5Bw+nn
v37GDMJ1NGtyqzuGoOFpk3Lenp8WD5Uyzz4aBNf99b35288/J3nFUTfnRuRK
PSEeXxxETL+RAZ9ELPEjjqX940o9zrwLIo87NQi3czVvr9+OIc5ZaKxamNQh
+pQEi538IFb//Zo7GRlFXEtYCrX+XQPyd1fWCq0HoerW0/NtNZzQ/UhL/tq3
GlRfrt++WTaIGwUltCK6IcRlIQeWgGtVMHxY9NCWewjikyFCNScCCL7UczS7
pSpxhvIF5/D23Ah0dP3G2OpJjDVKXd/0IWGvieoC07FheJusZLw2tif801N+
ZF0k4T+OnJa+jmGo/H0yUG5wh1Crzbmoc5MELr2dDapeI2ikOBB5z8AUe0/4
+lLWkUDStrs3qDyK32t3yxncX4H3/OdDyyGVSCuRtI+iH0MAYeWt1uGPht/d
2aSSKmTMxRdKVI0hiDFhp1d2KNr7/54UOFmDGoGZj+lXxiFfGPJYQy8aF6j6
LKeXatFg/O7xdPo4wqPKrz74GwefMGWS49dGFHGVlla7TECkMHBH3ef3+PZL
Qe4icwvyX3cORPdOgLrUsymv/gP+7Dg2vFuiDUa5VVIueyYR97Pa5PCeFOBK
+n3DjHbcDJI+f41/EvLNAnekXqdASLP4gERCB14eMbh2788E7vnZSDnkJsPQ
/Mksn1snkvjXEoNSJ6BW8PIOfiZhQ2iE94RKF1KZnzJy3JiA53f9O2G1ifix
h0W1j7EbSIqPXf8+jsinl3gELN8hf9GAVbegG9xf5l4S78fREOnyu5MpDhxf
OrKOX+6B2af/SN+1xpEhVqBkvRqJAwW2dQ0hPfjPWrTEgnccvzw1YixHgvGJ
iVZwsagHcRvd9FzeY5BS1LSOEX+NSppTrYlxPei/I5+V5zqKXDEuGhUpS0wW
BApIK/TgavNeOrfnI+C5+bd0SvwpceCc8mhjSzfknjhEPpYexg1mmp+CJi+J
KGfzqkzR7u15cPT+6YNDyP1p8iJ1w4/gfRi/ouvahbicc9Tp+wfh9aNN7CpX
CKFb/OtdYlMnNiiO9xtJDCD/Den+8NkIwlJAYa2ToRMmpzy4mcP78aug7m6v
UzTB16KrpXejAxENMz5m+/sR2c1JTdC/JQS6noQw2LTjsMNqxv68Pvy5+Mvz
8J04wihTL2p5Xxv25lzeoSjXB79KymsttnEE692dURNHWtBi5RTweqMXKbOn
ffUp4ggTd5KBkmgTVp3cJm+09eKZqg9P1uFYIoLrxWr0hQZ0GqYNbhVur/+3
uUHmEkXc2pnvo2xXh0RrmorKvF54+z20ZDMNJ46yGA4kzNXgRNJ92X+VvQjt
1BavWwomyt/GMR4PqMaXX3lejRO9OPeIdTNuVwCRmbP1YcitCvrsFbZ8zH2g
5hpaZ432Iih6TLh211aifq1UU/1BH5zU0mPq0pyJABaFzJUblVBpMEgtLu3D
6cVB/jumBgSD16WVYupK8Ez/1Lpyrh/RzWpccYeU8a0z44X5MglsLba1P/L7
UbfrpEx8sSUEynhVF2kqkUi4c+RwDsBVvLyCNuwlkvyvqQnfqQTfvURyS8cB
lFMpjPzp8Ib/mTPHrvRU4laa565dqwOItGx2uRrrj/q2sKfdHlWozA2m+eQ5
iMyMbKlotyAc0ZHeZalfDbUTe39dwRA+cQ+wHjgcCo87e209bWrAG97P+ZJx
GPcjU8IanMJBdenoTZsP29xXYCp8tjIMfVk1E1ODSIgw67GMz9Xh1nTDl8Md
IxA8w+ehURMFS54nbxePNmCzWOxZRfQobh056aF0Pxr5Y/e+V2o1gtauXc/2
6hj+cz48OskYjd2zmo/63Zpgr33j4mTjGCpT88/3zUXCMDzaItC5GXyXLRq0
mMdx1Odv3NZqOPJcZAY7FFog6tQeJMa33UeK/eoBlKEw8eRRdPjRgjsfOfkF
ttdj2s5z7lEgDm+0ELvtWqHKeiVa6Ps2B/NTJWprfJBlU6sV+rkVD21ZyDOK
x9A4WXCOKsEN8YJ+FYNybQiytxdjixzDgv/7ftF9NohW6JoYD2wDl8+/e2rb
9dN7XjN+6tUEHafJnT81bWjTJPYxbu9TUSqkcdjiIZEkwvb34lAbFHd836Ra
GsN0ySGNgGprQtV7dL9yQxvW2XuNqHePg/4/IzeP06+I7/a3t/JftcHuW2Nq
//b555/+vhK26EvUM5zT6qFsAzfnL1aZneMQPP1R5stKIMFOpcJ0VqkVAh83
I962j4HtC711hVooMSK88Y6k24LLGx/n6ELGMC7+fWaNI4Lw2qx0in3SjLY0
9z0L98dQZyKfnX85iuCWoSZnlm2C8FOFKRrRMZgv5f1pa4omzBoYT5040Ajn
s/ctPnOO4T4ru9RGfwxB6yXzOvFXPbJn/hs4KTiGzutWjuKGscRq+LU9ox11
eC9/SmteZQxbf18KZ7nHEgpruYE5ObVYlvD9mPZuDKaifRLnaGMJFQq76qaw
GnDdHHB1oBhH83JMWm5rNLEvkCxY3LEarOrX7l8QH8dxGgEdyreRxMvn5sVB
OlWQu3lPsMF6HB4KfSsUymEEm6DuVpZRJV7QWfDkFo6DUr83uJEtiGjba5Gb
nEXCOY/fP30oJrBvjPgTze1D3P+4NdMvTcLysZFRxkcTsCw4/D1Ry5mQfmQ5
cEmGBJuc4H8udRNYGRWkMiy+QzztTjjbVUVC9781c6GLk3Bmo3N4Z2qDOKcI
7fG6SkzIp+7Tzp5EFTUarJ+/QfXF5g03xWoIUYq2rQhM4UxT0LX9rBEYX9Mr
vqBUizI6ozuGIVPYZXtYfvNnPOqdjhxkI9Xjqu7Z0ZX1KawaPZCNav2A0NYB
4WMRTfhvouFzsfw0dnFW61evpUN7t8WENakVQ5URkY3q0xjj2JGsPpmNs8zc
Lx33d4BQS2jUvzQNlf2CUw4euRA3GJvQ+9kJDrH1qZ/k0zBX3rzrsZYPwt3l
Qld/N9btvpCNbns0z3QW0i4WIamXdJc2qxezPRt5MpZTEEiRzThzsQQLTM89
Cp/242kNl6b2gSk8ivRSisouhc5ZVivL0QE4VI9niKdNYqeRhUju2TL8M2ix
kmAYwsqaapYPxSRyVmheUzwqRfnl8bNSC0O4w+7Jc3X/BAxL7uYk7yiGi6HA
w6Xbw7jsRb90mHMcKnvPORo45KM1xs/N8vEwNhniPixyj277U8eTR89y4DDs
cmDp8DD2ino3+lAP44xn2yGOpI84lRDVkF80hCXJGCLu8wB4m3cJbrUn4oPp
mR2rh4fgcGKTXJWjH2R7vvu11EZj9EjocyOnQYTtE0n4ltAL+8vHflhLBsI4
mukMY9EA7qgXHQww68FpKsGAJQFXPGi9rmxRs80/IenVE4rdkFBSZj/9XBoc
JxmHx1L6UP/Eifb6qS5QlTdYW/jYEsEZ70LFbHtxTUUon/pUJ+YWmOY+0XsR
JQzfHHTFe5BwqCC340IHMusaG7gW/QnbW8FDLTu6wRN/0GZIrh2lpyZ9iW2/
jt5ifcHUvu2Pb/o7Dwy2QtEhWvn+oxBiOoVKeyy7A8F0JoHa+i1oz/eM66AP
JW6re6b0prSjZ8z5wok7zfB/1hgbcjiUYE5gG6PRboOX3HNDyzdNyNoUmSC1
hBD/TkwtDdm1ICaNnnx4phGWH9vvvKsPJm6K6snrejThQoWo8j6ZRgiN7ZL8
8DWQ0K5/sKLwoQEvWuh0tuYakPX6r+fz9/6Ee8Wmm+REHVSFlFQSCxtwVvTr
tx5KH0KAa+xmnVQtHlCWFnYkNaDQvuFznLg7sczUrPtkuBr0Yuvps2kNkJtw
idIVcSbarpx35yquQnvE1dXShga0CBkVP7xsTui80CJshyvRfP5fNwdNIyik
G78xiGoSn8mFyTVOV4KLTrSjwaoR9etRz9P3SiKCR/77SBIJvU9vT3bxNOFk
8jUuD24d9PaEi/qdJqH2zkIpd38Tjq4Km7oxmOHlIl+d6FAFWiRo32smNCP0
ahVPQo31tud4pyKyAjseu/Np+7fgcYksh+umPVzOLPN+MK+AVYvZPde4VlTk
H+3QGXPCQbITLMr6FfjdQ5f5X1MbbtQnPuTOd8ZJy8XHejYVOBF2tmbAuR0/
nYRKSXXOqGW8dHQxsAJdhno35jk6IH/cbkieyxkOLLo/Fd5X4MmBCvUjmR3w
ms1q0rNzwMkQlQadqAq00YqJVV/uhPUBsoXj7jZgaJ8e37SsQN95mgNp2dse
BoUnTT3mOLl4rGrPpQpouq7F8bJ3IbuZwfhjshHaJI8SOzkJKP86Ney10YUb
gutTJIM7MGbYfF54sxzRnjaVyb7deFw36fFI8wBi+yxjLziXga5c5GTF6R4o
Kt7M1bt3i3j9pH+IrLkEZykl+1iTe+FaH7D1huoFEftNb3d1ZzEeO57N2njc
BxGD9ve6jSZEvVVJNVVqEXYf+306k6EfzyOqpccszQmTgpULT9QLEZdkzr+U
2Y+z/OJmuQsWxP7Uc/cO/s4Hr9dp+RMKA5hR7SygUrMkzAXfknH45KHdYMM3
Zm0Aj9KK2UxWLAiNb0WHYg/mYmJo3Ci0aBCmKU1t3f3mROIuipLCrhwIqZwo
/h46BLsXN5yOM5sRF08ZfT+Qng1ut8MVr32HkRz37LNCpDEhIfE1pasqC4ak
dA3OsBHEFSDWNkuP2JjzSzYRzIKzuu7weNoobq8d0UxweEJ8Yfjhd706E6Wv
So601YzB4X1m5tmTysTXSmHmR98z8bl36O1fk3Fsior1hqydxaReX0KMSxZi
GtOfOq6NQ4rRl09X+xGCeKq64v2zUeWzblZnPoE7vX2Oi70G2DSuTP984BN2
uckYVWx7TVqemgJ7iyU+FF64UiCYB/6uQ3K7gybB7vnZSrDcCSszovdL3xWA
e4Hz8h1MgTpsx9yZLTe00rQHOPoX43P378cn/0zB+IlgZ9mQNz5Ilxs2/SyD
ZCnPXd2iaYTHDqSxlPljVFFBad/XCqTb/1L/azyD4ekR9pEXwQh6T0PrfbgK
tYPiPK6ss5hRv75H3TMcSuJ9szdyanCKVoN2OHEWFW+X3g5IxUD/LlUdXWw9
8nhFyPbRzYFn6bEWj0Y81K9Hn3cka0aiktz5U0fnkLgeRAiIJ0JjSXbY6WMb
ss5XkQnwz8H0o4xsyfMPaJli1zCq6UDrH3PR91RzGBa8ycJHnYbjCnuMtgq7
wLr6u0tsZBaK40f5SKsZyKPYMc0T04O6KEvyifBZWH8Vj5i9lQ21EhVtac0+
VJ8aGhzmm4V80rJKdXwOjtfo5Kv+6Qf/4sqJAxozeHFD5dOnzRws7WUuaL0+
iLX7fV2MEtPgOZj28ipDDkZos/oy9g8h3bByLevPJBjTfAYlBTPxSWg4s8Fj
CH4hLA460RM4XVQ8GRWWDF3RWQHXD0MQiNSc4BMbx0PPSIMksne4Pno9+dqb
ISjLlsmQlkdgvXaKQTgjHLX7rFfZZIaQORafbkcagqf+Xw9Vaj/k63l9mWgc
hIGQXXb8zwHUay0a6uo5InG0zlqPZRCpfbKfrLa57VwwQWvBLEIU6smXlHMN
QLrHOGymrxchXjGsMcediaadM6xxO/qREJF22cOpB72mf347y/oSnww6qF+1
9IKy+OnCTqlt3t1486auOYhQZHfg1n3TgyjRgl4G5i60dDzb/dIyjBDStVj8
rtwNf4pgxuU/Hfhe66FOyoggjtRSkzvxd2FH5wHv+Z0dWK3iiBgoiyRWNLgS
b9F0Qlf91MD5S+24XC/M0E8eRXjIU56UJO9AcZl6abtsGyYdUmc2ttdLFRYJ
R1Fs+36NV3bCw1ZcIDbffJ6NIMB6QEOUrBX+Sd/IuTxasEF30VP2WDjhfX0x
Q2ujCe93bV2knmvGj42IR79IIUTtjdmrWQyNYOZ2dp581YyyHaP3bOcDiZjL
aTF3pOuxcSG64pBCM1j2ln9Me+5HXM0PW7mWWosU/nxD5hPNqHiqH/vczZOY
bwsVDbxZg/bWD0wZIs0YCb3lnaXvQkSJrWTcFa8GWbs06Z9iM2rnLlxnbDcn
2LjHmO4YVOHhI/dZ2qhm7PG4IPK7WYPoZhn3uVJfiTrv99OP+FvwermQq+PR
bTCYxq3MSlRiUkcjmKynBWZ6rreP9Rjiz8l67btDJAS7Tr2XDm3F49dyFErz
VqDtvP14RzAJYquX/olYt+HpxQLIxzkioHSWSHpBwl47mpU2tKM2MmyDZ8YF
F7z2fWp4RoJzPfmMclc7xpvH4tcLX4J0YM7soRMJb/aLbjEZb/fZVv18GuGG
ngLx6ZCPJHg+MlM0+a8T/yYWtfnn3eD1d0p5cYSEaua1W3rJ2zwSZI1pPuKG
3dxzJvObJGjEzTYFXu7CVSumH3OBrhg1P9p+aYuE6yWDFd4VXVA8Uzlw7qoz
zu7d6949R4JwoLtu++Fu0PrdNpLgsgPXx2f0ykUkjDD//uDm1Q3yV93+hZct
kGMeTPpuTcK1is9/en504+Nldz5PBUNU2364Ti9MQkGs8MysaQ9emn7/cHVE
E7KytpRrbhV409CUoF/Qi/N/7tGcDlEkuhtDvZmOVKDjUUIirUnftu8GtOpc
1yJYpB3ZcrwI+P46bCZ5rB8lBGEUuNeY+DbrdkAxvBxiOsvcuaP98Hw2sD5/
1IJQ2Mmkw6tfBvvfEex8rgPo/WwZUrVlTUSMRavsZC0FM1Pawxi2QbibOIvf
dbAjyh3f/qfxoRhVb2NH6TMGkexjE8LSb098CPoarSFUhJkvfEoGt4fwMs39
nhIciD8SHEVkqQXQ4fil7bBnGMws1Kov2u0J/ku/gu5dyMevbn35ffPDOFmw
lrP0xo7YdVDiDe18LjiHC+4P9I0gN/Zo8eYzG8LDM6R3ruYTHjGqfq4dGAVZ
D4tLzzlLIrmBQZ1sIgc8K4nNnbNjmNB6/O/FhAlRmyya4SOTA7mPj7tH7cdR
lGa7qzruOTEcb1EvuyMH77O7/D5RTUDNz0X2+X93iAtKWUkdkjnQk3oS2PZq
AvG8WYg1ugL2o1OhpG1+NVygY1Ejn8Qv6z7y3+w6iGUUc3/rlAvjsJ+P/rpM
wibfS7Ff1QIBcb40mzr5ECSvFK7ZOwW1DDLuQ3ed4T/vy3iwugSvv1EdZH8y
jcayMfuQ9DcQ09+jmHiBwFL96X0Be2ewrz36k3xDEK4cnG8LiCXh0578TFLJ
DDymTtwRGgiH72UnE9MvVdgbENcsqTKLpcRgLrrAWDDk3jNCQC3U3wiLz/XM
giHi/oN3vu8wS5d8LzioAXPXq5p2Yw6dHVHvXuonQYCUd3gXZQu0vob9NrGc
g0OcyaZ7WyrUo0b9z+u3w+aOI/eG8xzIy54N7UjLxN1X8hnFRp0wHLGsWdab
g5m5hLSeVQ7OL2zdULfvxj7ff+ekT8/hdBvroRz+POxuvGN+0rEXspkUNlId
s+jVaf2o414AgXYq26/a/cj6aFmTIDwLjksd68aiRYj8bf8pgHsQxz9Jfyg6
N4METo5K84QisGrQ3XllPITj61YkNqppfPAL4xq6Xghx/rHUR9rDsObfFPqX
Nwn3KDCnteWhL7kju5dmBPeir5qdeDwB1mOa5fxfcnAg+ADrvycjePiWOrmU
axyxXOWfV/ZmwViomT3RcAQ0HkPlIasjMNLwZz4fkIpzYcwK4QdHkM+6po7h
ITyAT5J1SCKYrVzDVT2GkbbLkI55eAAf5aiN6HWjoRA0VCdVMIQcqii+CPp+
PMiqEoj+7A/mrQ8MwnWDeGFLlbGk24tw6ZLvqpL22LOXdYujdgDkTRPHPq11
4/foYz/p2puEX6lchHJZP8wXLrr6bucCdoWOf2UajkTrvc2Qpxl9YOt4VUH5
vhO2azaPLxZ5EWlqe4o8gnoR96dh0zulA8sZary3dgUQdHFXCxaMe+AyNLO6
Vt8OnZ6prfeCwUTOHkn/khvduF7hms33c9urrGgOkcmFEiqX6jzYhLvAtnSV
7INFKzgyfYKZTMKIB0JMT5vZOsHyK9ngJGcLJlNyUozrwgh4UjPd2NOBU4nu
GjLfmrCkXXE+1zaMqNrP2fmFpR1/TGfcb601QtFg+fj9tFCifNHcKUemFXyh
fXyDfI2Q7dLPOHonhCALz6J7qNeM2Kf0Btz2Dbgkc+fgpksQMfeOe9Dm3fb3
79LsZGNoQExX7DXnOwHE4Uottycr9bhFvn4svrYeanab/bLlvkTzstZsrFYd
RvYkPVQKrUfq8jFvp/uexIdjexcf76pF+LrwGsmmHme02ELZC1wJRrmfxxNG
quGqqZNqZFaPzSK+rzVMtkSHgMiyz9cqJB4hvRd4XQ89BtmLZnyGxI6PS5Xm
x6swEyl2VKW5HgVWbN5yC7eIn7+XHM95VSJ495yixpUGtOrPuN4g3cKFT7pX
kv6S4FG3z7+xqwG9zn40stK6WK2guWLsTkJF865RA4tGBA9p3BmgNMPRH7GP
rQVJOM6krcZ3qgmMN7LuenBa45mg0xzZRAW8F1tXtBmacS342bXLNPYQ+uL9
MCKvAhOx6iTfXS24svNo3vdBR9h9VqZvSKyAUw3lIyH6VuSbtUlWSzpDzrvT
YS25Akzvd3vtZ2+DoprO23ZLZ4w+tnw+ll+BWiR927mnHTjjlzBMue1xN8yi
9corEPJormvJrx0aZuP09MsO8D1yRPxERgUu7reZ/UrXgTJ68e8GhbZ4CNoP
pl4VUJuJaCgz68Bt6tNXRRstcfPwjarvyhUYm+6pmWjtgHJrKuW6rSks33/W
bqSpwFB3a/rckU74n95IK97UxxXjHZef5pbjwAfLL0dpuyDfx8fBqHIbz26s
HmhaK8PYhtbZY8FdkDjm+2L8Nh3SRtZ8KC+UYd1Uh7fyWDc8O3I8H75QJtxU
z/e8el+CHRnenZJGPUhmst6VY6BLWEsz9IokFONv2Xm9YrZeXE8yis+XMCbu
qxccePCiCBKNf/N4c3txN1owITHVlDhhJ/6jkL0QhyikTS2k+9DRKHRv9bcZ
cee15N34nHx09+XEvezrQ+GN8NurD82JHIaCwEfSeTjpd/6Aum0/JBQvcv6l
Nic6Ovm4BEc+wW5Autzz9AD+y6+LGmU0I5TW1mt732znd7ngiGqqQaQses8t
OJkQp5JqCDf9bGwze3/jt0EImGU0GQYbEseDuw0LXbNQTJ72+v//S93I8Fo5
X/ucEHS5dy6yLBOV3t1hyovDiBsNmfvirknQmEwomVJlYunnuJ7jdj6vNrQ3
S2tUJr4I/JIPn87Alm5Pr+DaKCQ+8dgl5XBhz+/HAUc8tr3vvvSq0vwYKh/r
NFTw38Vwws+9Wtve11i8i49MfxyT5e+kPb8+g5X22t1fKdmoOUEypf0yDq3M
fivyCBMk00dVmF74hMHBgNIV5wnMCpDH19+yxo83TvWko3l4YJ9O+iowCU9h
ptfDVU5wW/xIzepYgG91H792DUxCzmGn4tbfl/jxoelXo0gxkveZXjscMAVp
qtKiq6aesJ3za82UKgO90EpE2ZVpjI3cID5e8kU9b7WdnUYF5lkq5n0Wp6Fy
qYWHWyQA8nKXtO2VKiF9wPpIy8sZSP6aClmgCkavq3tRkm81lh66fmD4NYMn
hxg1//GGoYvotXwpVIeQS2rdCWdnt3n5tzTIOhJtKyJ2j5kaAfE3CoVPZtGl
rLvw9GEsmpwv5XGeaQHzDfMT53xmcbKCao3+VTyOXU/erbvtCcL6dddi8mex
cf4v//rJRMQcfLMiPNGBH3W7dn7unQVzj3Gsxu8kTGycH1117cJLviGliu36
ri/Mn7i1U+Asq6EmwNmDVe91ieWIWWjtunf7Blka1CZOpacm96KV+5QoFeUs
Uq+1SHcGp8Hmv5AXj/70QZRKKzT7wAxEvqff/XE4FesbIcK+k/3QmjvcemZr
CnnH2j1Y198jJZLl2gPbAdQ92LHTb5unaofH0p6bxaHC6+djoZ4BfLHmfyb2
aAKFKpOZPBshiB7tPbv5bwAPD6yw1XGOgydK2SC9zwtSbPvFB/8OgPNx3NtS
6lGw603eV/xqhctqPju/123z7gF5QvGVYfD8aAo0uS+KLkaXwGm1AdzPGGSS
ahpE1us3b1PULYnlpsDGc3Hbfve7zCH79gDGU/RfDkd4Elp08hJEch/U9nUP
tWz3nbWlMudoTiCx+SNUmS5gm699TuacHr0QNhTf/5gURvTvneO59KwHoZNW
6geVenDrerEqp2EUoeyakiN3thvTL05/dRPpRv+GA795aQzBwsF1h293F1xT
CfmgE13wQWiHykgscfLHa+rZ7x3Qu3jxldujTtB94ZL8w/6WWHws8iNquh23
VawWKEs7UJfqxjYUF0uMmMgYCRS34cbfrki+yx3ouDgxOqUTQxxRuEHr9bYF
0mK6rsst7ZjN+rdj5UQUQTw8lH4ssAn+RsKe9u7t+Pw7IYRGMZxgvyJz8VRs
A8YFsu3mNdpxTN9xi2YhmPA4PfsqsrMOgi0BYyry7ZAWLbRv5A4gtmhly4Yk
a/Hm2VmbU1fbQbCo/17m9yZ4oeXS86caD9NXqpNU2sHxhIFRvduFGO5yCsje
UY3D41PCkZbtCPnJz8J60YyoMPnhfOl6FQa0bONSPrXj5LdDHL9P3SByJu6T
5xKVuCS7OEfG2AHqFzQXWtq1saSV5ib7sBL5xny7Dlh3oJSNP8iIxwr+8T8u
zB6sBDltRrLrUgfWDo3SGgc7o8tZPXx0byWUxHawjJt34g4Rvan53g2Src9C
9wtVQsHulOTSni580yaIc10e0HgwVsmive2btqwes8VdaKXh7tzL7A37A6wb
k2WVCLDjDj6st+1f7F9b3ym8BtU1Cd8u/ioUl1+jkmXtQcr1kvDOZ6+RH8/C
p2dfBbs3FxKaMnvw7IithY+ZN2S9pEapSqsQY3FGXk6yF7SrzSwHfT0xqv6G
jW6iaptP0qPuOb1wDE1Tpx59BUbauwP/becErYb19Tb6PqjWOeg4p7vCM7b/
a9lsFT5NdOW1P+2DzM41h2BtR1T+rNRVbK+CzJJu6tW6PvzhWyuNZbVCv1rp
lfTMKigGK12ckuhH7fxbsdUNQ2hZ7c7h9axCeKpJqmRXP6ht5b3Znz3E+MpZ
j4fq/3//WKfwxna/Vqgz6VwI4SNG++9+pjy4vf+tHS97jw2CUIqtf9+lSeRH
J/xLHavEJ9LKMtvYdv2H0tRDdhPCO+iu9blXlUhju7j68dUQPuunWhukWhMT
fbynD9JV4jexKrHIPgy+NBubU2xOxGC4bOA3SxLUmj8uJ0QNQ6m/Kq6H2ZWY
fWMS3ddeAXln41QpzhEccV5eodrhRsQqfGm6zVWBwIIikkXiCM7phO9OevKK
+CVzi96uqhzhRVK0DhKjmB8pECDk3InRQY3dclfL4HzuXhjP6iiIvsFUowJ3
ovPccYPE9hLUyVQXhhFj2DAavVGT6E6UuqZ8YtMtxtfFnaxpSuNI47/QwP3n
FWEYfC5VbF8Rbvfs+NRYO47VWEovtgg3oo4v59jkQgGiJyifi0pNQDjc3UXi
iSvR+lfpi/NsPpa5bTmWiQmwqaWIvrV0JH6I6V6aOZ8PMePn1lFnJxF7x5e3
RsqS2OF9w9lobz4M2BixmTqJ8lZfwZ7bz4lOXfHbB/3zsXPFdI7zyBTINshr
i7P/iZOpDoeJ1BZg/tbuha7iKaiG5O90kDFEylHZ+9cqipDRnKRgpzGNhxJp
BRdanBG2v3O56FUpYLV6PIV+BmNefv12h3yQ9on69GmGCihz7yTNls/g6M8v
71j/BOPB7+k9llvVWOffIb6+NYtA0hFO/dcJ2E+xJMhzrh5p8xMKKfZzEOXN
Kzd9lIKb94pynm81wflWXpLS8BxqFS5/PX82CwO6uwy3TrajINs/2erfHKZF
jfmOKOWCXu5HQ25CJ/Y3GBs7TM9B/Tbn1dnuQtxsbWDae7IH6yzXxpgj53Ct
ZPnS34AyPDw6v0yU9GGByrTRcP+2J/YWqlFTkUDjwvybmncQ5MdSzF7d3+Za
raaRSlUlDGr42r5eHcZbJplkbczg6SPqghjfKpym3x9q/2UEB48H56kMTeHU
zyKd8G+VGBpRT2unGUNKlThdnuok+KOtff+JkTDrLKCfkTcG2zClSpGWcQwu
Z1uHHCnHUbeNdputMXAUNkdXl47ioNL6i2d1RbD3LfsVvTiGO6Hf9ymeGEbs
N970zdd5UNz3wOSV8RjshEQMfOcHsBb/w07qeDaGgjcSJN+P4hyF8AHr/j7M
sje6M82mgPVVpuD1tBHwFkrXOlL0gnPC//Hzl++g/anKpTZ0GNJX9lcGPO9G
hpRrznRMOAqd6zIeWA2BIXLr/R/KLjgetVWs/ueDtyy33godH4D+2eXopf52
kOW+it7PJE68UhPQDdrsw0zOjKtkZxuWZtK05nmsiZ/VRxWLG3shF2VVPMzZ
it1Ha3N/kb8iyjRFxm+adUNmarnckLwJs/S0ajpM/sSPvJSu3fe6cLr6+ZxN
bgMWf55xu2MTQKz73D3w7kYnap7b8ryNqMfd6R5NP8lAIuNosbLrtQ6cyPgb
zRVfB1x9lDb1MpCYNmH9liPXjuEvcgf/5tUiOmA+yU80kMheTnWpjm7FBzZx
2aL1GpDPy1Hv1g4gIo2rPn8taIZ7gMxQ5t0aOPHe6b0n6E98+JLscO1zIxx0
aS/erqpG0nTAw3JqX6JYQdQCUg0gKR0Wkr78PwrOO5qr/4/jDRqSlIYo7a8W
IcmIZ4rKHhEZ2QmpbJHVIHvvvfesJOTae4+P/fGxhUqFlPD7/P59nXvuufd9
nq/n8/E8555bDWvlYPy66E54hOZY32+pg4UMZfBicxXu7LEvcmJ8Q4wUabHm
utbiXhDXBQH7KnB9EpFw6nYmuoKmRj4Y1iCkcb1bV6kKW2NP3AnkfE7cuTR1
20+rGiVz+pultapw87HJvbbqZ4QVa0/3t8dViKk4RT8bQM298VQR0oAO8cI9
JJ8lsBL/NE/tS/5ShUdlr+P284O4qcDC+rW9AqatBRm9utVUvvgszXpQAbqV
/wkvnK+AFnNwk9GfalQ+XRJsDdOD1Zr/TdbUcoS4c518kVwDjQatX6e5TBGz
HJ1edKccMjKn8y0f1MIw2HFE1tMcTx1WGDh2l+Nb+dqOo0frUPglk9nS2Qom
dY+vk7sJxNP6CBYM14FzK9/1Oyo2GHZZTmCJJRBw/MrO+XhqPyXbyIhv2MCo
wDtDVo4Au9XM1MazBliP7VtMt7OBr3Hvt/3TZWg84Pew71wjlhl16Or/WmF/
QbrjfuMyiJjknm9tbUQxOz9jSYsFimI7Tt/t+4wz20LjN6yawJyS1F/PYYaT
9lzlBfyfIT6cbHPiUjMYuy4q6js+huO2KYWDP0tQH3jf3udbC6S29q6fn3sA
8lTDuUalEkgsf4j9+7UVpjp/U4I25NGeZPNx42Mxrgof/6O/1IZCHUvxy7/Y
qf1Dc31pTzHE/Bs/Pn5B5Zyl8pPCg2JEq+/35NOSnyDxbEFc/3c7JnclW9Ib
3SMO0G3VLrxXhLGf5AO1jzpQaM19gJNOm4icl13rl/wIGenUxzztHTgbz0fN
cj0i9G4Oa+D5QuzYolW0ytcJNb2s3qUtDwkj26xHOqvvcXgP/6+U5E6E3m3Y
8s3ZkIiInd9bW/sOLAq0vlMnupBwqE5l6eojYmKKe79wWAGeO33yuZTThb+/
zElWwo8Iv6zlkSv2+fAR9pGalujGCw2dYekgQ0L9slzCb9s83HeTZmf92Q2N
09fv1/A8JH71irqJcuRC89/1wpiE/3+fbsDAR69PKPEwCPqkZsNUO4XOSIUE
O+kmF1pWHUIsIV9jQikLv17RhB1g6AXpn6o0bbsacWHyioAXeybOjeRX/Kju
Bf+9kL6GM4oE45/nJdw3MjAhwjfO/bQPlamH6jxGRAnv+85yGe/T4XRm6Bfb
4X4cD3o5OnphXeTz5e/hqx7p2HlLtj2lnTrnsBWY/XMTQ3E98jEd6YirmlE9
GjMA54BPZxpi7wLvVoSKfDPwPvJk8q9Xg/iTujt69qEmVEVvzT2vykTva74K
U6chHJ5/obw7SQ/NsyZNdTrZOOJqKs7hMQxZi3sRe3wfgcuM1ihTNReETth3
8SgyPpkevnRUyRTX7ubXWTfkYSdpIi4sZwSK5583M04+Q9PWsu8f1vKhY7//
YvoDCmZvvHwjNWEOb9kCnayg9xgPTDh998Eo6MUy8lZ3WiOQSZCuceMDwg/d
4LjUOoo3etdPyMjaoPUSjbeay0c8fMqrKSg6BjcRGVqp57bYfU+KY5HlE/wY
nVzKiDHcWjgydNzvOeZPnxVRayuGe4H46k9paj/ldDVTc7XDDTmp3ksJpTiR
1J1zeXocWQ3tX57Dnsr1XcvFoWXIH3HYTec+gbbx80crQuyxVHqn7r5aOR6c
7nvaen4Spjn9Hp6m9jh892/9bqcKbHvenhtfPQmxTu8VrnI7fM9lOe9bWgm2
eVPHKPkp/JVmdf9X/hx7WXg5nx+sRu7pyvOCTVOozV54pDtii7zeoEz5qBpU
bd6+T+HYNOLSTJsOvrDB8yF1w36ZOliZsRzLVZlGUFdfeNGQFbgY2B/6n2pA
86Hnk7Ku0yhdnbts7WmJ8+/TEiUONCH/6o7xyQ/T2HeXqWjgvQWevFLdfIi1
BRfyX5H1Z6bhbONU0cNoAbOo0nvHOduwOjWpvPvQDNb3W758O2+GG/6Sph9K
2lFwieRz9coMuBoORR288ASJT86Me4x3YO4/LVES+wzay5r2h+TpIdDwdwTD
ni6M4u7R4L5plPvr3z5cfAt5LQp3cKYbP1z3yKpiGpvG1XjYHPSIwejZ5/17
e5CsFxdo/HgK5bllqT48DgT/vS9rQn3UHrh37iHzc+p5MvkZF+5wJ17lzGVv
sSFh8+ab9lVOE4g87p1gwu1P1By3+vFxhoTbhUlDx4LGUa65qPL+dDDxbPCN
67/TvaBcelLuWTqGLR0d51w7woiII8+5zpzsxdmeD+IHv41C1m2en+trFNGV
co1410uCspj6IfKeUdCs3tGvn44jbq5Spn0lSQiheKnTC1CQ0rLtQjlHIsEV
LKQi5NWDVqbD4UxjZDx88bxJkjaZYJ3dv8GQ041HttLxux4PY19hNwObagox
THfa5hzRhZ67Nz93U7ldVSHZwvpEKnGiuTXSoZHaV5/vYTZcGkDvTf+XXU9T
CRdYcbP3dOCWDstwON0ASg4f/c9PKZXgnR0aMB5uh35GVdWOe/0QPF64z6gl
hQj4mbv++UMbFOc2vxuu6UPJRuz88vtkwljkow9HVAuqH3r/DlHpwwWjq6YJ
K4lEscHxQ2zeTVDZevy626E+9LTpkmPq44nhrmNcO6Ma8IDykdT7pxfPHrHm
yD6LIdIfRVSOUerAvf12zcvfvVBY2n2lLjeM0LymHx5kXoszAY5Y3t2HJX46
1izzAML1DatRhHYN+Eau2mmJ9MHa3qLcpdSNmNnJhlfZ1XgoVR7a6tUHGtei
gwZ6lsTyQBnJUaYatu8CHTdv9EHjd4G4tqI6EuZNSNxC1VhY9LENcupHxdFn
2ex6zvDcNiDaa1eNatdxmRzq+bTtM3v/VtUL5UqlEzW7aqB6LPkjU+YABox6
fE5mBWL5o7c255caBNNzSInqDCJqaCXlWH4Yqpw/3M3cXgeGgPgHh84MQT7J
YE7sdDSGTLur85TrcTQn98/JL0MQfr+9RMckDgOTxsG1nxvAf/t143zMMOjQ
xqRXF483/ZscFc41wftxc/icEBmtXKzl0T4JSFybG1B62Qz2+AGt6CIywk24
lna+S8B83D/H0x9b0B/068S/WTIWpdLWvOkTUEH8DPVtaUUF9+jxvi9k2C1+
9vFqjsNl/k8PXjW34bB0290H/WQkOr9IfqMTg3OamTqX1NthILm+0tNFRsyg
U8lQaQRqmIpZmKvb8T270slrgkztnd/XFEtDkN37RX71SAc8xJYXVmhHsHbU
8A+LRADebdxkI2l14FuI/LH2UyOQb75139HbA4uK4++t33RgR3ZlbsJxKo+z
bfU8MOOIDlfPjzauHUippsTuoZBxse5j7JvrD+Dcy5I0qdkBsa64tBJLMqof
PX+RJvyUyKVnmGPb1wFL78hrV74PQ1W973Rh/kvCUTPO7XFWO/J9dl5//2AY
xWf2HmzS8yI+BeypCr7SjuL6xMWU3iGcPf1s459mAGH+9Sf/LaM2ZGxwf1Uy
HQKFxq3aYjaYoLd6PPVRvRVNDUl1Dy4O4a7Kz0fiP8KI7oLOLC6xFugFz1jV
HRxCWMFjwVDHSKL+5M3vbEeb8eryG4rlySEcH24fV7WPJka32wUFDDSC/QpK
3goOob7B+7BHcgxRFFrjMWnagL8MEn9nxYYQ8F/f900xMURwRmOw/nQd9nM/
ec9wbwhRpcwfvuhFE847TvcuqtSiTiT6yhA1T2fp5Tpnr0US46ZqAVvaqqn6
Y8+PrhkCD5k+a4dyGBGjSCpp0q0CT56ZWtfZYez8Ak6t6iCiZGrx5DnOSlw5
OHYtMm0YWy67W5b6+xGLfmL+09IVOD2YWNAqSsZ1l3NO6+ZuhHpL6fh5Ujlk
F7htK76TkdO34/LtQVuiod/t5R3qPKtIIdIxewTlG3YKM4I7iQZ2kk6XVAX+
mN74kiNEwTXp/HO7O+3QJlO1u5+5kurYAtqMsRTkLgcyJg17IHDx0OFl3ip8
3b1u+GD7KM7qxXbGPAmCc/e4NlNQNe4dSNdOkhrFt033qw/disTE4mttE9Fa
0Au2FCqYjKIkY45nvSsO5zRONJy5WY9y507FNy9GUev8/L/DnYkg+XA2zvk3
wlFSinTGfxQMrRrzKElBainNT9EjLRCU0nQUeT8KFudafcesdLjpiT6mNLbh
lea8rPrMKJ4UPvBVzcxC7ZEzrwVuUPXWs1FuxT4GeyvhadqQXNj9l6t0PqwT
w1Yqba/0x1BgdFT/P8Z8BBtw3hMb6sK5iMY6Lp8xbDLwWlFYyMfw4uHRAtoe
8E4wr10MGEPpd3ujk1cLcFzr7plcBhL8XhS+mtcew492N3nb2nwIuhm8ZVwi
geV41+vUn6P4IEzOLMrOg5SSunVgSC8iok/lF6mOIldMo8cjMBsjJWpJdHO9
YPpuOHc7moI/HsdC5LTT4PxXQqeDpg+h6UkDdf4jCN15tc8gLAHSQVW7Mhd7
IWyrJhVFGkZbbOC3ApoIjJ6vnjxV3wv7zT89lDmH8FNrwbDkmh+q6/54X3vb
i5r9nI5/igcwVlVg81PCGXuPlWxy5O/F73O+IU7+/bjOWZhZuk0FWkdZSpNI
JJzh/PdKKr8PCzqzfnlfzIj6q2q/aNRJ+PMszSNjUx+qj15ujBR5TRTMVF/I
+9QD+i6Hw57yvXib2XMj7Jwv0Vlcasox0w3PKxMGVRYkOG72NE5WCyKOaDWv
bf/XhV33TLr6UntQcVYmnmktlOCzlQn9t94JH4aza4rfuqFEN9d8xz2CYI3M
mxNb6QDtVt/QVpFuBO/pjj1FF0X4a21Uvltox/nb7rkiEV1oarLXtw2NIu78
lpBbHm2DgNvdX0e3d2Fx0O8xcT+K+O97WB95owWXPh7TivXuBM/ul5HyVB8o
C4BQhWgzuDLVE2h4OyFx8aSo+H8RhGD7pYJ3SY04eDqdx2m1AxS+N1U5qmFE
W7PD66esDRAkGZ2+Su5Aht22HWXrwcRqn51kQ0AdehP1+V5S+0vnWpLM0aUA
4pqe7uNOtlowyhkzPBnsgL13y9J2Vl+iqHHz8ummaiS731cT2tIJOc0bIx1/
3AgLmsbF6LgqzBlekCBd7wQT1xbb5mRnYrZbp2MgqxI8wvfmtAI6cXzUZkrD
xpx4+ujIONNaBfRv/eHY9bMTvHtmc8M2yxIeUuWFL8MqYLzQwram3oWVjjit
T7/0cYXprdymFxWQeXbU5nRrF9K09npnV9lgjVJeT6Zej48l97ZRexB4TIbM
2l2gU7ngENhbgcyrgU+d2ruxSz61x7TJFbwmj9VEj1eCYbXBVF6/B4ukPfk/
QzzgWvfSIcC8EmPhOhcWp3pwZtibv5/ZGxJyJ6WdmyupffN5G5MBCXrawlWd
b3wwLN6Ym8FRhf1vTt0bnCdh+OXjvrq9vrgq9tfdNaQKVRXXKLpvelEUuHpC
ZNAHPBxN4ee2VSN1j7hCBGcfYgKuPjH84g3NnZnj9M+rYbD0INp+rA9FSswZ
abxemHhKmKfOVKNfRLFGPLQfiqc1GE98cEfTpMDH91I1YOdgbdG+MQCtcyZR
yWauyGdq/f4zpAZ2Gm/UMgcHUB2qImrv/hJkdUaNV+U1cL/G4V6qMYjKkvkf
/zRegFZWg/ZIcw0Gr780rS8bRH1PW7PdEQsc++sRWVtWg8u0jaE/9w2hVd3c
vNpYD7LWpi/jomtw4p9npY3xEPLUlN4GVR8EZ3dYBJdpDUT+vP461TEEe0cb
Ho92HYL5fDyHC1cNtjCxHXooNwyD+5W/5FjNieyMgIo31PeqKgkcFxwbxkNM
CLYJ2BPiSrx27YHVuPhHmJT6ioz9BgbRnQwvCVvXJ1FRnNV49HxwdO7sCBwe
D50oE3AltL0cC7nfVeGUj7c2Q+0Ixu2LQvJH3Inj3b3cXgxV4DhcM5zMSQGN
z9fwxZ9ehI0HRcVbsRJryoLRilYUFEnR7XNh9iUY1znnBV0rcFHgO3cjQUGo
9BUxQx4/wsRR45h0XjnmLnCm9e0fxb7DZ7TYLfwIP5EXRfJ5BOiSYv2e2o6i
kDR6eU3aj2D76V30Y1cZ5OZ2B6vMjaL/r89PPn1fYtF8vcbDtRSJ5JRfsSZj
yL0W5r2015sgcXI3WfKXIKz12ubcpTHc3cu0oKztThw+cSuX5WYx9IL+fah5
M47bole1x7a9JjLjooV0SZ8Qw0z7bv7gBIzLpiNZ9Z4TEhZ29LLKxZgre3T2
d/AEqjML5aa3KxNtKt/53C6VIprtRGvFwUkEfq7zMZC2giZ3WsNZXwI7BTo2
P8icRL7IteJvC57QbUq8FnipEvkftfcfVZnCheRP5sWc4VhC4twfgRqsJLDc
vbpnGv9Wlw4PE4m4HLMjOIZE5Uwhz8tCZdMwOiVpwBSVhTiXzZunN7egKRfW
tBIz2PE+Z67M9x3ubv2m2TXWjpvNKv8uBc3A9yiDmtnbT5ilU/7aE0n1wTTR
89/dZ6Dfq3mQZW85mGpMJGjySDhFcz7M58gM9OR+cnakVqH+Dzf7lch+/CfJ
5qJxhNo3tVll+tap/XNi8C8NlXv0+iz9F5Mn0ZzC7nnxcy0Y9oNOgaqn5/tu
HnqyOA79hW8H5QxrQRt0/7U/VR+HFjOObBcZQ07S41ffHGqwNcTgm2EHBXzp
YXzjSRQ0rpffqj1WDbkOxSccB0cx4PbbsE2ejHKdUzbq3yuwM/qggssiBdvv
39NZ1h5E3nsOc1OFz1idI9ToQijYayD9Rqe2D9wF1/fk/C3Ex+kDGZH7KCD+
8drPuJBA7yvYnW2SD8eUcEbb32SwHJnaqhrUDdktTZq0celgK/9gest+CI0G
ussnizpAk2h84FF4GKLl7XzkOQYh+tDXojikHX4ce55yOHljDNHI7Omn9uDn
LWvH21C6RdvKtPo5rBwUk6oc+sDobMQUerUF5Y1S7QqK3ERUdaX2YY5evI85
t0/VogkMDz4eXr1lRdxQNvxFzPbA5I9zavVsA/YdspSMn3EhPNJ2DeV96oYh
a3G8QkY9PK2OXiYE3Ai1WEHBmeAuVMZWLsVF1SGQ+yvlsYAnUX/psImQZSfY
93bzz3vUwvQpVPL6vAlGfuKrzr0OlPnzTvYF1yCiMjIwjMOXiC66bdEh0o6U
YF2iKr8axj+3dZjx+RL553/0l+i1UnMqyvxuRxU+uFbuObzqTbz56Bxm+bgZ
LRu3RXhXK6kcc2FiusyTmF4ReDiV0Ii6+3y5GqjE+yBZhTvkt8TNF69obu1s
QNfJxn/fsiqgTS98Zi32DaFkOlXOGlQH9qE9Yq8lKnDvfhbt4sGXBJun3NlZ
zlqw7hiCP2MFmvHQUNbiBbEjMp+cN16NlssOP533VODpUrqI9LAlUV5aLq6d
T9Xppm976lABwXNTv73YTIgDzKLMDNGV+Ociya0UVAGundXNscfViKGb2+mS
8iswlJ4i/25TJeLmUyW32a+KuFmc8xpYKYfJoVA5ZftKRN0MOLrZUxXuvTeE
wi2pnOyaM2K8UYnWu4qtP/we4jNcmCJYyhG668T7xz5VULpUpj4X9QR/7knG
H08jsHKidscT7moMd74dfU5nDuuNXq7NuwiMC7/XTFmoRoxKlO3oQwvQcXYw
GT8qg23kr8J/UTXg7VJ28HGyALfdKSHDz58hzclckn6zFtj24GxuujlECs5W
n6X/jCEuuSv1f2ohP5ysg3NmuMf/aFfqg1IEpY8z/Gyog0KoPoVZ6gm+TPck
OZaVIGrGMOn0+3ow81JuxOkaoUC92WYipRjDgpqvpnMbsblwXuXktBrYw96S
bA4Ww+ie7smghCbM+b6dZ1GTBmIsa+gefEKeQdpMyutmPLNXyLvKegwxtxOu
dlgW4bOTi4i3XAssuRjd9jiKEq+MiqK2PfuIOGaL9ms7WnF95nA2h60CccoJ
nkYKhZDqa1vjr27Ff5G7h/c9UiVMu7pcZ098wKRa6LN9QW1wjua7cqBTkxgU
FTKS+fYOftVzPCHX27F+4Z3p4UVtwqzpzZXSqgIYCkU7JtS2Y7xyOkZaXZcQ
Fzo9a52VjxoL0pfm+x3o1tBpUd+rR7AobYx1ZeWBJEUTnb3UgTeLy5K71nQJ
gdEWC/uXVN6vyzn+IrgT92xrjrXT6BLFgX+vcZZmQ5xdq/bHlS6w+ZvtUGPR
JrzryIPiS5koX+l1YuvqQg7aQzZS1IjEg875cWoZcBNkEXR42I0dfK6JXpeV
iMBsFxXOP2mQ3PmPf2i9G2FLgpdS30gSyuu5D3ZMpkJty87+42k98Dz7Q+/i
AX6icbJOZu5qKoKYYgxYHpFw5EgkqwHtIRzqDrE5tj0VHUlPPmSK9CL+76rD
S7Yb6Az8mNZyPxWaEVMch9n78O+zieipEnm419nV3jydhmHj6y0XWPpRKvgf
Z7yIKqZj+P0TJNNxr30gt4FxAKlnbiTLSGqhLtBCIjQtA8tij/hrtlG5hUKq
aS/TBfOCcP6Pw1ko3engpL42CE2BGm0+IQMY795dmRSWjWdfli7oDg3B81S2
Ztw2Qyxfvfug7mwudO6c3qObPow7nR607NcfQecTs/i4fh4I73vHqp3I8FrM
4fuzwwjX6pU/yiEf/CHGAdLmI9ANmMmKNjeCeM4up5AzBbgtojaQIkYB/ZpF
x5SNEWKeHd4sdPgdulqiGqxHKahSTOaoW38EzmMazRSW97hD79dX4DEKqfNc
Qj9HDcHTK8N18vwH7OpYtlAUGEPArIX47w0D/JzlORArXoj+Ou3zilNjOPjK
/8dbaT24fhlc5jb5CNUiu7O03uNU7nKL6SW0YPukT0klrAhqGhFmchwTcLZ2
6ZHaUEFnV6n3tGAJup5teZ+zaxJctinl38eFIZxcofxfUSlOk0ZGBPQmsen5
/niB17/LDGzzLuTcLcOzlZiOhoZJuH8+0r/z+HVCuVqb7sJqOS6XxzvV/JiC
vIsei7mHOnGRopjylrYSByZf/3XNn4afhrBRp50Bcd3qqP2ji1U4b+JiAacZ
FOz7UJgj9IzQeyASdsWqGr5S/8Xdk/iC+s1de6yqbAhDibKE7skaSIlmeRWu
fcEFR/4/oe+diQPbe1cfv65Dx87gsSLvWVxRb6iruedKfE/VvHtZpQGff1y/
YflzFifPK+3k2e9FfFAe+NFj1ASK5faYS8fmUMlg36O86kfoeD9O2lTZgn3W
A4d6N80hLWLri6ryIOJH+I/AitPtMFt0kxp+P4t3Dtw6PUlhxMs/tVxd5h2o
/CJYUas0i4LbylH+jFGE/L76lgufOxFZW/Ux/dsX2P0Ao1FNDJF0h+43lruw
Wd7VvN3lCxZDB9Uu28YR5/lFe47t60FrgJKl6/oM7p+SPF3hHk+oNkWbZ20n
QSjkSaw6lYuC8uij9wwnEBPc47+2tJGwJWUog+XWNN4ddN7M4pZEMIvUjKdf
78VM5xPLo8em8J9E13mZghQi6zt7OoNuL0J+T3+5MT2B/vP3p3Xp04m7lukt
prd6kdqbMOybPo5xsQ+9MQcziYZt9eov/5Hwyo/xA7vtGLZ9uLh/6m0WEdSt
4e3pTQJ7eOomZYNRvA7T3mqhn00oP7x8tuRfD+p3sM2qvqDAU46Ohncwmyh0
Mj0of7sHHTXmBLv1CHg+f6ptYs0hio9LT0QYdGNC9Ayny1Eyrv8TOfftcA6x
cueeKYNaF6J9p09LTg3hsHCdttLLbCJ24felBalO7P3wMZpj0xD+ZTB+7zPM
Ij481dHQvUz1R7OQewPXB9G3qCLS15dBDI092aXH2g4LgRq9bTEDcHIpO7lK
SSO+rQg9S2FrxZhGx8Gg/QNw3L5fssErhRjddim5iacZ0gbibxxS+hFiIZd0
cjaRMNPOPD7q0ghRnq2bfVT78cLOxKmRJp6QOZ1zjLK3AdOujdJMXP14fCTg
YG91JKF1P+5MGbkON2uG9hRR57JPyX2/NgcTThkGNbpDtYj1VFlJU+vH92vl
lY8eeRILwbsLzQ7Wgr+M5viFuH50nb5l+LvHllA+SS8nE1+DK5Qb33PW+0FR
C7eSDVOEcW7k8KJrDZYFtl2ItB1A14admH2lM3Y1PqFPbKnB9Yt3j9rTDaJ9
f7zGlW4frPAFLotY1OK+W5//s6xBKt+ul7zhCME9C0VJmsd10PB4tVtGaQhy
AbEjCs5R+Jsuq/A4qR5vDwfV064MIfL5079PmOLRUrDq10fTCLLSyTBVv2EU
dAg5hz9LRJXWgwdKVk1orJf5nsJKRnWHXUSlcDL6pT0IrZFmrLtU7/jpSYae
odXEZfUUtLTVPH/G3wrepoZtJSVkqBaHy6qkpOBy1tTxj6/bILOa4tdZR8bp
Y/4HYuRTYH/Hs2CvXjui+UXCxZvImLSXvUr2SAb7KmPLnbV20Gz+8Gp3Lxl/
NGSnRMyToNL2cF+zdwfMevsmgr6Tqf33G8+nXYlgUObh9trTiWc0Nxb//z8W
muddOuMS8UiXeGB14UUnBKS+fctlHYFpToWLxJUYpK+94ipu7sRmOfvfbTQj
uKF6qFL+RxjYQiR6vf924tCJ0cotBWTQiJEGUn8FwO3aeojkli6oBtfvDOUm
g0uDoVlh5S0Mvh34qzPbCR+Bbbp/woaxsNNpQJxsA+uipsfXijuRss56tuTv
ECiGFq7v2zkJWbbKSXubTjS/OFap92gIMuFj39TINsRL+V9T1890QtNPRw1f
B2F+aVnFS9eViOBm5Smr6sDVDyrXYzwGIVlu9t1j2pdYuzGnfE6e6ktnX7gI
8w3CEMHzsgJBhIL5W+H9Ne14e8GsSoja97cdn0843xtKHNw6s9Zyoh3cCRuf
7ewGEGv766hXQAQh/LP97d6hVvAtXa4oODOAtV/NB048iSI8lauFKFot2H8i
yTB+uB+S3xYGRuyjiWsHVzT7BpvwzSzzgBJ1j2KK2BTm2qIJHsPBVg71RijU
RNBFv+6HRZnTGx/q9SHToe4xk/UIaChrm7Pvx6TYu9FC1yhC2uvbQ0bHOuxW
Ejla4NUPI6s8ppdzEQSD0tbqvSdr8SX3s7nju378kwrJNAgJIxxjjAt3tFVD
M9afOWu2H+bfJI9efh5MhJG06hKCqjD8wnhUjW8As70hJ8oa/YkDbxnX/J0r
cV7GgLUnYgA751j4tTQ8iX/qzl6RSRV4LXY2OZd5EP7vBe5LPHpJbC7T7L6w
vwKuUh5GBtmD2KMuaicYakboZnMEs46UI48xgZ6Lukd+r1RK/HRvYXDbzgk7
eir3839nvrl9GCw7xF7JHrJFtY6g1p/QCkw7aY3crBhGiE94DOmbK85nbtP0
sqhEJ4UnbsKRjMqcvyM04354rKOUcMWrCg9sVhnCr49AS+VttQxbCJz079qa
CdXC0u3JW2lJChZ6GNrdBWIxyXqVo7a5Di2LXvq57hQw/lSjV7WJR/hJ+Y96
Tg14su/PvT0NFBj2Fc6tMidCO3jn9jZJag7+snE6sXsUkglSXVJvkjBmUq+1
dqoFPIXs0veVRhGU+DZvPjcZR67E3o5ab8Vf3xG33tBRrIpHXJ14kYItzhZx
lwzbkdRaXyLbMopxr8DgkPoUuN04THNSrAPSLlF24V9GwfC+m/6ZdQr8L7o9
6d/bCT6VgXcT46NQ3K0q++1lMvxkaxJPt3VCRPGu567cUexKyD8w6ZQI9yhB
r7sPu4AewzMsd0ehxn+pWiIqDg94FZtFR7og8cn65NsJCtS+OrBfLIjApr2S
++uEu6HOdCqB0ZqCs1UPilUPB8HE68r2Vy7dYE/xF85gouAvIcJ7U9ETCRJ7
zfhSulHw79ufAYcRvP92vvQ1nQMclMIX4pK6kSsrZDw5SN3r/qiaAybiqK56
IzRs0Y1D3zge2LCQ8dq2KLU9xJZQsf3clszYjYgu0SIurmGouk05Rtu7ExnH
K87ouHWh2leg2OP2EB4+3mgsCwkgnFVlxD+NdyLIOn5JyGgQrjrXm+WdQong
E3EvlS51QjxTj00qYQBpxme2TjyJJB7qtJrKP+uAxVt9YvdaP9htrPU0rGOI
sCAJ8WNp7Thdxs04YdePPze329fLxRHhtYfs2FPa0PRbpMycsR/Bq3YdTVNx
REoD433xgRZ4utQz+r3rg/v+z+unxuOI4YuI2rLeBJnJkPMuVn0gT8eb31aK
I1TA93b5eCOeSu2p+Cnfh+cGmRrhcTEEbfsd7//u1eOBUwPXi5t9eODm2bHU
Hkkwb6Ins+TXYtc3zZd9MtT73J8YcFMOI4K5CfdW0Rp81W4tUTbvQ8z2uO+M
N4OIhbCrFmTGaojQ1ynaU5/nmOEjZ1c5X+K4dEK0+tEqeEpWx21m6sdqa7pk
6NE3RLbwgwklg0rwb9vL4eHRj5uW7u4mlpaEwn7Wi0N/KtBxhme7HbUXvOPv
HrIu5cNmu1C61ckK6M/b6SbmDKBTWzpR/JgNZvqP8IVzVyI7lY0fhv//vwXv
hq6EK2I3E4LGQ5VolN+4NsI7hJ83WbIIfT+cOmIvMDJYhYTs+XNL9MO41T3e
vvEoGJKt6QcuHq2BuBNnkvj4MJa/vhaQ3RSBA0od6tbutXhhvz41mE2Gzjh/
MdePaLxsHiDT0NXjU19jm5bRCHYmJk1efRMHDbqwgBKPBsxaae/4uzYC+K/S
PXsVjyJaj5KL25qwsmvNlvIfBYWfucKkhuMxcexA7ZxTMxSETNKaQUH8uUi1
n2Xx0H21tm3b7xaE5z0171GlYOg8uX5CKh72piFhvgZtQCzppfhzCk4IM7vb
+sXhxaB+bo52O3Iv3A1JjaVgwP5Nje3mWDR3GN/KW28HJ9NWk9pKCg4lzh+d
oI0Cw3iabP6bDlxTJbVbd1Pg1x/vEU4ThtquMYlt3zvgtbqR8qmGguCCF99V
dwRCXEtGSp6q59TBaTlrfwqk9YXOJ6h6UHvK0eq5651YusKyTnudgnLBxcpK
HzucVNOxaeLsxHUBpQt6H0Zwve/rWcmrB9GVGavKs7UTph4XWtxGyFjg4FSl
bLMltng1VArWdkAjU2w5+wgZbEmFeVfHXQmBX8e/Db7owJ1gOsX3r4dxUv+n
3Yi4H8HJ7twofbYDXwnlA+onh/GUl12+NC2IMFT800mh5iPfmZPhN74PYdPJ
DOvrH8OIazqe6pZy7agoyi0/1T2EZvqlfQ81oohlw3bRSds2fDE2eX8hm8pL
PqzFH6/HEmYZ9pQ1hlYc3xLUx6I/hIPENsUOyzhCdL9+qIF9M3xNaKuPc1Dn
1+4SlOw4oluwc/dCcyNisv+OP9o1BJaMP1/D9OMIzSrZlfX9DfCRLIicXh+E
86Yn/Nb3Y4lgF6Ovux7VIXyl05mJbgi7QtLzhs5FE/+9O/Hp4GAN6j41OdNx
DWF27onRN8kIIt+Lc3+nczX0ecLWzlsMwTd89scsEUJcFE6wbnxYBY/Ed5sF
qO+VTOseGeESQGwReSP2IrASKRl8/kcVh+FmtfZgaIcnIfH4mNvQtkq0SJeR
rs0O48jyVfK3rU5E1qufv25WVaDztFbzpUAybq9WsBsVKBGk+lJvz4kKOOh/
mpK+NoKJ06Wa1YetEVsmpJFhV4nMzsNTucsjKOAnXXsm4A55wUZLEYsqlBdK
arVqUkC7+faGtF0gjH8l2D5rqUbGsS0h2dT8Im2sMiX5R8CIvzD7mn0tav2Z
vqgJjMKdh8y2YyIO3LWMCDGpx+qH9luzSaOIeBWRZmiRhJlrv7K6vRtxT8VT
czfNGO79WxuU6EgF/7Eaxh3dzZh9tfrthvwYFK48+p7fl4EAksqNp5fbkGLF
ya3tOobpoH/+9WbZyPT+tP9fVTuYvff6KLqP4fdmZ26xfzk4b/Y45+FkByQH
Vc0m1MZgFnaCc1ozF2XH2vt/bnRijmVOSnXvGDbddD5wfTkH1UdlUUnNi7om
ze4ggpqPvxzdlI7kgGf3eu0CYw+G7mV7JZuN4luVkM2ptSz0+IhlVi73gPPD
7UHZ86NYYUs6UOmViXu0h+5uFJJQqPr9t/kYlQe20fxg8k0H0eXgaUztdxdJ
ObsLPCiIC8yYW/iYAqGjli8tInvhGLyz/ugeCnY7G+/UHkqAV6Pk13M5vWi2
pnOToZCRFHIu7deTKJzr+s+Z7NKL6EEHVWHfYdDR6Sb8jQqAfdWw5/SZXlzt
5RdMoerNOjlkw0jwJRRCydeOppMwqs9KGeoZoO7R7R0M/jcxeZ9y/+chEn45
q2kiuB+bcpUaAx7YEQKS0abf7XoQNWa14+TLPiRVfb2RfcKdYOpr13h6phvJ
ZQm83ssknBUYTX43E0woFP5M79HtQtDIzMcuDRKaD3+g03gbTlgOjEd+fdmJ
vF8RCQofenCK7RKXDFsUwV2qONTt14GtUaOJvqd6wBj5whHu0USXuFZgcWA7
xibsdT0yuhHgLGb7aimaGEz87+fPE23Y9L1V7ge6od9eF6DlFE1UT1j92nKi
BS7ZFRtllC5cvHSubE4sihD9fHnWga8JrwvnDbf7duHfO7Y7t40iiKcbHtN1
5g3Iys9e+CTXBdtHbO+V94QRvqtnPM+O1sEvW1bQ/GwXin5ICO9XDCZ4qyb8
rV7XotlZ5KjV0S7QS3/u3oMA4vqO37SXlGuw8ovXkoGrCwcj/iVvzvImtGck
f8rcqMZcrPC6t2YXmCOE7S6yuRJhfMfq+m5XwSfQxTQwpgubHO4kil9/QTAL
XCQdcKhERpV8K+vPLtT//W6nYG9E7DCWnHafqoAkr5/aP/VuyB/ilVjiFMV4
nbZphWcFHJXGZzoHu8FXJvfot/ozKr+35TabV2BgRxRrpWkPQhgMtl+pdoCR
RA1DbWQFBi1F3nbvIiGPQWDp++43WNHLL3dcr0DZtOdIXi4JM3f6Erc7e2Ca
xXR0zaMSYnPOluZKvTBhVD/Wvu4D6ZujR09frELVmL5i8EovPKol1qfO+eNn
e6OyWFMV5gf8E1li+9BvxfTj4fkA8M2GbnLRqsaNLTN99y/0Y5+qOes1iwAc
Zet84DNbjUNSd9mkY/qRruh+ielkAMoin3hcfVIDxtH3yscZBsAzIPk3RNMf
4uV3pvvna7DNKC9S32MAmhzTPDzwA90+h+AIw1rYD8fQi7MMgibY809rnDcc
t04oaw7Xwo854ZxC6SC0eeoGR4964NTL884aknUYKLpWNGI4BA5V2e7w2TcQ
4Dg3KJZWh2eRky+q9gyjqj58F3a6YGI4RPHjtzqUVdy2H0weRtp+8m9eHhv0
xQuTD+6vxyEb2r/8x8hgFnYMMXlqiBv3CjNAnZ+RdRS9ZEPGJrdzJ5ZcF0UK
Vd4zv1qqwwmP7UMlRWQ8sqzRD+19SDy5Qno29bkOG9bZVc5LZBj7WKdtfWNN
rJGgX2Jeh+zLf+n0qf6c+PEqA22gM5EYZd1ad6gOP/wydJdCRqC52H7ifOYb
4un9Vpf3ObX4nfJs/1YaCu4np4dkengQ54rPcTTw1cLM5lhFuzgFbYZq7AeP
+RLFn+WlN7Jq8F5T2ZzTiwIx+vCw39H+RA5TYm/PWjUCY8+Z3CNRoJ1rIOf1
OJDYVP/boflSNX6RtWs/M4+ioPZtu01sEOHnY053QaYKdB/EWRXURuGfnPEf
B38wYfGAVfbxg0qYydIvrCSMQsQ4/eJNBBOCPisVbY8rIH3m09bHK6NYzzys
8+RDELGxnXNV6lU5PlikcQZpjsHZm2lXuHcgMVfKtDb/gIA26Vm1YecYZkMf
0eRn+BNbLv5ZYt5WRtXJfw62SuMoaA0W+FvlTWTsq21xufAZhVdsLh2ijKOC
TSVcZ5MrsTt2MV6N/jO8ezsvUcwmQEqqKOi4akM8EMkeV/r+GVnTQnz8axOQ
PFynqKaoiOVHx2kWLpWjdJ/+1v0mk3h9VUAoyuQNqmq3XF56Vokf2XPFzaRJ
0AjdcOO9EIo5UxXNyrwa9JT4f2JSmEJyKPcBTvdE1O5OuBj0qQEmucZzi31T
2KIrabvukI2pQs61DflWfOJt2cmvOQ2GvbEVD8veQ6nPyO5gcgeM1nj5vpZP
Y4ONcy+/ewke7RMbVRDvhvZgP1PY6DR8TJPoSbIVCAooJqXS9sJJTGxgS8w0
2C4defwstRqJKfYNSfP90Obw3ORJnsJPZuZwV586sLE7eDxJGEKoiZ44R9Ik
1DzXeF+daUBM+5eYhXgynpaaZlfvmsBMnVTOO8V6KDGoNW9sp3Jt3t6XldfH
ML/C+IxuSy1suOd5Ql9SELbNPCCV2uNyPl0oYBWswlJzBUNFNQXqmnf0wt4P
g9TsUqwfXY6NpY17bxop+Hww9u7MxgC2tqVdL35cil+3aL4EUPvwRH6Xq3xq
H6R7Miuy+D5iU6uqvSU9BRw3WQV+OZAQoZy79LIoHz4dIrrCs2TYpEqfZY3q
xol4row3uzPwu29F+nDsMLaoFOy5tNyJ/xgeRiXLJUDvn1xx9mbq/i9xDPOa
teO62xmTthfeEN37reAe0Q+OtZFf9fvacKROaSNswh5VvZu/tj3vQ6DjtgM9
hi1Uh7ls1EYrijcLpu15nL0obvELFe9oguu7azlOAhbECXO3oa+TPZDhdRJS
lGnERbu/EvxbXhK7SjVHPlH76Tun6qO8pHoYrzfEq027EYXDX0IyzLoQPMV3
Es512PZyWkQ6ypPY8T5/lEahE/X9zZEq2rVIK6cV+FfjTaQ8Ng73E+1AezGf
dpdVDWyt1f86zPgQGVPplh6C7fARtRyUjq6GzwdHPgcaX+K7krP7ftNWbGRW
98d3VaFhq+8RyT/eRJ1oBr2VVTNU2o8cvstfheVzNLw2e7wIk8eOrq7+jTC0
5+y5l1cJ3ZKF41+k3YmwvK764Baqjy3Q0B/hqYSqwvYV1/43hIbsTftt/HXI
tY8YuFFRgReeCseerLgQXl0HL9AN1OCBrgRvvFEF/B58rash2xM+lTRnLuZX
Q+UG511pQWouGZ4I86RYEF5X9G9UZlbh4BWW6vLrFVBfCE34deMRUXj5l/X+
wkrI1R0yc39RAXuDChZ7u7vEm0JxksNABUKn7GPm+yuoPPDmnwP/FShv0fhd
dqACToHLgw7qlSg9naPqoqKGnYNngudMynGF6cVjzfVKXOS4MhrB+BDXbHit
nOoJkAUbRniLqzApmtp9RNUUzJGWvG20BBJV8rSkX1ejWCzMivmRGYJbju1Q
fVuGE1MHXvxVrIH1/SgJcRYLhEx27ozjLYPsDd2LTCdqsfHskfx4hgU+Cau9
EBv+jHfcaf3KP2pxSIK2leawBdzcSxZ11D8jfPXOIc3yOugVKWduem2GfbFM
JKXyUniw12i+fVoPzTRWHgWPJ+AKqogc2VmKJ+fbNK8dasDJ43xeZeJGsF6m
3dohUgKf6Pp98S0N2HXxL8sZXz2ICP8wdIz4BL3/ypuHvZtwY//Yff0wGRxT
4vbh6ylCT01kRqV3MxjtyFsqvpwGv1CGVjZTEZVPNJ59CWlBVpxeVLPsDcJC
tfLN4u2PsM7660kb1QoxN4ZLTnV3ifscZ9l3qBeiSWVY8kBgG5i8L/5h1NUg
ni9/dVcW/4DOqbXkZKoe004EHeQ5rUNwPL2b8YDtPcZYVh6uJLWD1tV13aZP
l9C1NrgRM1OA39OcPj1MHZhvshZo9NAjOH99Eb2VnQ8PnVcnX/t2IG/y+8b5
Z3pES9Wn4h12eeDVMJYXOtIJaR784cnQJUpqEyeOl+ZA21Q+51RxJyqCtGLY
b+kQI+oCzDdasuA4cXiR42EXIrgbZr++fUDsMg8W2nU1E7mlm4S8WLsx+m1u
3/qd+0RrVf6010o69vVs/+vd043Mj3tvz4woEj+E7ROMNtIQ0JLrm+ffA/rS
xptntt8mdh4u3BnOl4aMB2oj+jIkBAjr/j7ZfZFgEnt937Y0FUV/5xnT/pLw
QWzXXpcsLohnvwycDE3FWNzq5fH0XshY5fEe5rkN5T1vX+5qS4XIvtn0OuM+
VDPp89XnKsLKKtN876M0jNTLtAaI9+N35Fs6erv7MOdR1dyulw7ti/rpW4QG
oLFPdfbckhZeHtfs2PYxAymTZqMV4oOwIxy5RzfrIVdfkKNFMQtb5S+2ftOg
+v0ia2NooQEcFBhehhzLQeP5hquiNsPQ46w4JbpoiKigijjpLXk4lnFov60P
GXdemowYhRrhckmH7d6lPFhwW0UuJ4xgeetZmc1uxhgp6vjv6nQ+aod38Goq
UHCkRTbvc6MxcmPFD7STC1BkL+Y0U0sBm+uVAT4/YzRXforiG34Hiyz7Q/XX
R3Gr+Wme5U8jcKTzphyafA9rfk6RqPpRJOw+Y5z2/RGY0r4Y5f/5AIfJ7qQT
ulQe+JeZttvIEL6WvBoybB/hMWQh+XbXODxeL0kHXTTAmT1NR6eVi8CixB1H
KRtHu5vX0aBtuuBearP/nfAJ+VmX3O5YTmDB19WoNl8dNzX0ZzW2lyDvqbSX
0+lJZAR2UqoNFTDWbh1+40QZdG6T6mt1p5Bm2M/eYclPiDVwDm39SqCERmZG
dnwKm87W0lJSFAmGPzfOmiyWw+SyxcK69jQezVkkjK9oEUra6fdnUYWkxWyB
3w4z8Om9pjsv/Yw4otqaoBtUjSLHmjQ51i/Y36fX+OeANXHkl9VxK4ZaFPMO
rYa8/4LFuNbC6acOBHlL3evT7+vQT5EosRCcxSd7s27Ni68Izb3qef95NcB+
07JtRcwsTpsam/1geEu4heT9TohrwkwrjyJr6yw0wi9MXlX2JiRnNJIFV1rQ
duuSCCVrFo8MY+zdbwcQcz9cNr1FO645XV4dvDeL4W62KMszIYRGkYHNM+8O
BHL5dnrPfEG3ir4hnV84kWvjwfm8txOTsg9vRVl+wTyLkOrTi1GEl4x5n+ye
bpjqpW95tDEDisf0mf2HYgjt6kGzYXbq/jybPhZOPYeyyJNWTH2xxHb1Y/5B
B0nIPmdx5Q5pGvSeXwTPMMYTeeXku0vdJKxPDFX4z0zh7NXaZs20BGJ4gzbu
0e1eWIQxbqmum0QkXUcGSpOIpvf//WzT7cUerluPxSIn8H636fvyo6kEb4OB
YOi1XlgmSVoZPRrH21cfrXMV0omvspfpLkyRIN+z6jgrPIbE63dk/mzKJJ52
R7KVmpAw1eTXyMsxClo12SP0zFmE2rAlSb6rB4YbmSTnmxREkjZydhdnEZ7X
KgufHumBIwfdAYdtI9h64Ujd8P5souTmB8vs690gCVz5aEEMI59ZJj/3QjaR
tT3OSUWwC00fFa54+A5hovbpJumiLGLAvEbOh7UT+bt2jAbFDaKW4814cnQm
IWqXoj/9vR0xHAL65LEB7GxPWxVYSSdKM3/vGsltA5eKzd1E+QG0TrZzR29K
Ix4WppW9ovq4/NAzpglSPzIafjAqZyYT/OOF4a/Tm3A1ZU1sv3U/shZtMqy2
JRKKernGtH8bINfx+vA+nn4s1K8wHjsWR+gvkhh3+9cjKuAD80HGflx57uhz
8F84cUNKQEbFlMqPvWolH/b3w9llTe++VCAxURxP3kbtxa+lo4Uv3uhHu1Xg
3wi5t4TBW/3pTZ01+PDPUczNtx/y+Wlf762YE5/nr20/87QGLvfdpPct9EOh
Z8+Ltwt6kHpJPtmvVwMjYT96W6MB9BGHeE5tegVysGE/34caLJ00p1FZHUCy
y4Fd3mJ+ENmkuENGpxZXeZO/h8YOwiXLf9Pe0hAEzh/9z0yT2tekmiUNpYcg
Kkpv4V4ZhSPP3YTDQuth1azKVLY8BJVEngwPxnj8uKCtbP2nAX4Pc8WvBg9D
Iyg81Ek6Ed0ePGXjJk3Idf4eeuoUGXNyK963/iZBqOOP8mhfM+47PLFjjiLj
bYDjqT00KZjsiL2dfKkV4Xal+me7yNjiv3V0B38KPr6xj820aMPeqxofbw+S
QfElUlw+J2NicGe9nVI7oorZi6o6yaC5ms93pzkJpeahZq3T7WhmsN+r0EbG
wvItv2iPRLQfcRlPMeuA2ZWpU2EDZHSTttpV0SagcmpFp+lrB1iel19eXiCj
9J3EYaUrcfhJW1ZpdK8TCpNS2gtbRhB7X3W0miEK5hHjwlVJnVAr9bp65g8Z
B8RfDm4fD8F8ybHs7Z3UfB0amLtQTAZ9Lv+Tr1v8MTD0fOcQqRMlVwTtFMXI
0Ig4+SpB6w2+Kz6b/feuEwd8aqr9sobB9s09zWviGXR6JQ32mHfiOQ//Tpa1
ISzvilNgltMiDlJU3zYc7oSjw2ezT7eH8Fho/tbm647Er6DX3Q0FHYj7JyVj
QtV/fYyb6NSft8S2+RdMKTc6cMJyy/I15kGoGl8edK33I6IP7/58qbkdl6yV
bzcVDeCCLDO7n38QwbGq+YlGrh1x2LF00mUAJ3mu83z8GkrwdLLv3e3bhmnS
1i3D+gO4MdK7Z6Ijgpib3Dse9KAVW0O4NhXKDMC1MMU+dls0USj7WNN6rRmv
RsUWX58YQOqJrufZXDEEL0eZZYR9EyaKsn55/OuHos7W+GHRGOIIo+S16akG
rJBFXm352g+XFp4VsWfRhHxWc2OERD0W+bw45qk6N5RgCE8fiyT21xO7Mwpq
ISYfab9lxwC+vtNNSCik+mru2Y3ZyzVYWAhO7uYZQMvR1xqum0IJOUrc/PxI
FVRC/f8ymw+gwT3VmbM5kKDb2v73el0l/L4Vr6N2APnyhl58x/yIBKN2GCxV
wGG5e5v0pUEUuu37dPyPG6F+yDvi1pMKGA/GhM9lDeJs0s5GiUQH4jZFSKOP
owIpzF3BbSJDqPqwyN9ooUfQba+53nmeOs+IfvF3YghhZcFa6z8fopFTtmKn
QQV2r5a7ppsP499s7a8Hxs7wX/NquzhVgez/oriNycOoPX3ZZWeCB7hvL4ZU
vqtEjrCFsPUdMopVr0nwcQZg34PbA66tVYg71+/0t54MTw12B8WJEIxMjZ7+
ykX1gUolBnrTERy8G35pxicS62S35dG2WkzSCZ97x0KBsLu45CxrHFy+SC+4
uDXirYT5xuIGlTesEvd+fZmET7+D3Yydm5HLdlUwz2QUqzp8ZzylU7BcaWZh
/rwVHGL/XWeqGoVdM+24aUAqpG/PjMdfbofM9K6QsH+jkNc7J8DOk4btn9xP
HD7RgVCniB05TGMwt2l/dpU9DZ4Dx26Er3dAk/TfBMP2MRQw3fmY+CQV/n17
hTKLOvHt36bT9o2jkOvSV/zPLxn3prunfihR/T+O6d8N41F0azxkXZ9MwGCD
RGVbfxcqlNjX4lcoOOjw9l5mfSwuev2PovMOp/L943hGyag0iIaRRGlQ0SDv
IkllNAgRyd4roYxQZhnZIXuXkb0ee28Hxz62VIryJUq/8/v3vp7rOp9znvt+
v1+vf86dfJHtLgny/3ZuJZwoOKJudu++ZAScK0Kcb+WRYPBOPsp4FwX0y5TG
pE1vqX6fcnt9lQSZ8sci3k/HcJH/5tPrI97wPl7RpczZC5XLx4M9pkZxfGCU
CE1xRMdW3VeRzL2IvuooxXRtFJv6z4gLjO8mVr2/3N9VTwLPobtp+sYjWG26
KnUm6DmhfUWkTuYmCbMfSAbHnwzDLzqmYbODL9HN3N+3PbUHdrxBPXRuQ9AY
VVORMH9L5Pz39vjhz90YkXBWDX87iPRPhhe1t4UTLMF3LPv2daPAdICxqGAA
LrMLhmtv3xE3xmmDeWW70MvV4jy5Rob4yVGN57wxRBZ/+pFVG+q5XtaOVTMh
426p+ssjlPfEE8XsFdqrHTjE1syrzUhG+t6z735YxhICVm/oFcPb4Lte+ntH
Uz82Tgp/HnSLJbaWT7f/19mCEnP7Td8C+7FY6Ji7d/k98fPis18R1PyfZKTb
CDXvx6v91TXfi6KJqnIaQ1uhRtyn9Xe4Z9qPEXXb2ZaUSGIo7ortv6f1UJ/Z
V73m0Q+5zupnHHOhRJnZuMf15VpYBRXq1Ob1o4p3leVCeBBx8ch8V29RDfzW
lap3rvVD71Bv3aEUX8LENnEqvasaFLqR38LKZNDOOo7GmbwgLtUrLtBIV6P4
/uigaCMZfAFGQWJfjYkloRuhqbTVOKQhem1SZQDv36ozs/tqg3b5y7Z1hmp8
fvinOWqRmkuJSpEKik640c3mu36/Gqmi3jmMbwbhfSxmRNTIC38nN54kLlaj
ccM4fl18CHTvr0k5FgVgxLnk51JnDfY7RdAabqLyyR1Dc/fJYHhfKz2e9LUW
39451J7ro+b2fZsDwanhuDPCMvxYrB4CY/4Rx3JGcOqzzo+RqXewf6Vt4RTV
gJL5NB42N2pvlurQZxnEQCmYL1SQpQnk/+p5vomPQUFQUbiHhprWhrMVYTbN
kCepnhojjyHo13g81+1YbBRvyeCobMHZ+72kTA4KXNfNQgWX3qP+1gOL4qVW
1FU0miUcpoDMMVB5jT0G1w08ninsagdj+YGYLdR1egc7iqnrO1RqaDML8Hag
2G/AVvIIBQGB/y74Pw/H1x7mwKvbO/GV3/Cp6RkK7DUvXszlDcEYw8ROb+dO
/G068mvtBgVpH8q4dj4IRF1AmfH4UCfw2uHDKV0KBpkYh38y+CDEqKCwlrsL
L5bLNn2wpIByYpbYyemK6IXymnfSXbj3S2m/rjYFEia6m416dLGWIn4lGl2o
HE5P3ytCgdfIgMvns4ZE/fh48RjVh+duRDmKU8bgeojj9cGDL4htfFrnR5s6
cV1xsLzt+hh+TZh+XFfyJSxuKZOKjTtRJHwy9H3OKFQ0z7XZCAQR7DOqfF/X
OxB1M/bYA5FRPNFWHZNhDCW21Kqn/mPtwMcxeo/LAyP4ybBfU0gvghhlO/aM
lqMdY4UpkTzZI2BwMXU6pBRFaJEwI7etDbe8mv4VZY1goZG5kK06hrgVEvKl
b6YFXtL5VifqRtD9+KXIH6lYYtl0c8fD0GZoH6uj0yKNgO36w5hTMVSe3LgL
k/1NMG6/xTnXPwLPcjqnPoVYImwo/9eHNw1oeZLKuLBE7QvPG1bGszHEjmZu
8emNOjzhrNDOOjqKaunhPws3owg3y3uP8KIWJI6tEcHOo7hBHpOKnQsnkh0O
uG0WroHOecGhqcVRDF16wxpaH0yckkpr+ilQjQXxz2rOL6j7rZr2jjrhT/jd
erox7F6FzFDWrMQ9FKqP8uyoUfAg3jxbtNpQqUJNduGew9YU2Cpk+XUnmxJv
TuVNfUitQqpZw/bt/RT4jFm0EynmiPnznJiwrYYdh94jc6lx/KILfaew1Qvv
T7Jv4cmtAe+m8uctn8YxNGqfYzkYjJTDd01IWnXQWotnCGScQOdk7NGEbTEY
m1WS3OvdgIlHS9yX5CawJ/68CHdeAvpfveGrWm5CqdeF1OEXE1gRVuOjP5qK
/KGziQ05raj9du20NzGBmXd6Ib+KM1EodNtvPK4DtQ2yh+hoJvHHf/vMRlo2
GI9fOjhyrwtrm18Hi16axLbmaIOkkVx4WjYtVFI9jjCOMnbUm8ReL49T7nV5
aJQXWTmmSIKiJaNeL9WbWGykszz4C+AYLnbiUF4vzka//+/7uUkE7+33fNhe
QD2fIiTpjT4Es76oMGiewKrr61f1qQUoNGW1Yf3bD/ldLTWahycgo+sslC+a
jw8jRh4i+WQkc7057HF3HES1U+hKbS7eSB/0+E9sANr/dQT1mlKQYe2tUkHK
gvnEXv+61wPQu/ejqmD7GI4mXAlJupCOP90f1/mJAdiz3vw7bzqCzKwHqxyn
kxCkZvb4WfMA+KIOyElvHQYpYKsdc1ksBpz1TV+kDUD+zFfuSwODuEizZf8x
+ghIJn539b1N9ZbxCbG1EqqndHEeFZANgNjfsriSQjI8PHrctRzJCLh3zOGB
9XNoaYwaOX/vB3G+4t9XqX7E1nIcJkTuEQqZ5o/itlL7Y1pmZMf+PkQptYpE
DLoSXV3yQm3b+yAg9IOU9Y+Es2xq0ocs/IgVyde5Kdt6YeswaNyz2oPzB+7e
aIwJIt5/uy+XvZ2EtsxZT4tdPaBVSLHj7Q4hFnwzNeX39kCQQ7z5knI3/ENe
7b/OGU50MXRrXxPoRkKjj4J9ZRccqj9ZaqVHEL6kr3ZbzneB3+kK9+5rXWgt
PiOy92UkkRXeassm2YmdB7LWXds6oXPu5u0x40hC1nlvBa1bO3brno7UpObK
mSfcqbpPIwiBonRSq///7y+wZJzn6gSJ1XGgeSiMiLRu6PTJaoZY84+SzfUd
kCSfuL6cFUL0x/8+yPy9EbJHrOR/G3Tgq+VhrjrWt8QrQ+2G6AcNsBh70mV4
pAObzrwaUOMKIPjVg5oj/tah57OG4BbGDhz9kb4q9c2b8H5f5WBNqkVR+VUZ
dc4O2CaF5sU8cic4aYKfF5BqYFlVItOq1QGLVFHfXmsHgmXVIk/nVzWiPecv
cPV1YF/3j0jKoCEh6tCnFSdRjd1mBAOTGJUjMuxCVMt5CMWNpQHGD1Vomqbl
cA/uBG1rInPqG1183b6SkyNXhdNlOXWvtnRh54v+N/EMtmDP6VjYsrcKFqbE
jXqvLnQyhgafyH6OrmV7HhO2Krz/znJmnq0bxqHva7SY3fCibMcZI8kqfNGh
UTqd2o3ep8sVj/96wOqhN885jyrEDSd/OCveg+U6l/IRZk8U03zVuNVThZI+
p4T0th70se7NFzzghfB9UiQ/tmqIl+tcEtEhoWyzJDctrxcEHDKUfstUI+lA
34QQhYTXjXnPRYU84eVi5qGlXw29gLdHmW70Ut9L++8ch5fIjzpLMbKvhtd+
1eCE3F7oKB/lSpdxR+Q26U30rtXg2XHwP3rBPlyT+NAwlOuKo+zKr/e/qMaJ
s3Mn23L60PeNz2kq9hlaCyutaZyrUTG4lFKo1I/25RSfX1JPoLljr7uGXTV6
q10u2v7rB8fUWP5Agil63Iv3ZVLn2Rdo3hGaR8avvwv2XBkP4Mv8mkP5ejWE
glpfX9AbQLaEI9PI1iPErJj8e4Fd1djqVdOyiepHbsoeX7cIaxO3vih/OFZa
hZXrB9Z7wgYx4ZMd65tmRuwpsu+UuVmFAGePW2tsQ3C5duw1z0dboihBMLC5
oRL2ky/7GAOGcGHdVZs+zYHgj2wuYBGtxOMyJ/lru4exsHNH37sRJ+L0qtKT
rlME+Oygy5U2jONPg/ep5LoSPWkmnp8/l2N+gRTGpzKCyWNPgwv53IihZ1ti
i9+X4Yr/1cF/nFSujnHNvSLuTthEmUnMK5cibK2STYvq4y0vaaZDptyJ0Oab
X85tL4G0/3OFqO4x1C4Iv9xH60EsM5GOcDcW4cT35xG/Naj9wu5vxmHjTrSb
xHhFexdC5RaNoX87BUtGnPVL1M/deiHn/ivDAtgeTOhLvjAOpueVD2h4XIlf
DuF+h93y0ds+I4PEcfTrGDvRLDoScYr7TbLn88A3Z+5lyDGBF0+i/I/I2BLG
7+ptyorzQJaQ+LEjagJS8vf3s/4xIH4qdwlqMubD5Pa27R+FJxHAfX/G/404
UT5VRTD/yseF7Mmd+T2TSJ7RSrRj1EfyyG2Fz4GF4BbVZUtwmcJwFyMvd4Uj
rMueX+r+rxi+FaHSLiemkZPzp/nH2iu0kLM23zpdDjZS94PXfdOQYhQR1JYP
hK9d7AOX1Epo7xeh47abAa974ur4rXBsPOw9eONUDXYJmRd7Mc+i/d/65eN6
sUj810uZvlqPM6eWz/b4zKJg4yLLiY9JOEncO3nlZxN8VaZfVX6ZhUuYG4/5
hUzQtMj/fHGwHfojvvt+n5nDF92rG/sZclG/0u4pfacL1bz7zKU05tBssZXI
dSpAHdN4KqWgB5ysQqqDd+bQ+u+S7X8oRbz0Za6kM30w8s/imvo3i3capddj
vxJIysv+VF1KhtwOvjrlm9Q5eXt+CfytQkThthfzvwfhlezTV3VyBuZdUwuB
vdUQPfNaWYIyDM/OD1FBzVNYiC2ZZQuvBlF3KSzBbBSXBdP1TslOInCq93NR
XhUmJFucq8PGsL4cztjVMA6vnD1dxc8roWUWW1VO5drFOJK9IpUzh3YlrMYt
l6Msn/YwLlGgrJBqYMIxij8nz91q+VwMy/wfc7U7KTCf7fgs5DOEXFs1u0PL
eehNfX5a5PkYvktXTrleGcB5Z+sZB8VsvJh8cup97Ciks0p030v0w6B5wDjb
KBXcdWSyc/IInibXr3E790J7Iafxk2McTJ/VHJKMHEbrbje3aVoSKN3R50as
wnDcW4fJQHEQQl8GjfsDu/BDUX1xt7MdVE6ZPFPbPwD/E89Y7F524rJ6158Q
3jvE9Jd56aLZftBXCLTWH+iA+vSXbRyEAyH4QKbLrLQPTUKzOnSP22DRauiW
1+NBNPbS/yqI7MWK9nOHx3MtuLxbLnzwkw9BbzfieuwlCTd9L7D3pTQjMbPh
zC42fyLJPGTWxrYHLo6L4tEvmnDT73DSmb2BxMIP14Tcx934rFf28LFxI84r
1LlwrgUSHndddPXud8H2yb6tCk8bIC3Geuvi9SAClosHrt3uhI3T098jAfUw
v3buWOF6IPE8Upq1I6MdNvMMjss5dRjqfdnKdiiQqA10jJTsbQVdcANrzngt
5KRsua4U+hP8zKGNCUdacDhMXtHzeC1SXs1uSX3nR2ya62cajm1CAtO3M0R0
DZJfr/B/FfAmHEdNljYuNqI08fmR9gs1CArbdPaoyUtC30/r3L2pepwPa2zo
+FMN6/2D4tJqL4ibq08PtiXWocCK/tkBqv/toOc0ex/mSJRwTFmnP6/FhS8h
G4O7a/Dx+kf3HYQ14V043bnfvAbRwoXSg+o1YBJhdeW5qU/wyHbXT1D74mD7
4xM5pTXY/njsimSvAqFEVyvaXl6FQXf5ft0TtVCtT91t1SkLntzvigeOVWHT
zfz2ljTq5/zd33Ttsg7ITh4ZcTWV4D17yPLTyTp82Lj1YrzAFN5qzx1nnSsR
TrNUM1xRh931PUSdvTUW3q5pLcpW4nv/rcp+nXqMv8r4t0P5CTzyNqQeMlZC
XY6pN5i7AWeF35FFh+3g86JBxYr6eqxHWSWVmxoQUu5lQXvkKTgfatd5MhNg
87sifNW0Eaw/xeKbnexgnWKX/sK5Arvq6zKr9jXB9SyNrtmhJ3hl5Nt9ZKkc
VYcS2x6NNcGw2+Crm7gNTsVQapnMy/HgAO/BV2XNmJl7P3pkxBKX9ot8qvIs
Q0300Ucaqa1Qe21kq03Sw3LyOcv2bWWw1njYHVDQBnNB7xWJbg3UW/9bsXIo
RYGv/EWbgnYUfVOkP21wE49UN5UuZpYg0DNr3Z/K9a78dpqHBTcR3d0PfAcK
i8FzQuA94/lOHFAa+FqmIUcwvFQ+4R9fhP8SGGPMIjsh/t6hyCtfhTgy/IFP
yqYQB3beXNtL14X+iy7XFfseEs6eZ9mbRAuQHDD3LMehCw06jrzGGTqE2Rui
YmElD4Vcq+9DaLohc0z9yugJPSK7pE+Itv4T+Br4pH5FdKPpuMjB51/0CUdV
F9nklFykx3LTkCR7EE1mmCTVGxA+2+q0FaNz8OyOT2zxfA8me9fNw8MMCF9v
k96L77Phw0RvlxNOgmx0uNfoBX1C58KWR7qSWaChO/X12rVeqG42sKKNfkyU
7rGvKlb+gHlup3Ltz734z4vFbHqPNqF9Y6WfPSkDUcfvX6/x6YPxE9f8NUZV
4oj5yN3yy+kosPx+gvUildOP7Tnl/liBOOFc684jmwalDGMuh01k3Hp2Yut2
rnPE1orznKS+VGyrEuvVpJCR6Fb9/UekMHZepBGpo03DvHTvZ5m+AVir/Edw
bJeH2t2Dc+FNaXh293rq8uAgdj0JL6Q5oQb7tN9dUmwZqHfv4xSZGYLO/rrU
yslHmPcbf/aqOhM25eFaPYvD+LM4ytK/pI/sfuHv5ZrZ0AoTqMxdH4XRysUZ
spEFHmtEVWc554B8cOps7sgYInTXe6UeWCGoxOabekEuDGvsOtkeUdDxtLks
vMUaF8O99/2hz0P5s9u9bBQKBufvHi9is4Xn07nD4qb52NUUxqRhNQ6WrRxs
dy8+wZdB4ba7CwXISP2XrLVnAhcHVWz9Be2Qs3PoZfDrIpzdLZdWVDOBE4xi
zcHVdthurGNw4FYJGjci9p16OgkPtum2hTk7VMyyTtcJlUEy9LPc1SNTEPyc
8j3H1w5nuH/4nDpZAfltyT//o/aa/dtTN82JJ1CMoGkbOFYJZo3h87mPp7GU
eaiDod0WtDQ7HdO1qJxsoz6sQJ5GgNaWZ8dDbZDLeSVvd0k1OGYm39SJzMD1
8N+XOdes0WNWEJosVostS5kbY54z2PopO0BZ2AoJHl7MPN11EJTdyxT5eQYD
Mecs9O9b4sI29nYGnwZ8ZlD6Oa0+i9pI59VXbeY4v/1MwHHNJtAMs/qUkWbR
ycOuxfPMBBdWvh6ju9WCwHfCf6xk5+D6eIOLRUYPTuoMPQuq1L6Rt+/7EDOH
2GaGacswFTwSEeN74tUBqX1JoTr1c9gE5qDDO44SbIPOE1bfO+HqNJ/Sn0V9
vthnyfiQBvGAVX3bRY5u0LPaiDDfmEOnu5fKyhdr4tAdcon32R64pTa+WkqY
RaJ8ueb7iheEeDeNtJJIL+yNshZ0GGfwLT3zXbtnAOFWKnhzy0YvmiqzN12+
Mo2P9YX/RV1/S8gt/iE7RfRhnlX3pMDLKQzaMQT0DoQQV9MTr46t9KGC+57o
Rv0k/B79kH3JFkFcTl1Z28zaj3j2csWxzxMQHkv6UxYZTazUPNGPG+qD6/ZY
pfOr43iwSz6Y7WEcsbKt5Bn0+sDMofSdwjqO1fye8JSyBELoH1+ddWUv9FYz
P1qcpmDe6m6yTV4SEfy1NUdsg4TeNaUbt+pHsZ78LNr5SAqxz8Uzil+IhAMa
4tdZVUfgzfc+l44tleCLL/q8IE/NC/43Zs0Cwyg2lXroH5xKfCQ96nys343k
9qmwFtEh7JqVLubMSiUW79fpvTLrQoLWkX+GFoN4LjBaxSKXSly95fbP+mEn
nhiYVNRWD+DLbrMQe5EUwuCkfPmD4HaYzCoOGlyj+r4an36iTxJhL3la44ld
K5QvR+sd/E6G9e35sm2mCYTFNR9FDcdm9Pb8oRvPJ8PS9LjJ7EwsMf4hhRzZ
3YiOh1wPb0eSwTGvP8zrHEXQ8LhXtBk1YGmvmmFuBBlR8kqB3LmhhG2TbqDA
tXrYl//eHVZIxvTda3wzzgHE1uGlcwG6dRDjSM4bXCFjSs3ZNfiLO3H4JF+a
ZU0tTl/u56y7MwDLglsHvj00Jk7Hf1OSsqjFsuJC8XzFAIR/ydZ3vTVCF0Oh
wC7qOmPSkG261CBCtozEVfx2w9Xyo8onGmohEMgsPTwyiCe3+eKDuf2h8Us6
YOeTOpwx8HRJo3Igk8yJQGGNEPDOux9jMq8HvXuTlS+GoWeTfO5hZST2ZP+e
j4ptgI8gy9dBao5d8kpq4/d5j3Re+iSvlUY8i7Q0zgofgfCBg+0hlXF4qmsp
/1OjGaIKK07/To0ir1w0n108ARJxx7YdLmuBJUP/zndZo1DYqbin82AifI57
nrfb2oYijkW2/G+j6JTvFY69kgjNlEPNe661Y8F2p8gA7Rj+ifq+7OlIgMWB
1Kec9h1gsN9pw8MyBiPzy60NK/HQfCOQNqvQidSjH08pHBzDn7rvqmr9cRAu
zhU5NdCJKP+dFXWXxhA1WNZDPInF6bwf29+pdKGS/bUNyWAMjYUjbb/9o7Fe
bu/qUtWFWhuHl0k+Y+iiPN0a4RCBd4+6/z7Z3Q39LTMvfN6MwV8zjbMtPBgv
DXrpTl3rRoPEi1GGB2Nw+x5V9O7AGzi/s7lB3O5GrL6WMcfiKCpJF4qUud0Q
efeABPu5bhSwd8vp6IzC8vkrn3IJA7gWdjUVbnThbSqvwN7SEcSeMRi5RmNI
0MwMvF7J7kJc+dcxm+0j+JhzMaWl2pU48aQ+/vu9LsR+PLt2wmoYp3vsT8pc
9yE0Gr49Sqbmz4b2DZ8Hv4ZQHyt9t0Y5kJiOsKczce8Eq4lsHWvcEKrK9lVL
7Q4hZN49jnDe0YnH21X4XJ4MISt4+GOzeTjhu29HL3g6UL2UmvpYdwiurxza
n6i9I75NXeretdGGH8xCTz+rDGG4acRzU0Q0sWlIOfRfWisiWTLto04P4d7u
sPHBzhjim8HE8b1nWqA8smmrxe4hTEftTZBYiCH6JVroe1KofKvn1LqLkTrn
SW6LW/wxxH+br9ey7W7ERWH/sOe7hqAYb6phHhVFfOV8z3/Sox6/+MMX9gpT
vT71T6WaZSQxyjRjxLutDs/iAo26dIZwXWjmwYtPYYRi7Hm2jMoaXFMWDdXP
GEJh6tDtXvNgwjZSv7EgqxrmnixDdEzDUH63+lUtMYBYW9lJ6z5TBRNpvYrT
zsMQcwuMf5nsRchLcEvfNa4CKXdDfA/DCEI5wxS4fjoRV+9nynNdqMJU+Knx
4YQRGEf9Vzkh84jIP+2SeflWFV6LrIfW3h2F6Wcms/ZPpqjcfzzkTGIVdr//
1WMzQV2Xy/lu9tMNu2RPRtvIV2P0SiAhe3MM/GOtR1js3oCpcUJaVqkGFNLX
urs5Y6gZdy9VIAWDi1NCxDqzFnsPHxW+v5eCO+IltCLakfD78t/0qmo9GpYd
LV8YUkDM3zWN2HiPXKuYrd46zWiiIe3JEB/HH/3TFt+LkqA5IJ7CHtlK9TRJ
5aOZ4ziyrNnJb5qKh5adL3KG2iH0mlzEwjoBrkUDQ7kyKled4MpX8euEYIKn
EkVtAq4RVctxxpnobWbP35fQheG3LXfGnCfgfUX3pancB5zt4Tl0LKsbwZU8
3KyOE+C0OlbjQ+W51prwnzpJPSg8VykULTeBfK5oMW7rTJivB2xiNyVhhwfj
1MT0OOLbOCWWGdORli0iocnSi/h6mlNumuOovmd9JSQtGZwppQdev+mF/v7a
eL5aCiyk1Bi1FuJB88Tl+8mVXig0r77qOU6BY0BHsHZgDGwjPghWX+vD6qH7
NG+ov3N75z4a57Yw5HjcLlpy6EPXpA2LmtEovu754JJnFYgVcTr6Gu8+DIim
vEqPGMHzvd7eBWwvkRV4ks6N2oPkklInUtMwshd5eOPsjODELKNUR9MHR6tM
k5SqIax6UOh471gTJ/IXMg/p92L3vmm6/1IHQai8vbTg6km0FXuXpcWTkEMn
rW8WMYBwLae5fQOBRFoH/9pEbQ9ek/PCNILIILuMLqd/CiU6qqXTBQe7wZn9
k/FvTD+C+I53tMtHEp1/P7re+0bNjZqV70rtfaCvapXq7Ywiit58OpJG34Vv
wzIVykJ9KI4Wmpq2iSG6Z1rTwdMJE8dHZ6wKeiHBfCU35857wsj0weiwdTsG
c6/Xf3zUC0XFxWoZhfcE19uYha/eragQbR44uqcXaXxv67x2xhBhQbIxspHN
GN/jIIAJEm74aoyytb4jGmiW2v8rpPaj+B70dJBw3yFo9E5DOMHA8jOJ9lc9
1gzfTQX3knBBok7mP4EQIutZW5Hh4zos3ebgIn8nYe3nyGH9HYHEUF1U4QXO
Wnya2LK4g6sXKr1RN7Zc8iboaCrshHhqYF99V/i0Ti84CwLuOZBdiBQrG6Hw
J9W4HCefyk7lEcPO0eaiUiOi+NwmzweM1ch38RChlehDdl/FeLjXfZy45DPs
TK6CKJw5pyr7sHbRLOb3+ac4rBKQZT1dhRDm4KOmSv1IHip62/vQHUI/aE1K
TlVjnEjIZVnux2KlgMvtGz6Q6Pn06E1+NVZ0TXMOZJOpPvjZ7OXpAOz/y32R
37IGm5O8plSeDaDfdG8/S0sQTAqMF2Pu1GLmkILn/+/dZZUsWH/ZE4zv6qRX
PDfr0C2dHtjCNoTNbbV8c8dC0dH+SIhDph5ScuHXj3UNQby7fpN2YShGug+8
Zz3egAEH8apXDsPomvYIDjILRfupxY0zKw14n6q/XW9+GFwvnQSjJULQfcH1
2IOMRnxy+e5wRWwEWWOcp85pvwVat7hfUmiCzLxmRtHzEfic8P7tyx4IfVqh
vyGTTVDeJfzsEGkEV/J9ZlU3vUavOiWo36QZIycwPiwzik2rt96mXvFEcjmT
Y8FkM3I0xSIs26i973j6+ReyK+4YJVc/utoC4Ru32wbVx8CVnbk7wtgGN2J/
FN/waIGxx5tUw/4xxH4YVFg6ogjxNqaTD8Nb0LdVY+shdgquf+PO+HnDkOhY
ofWrftICrrfBA/kCFFTaSerurH9GnLymdDPvYAvi2qpk2ajrp78+sGg695Jo
JGkoGL9rxonrJarnD1Ig7DitOdHpS0juOpPsstaEwxP3lGnYKDj3OKfepDOA
cM8/1npKpglP7k4YBXJQYLnZcDla6y1xw8vQit69EYYrrW47TlHQ3V3IZ54c
Qqy/01CfK2zAzsXS+pMPKIg0P9JckR5GMJ7M4KufrMe41dvPJZEUMAlL82lq
RBBHmBVVpmnrsdu7puryLAUM0Rb7EgIiifA45xcSO+qwwNnVEXtuHNfI6h+E
Gd4RDNMvc2npavG1UlFIzG0czoy6z68+jSQkf8W3vZ+j+tHa+/74ynFwdr9S
OVoVTtAvHftdNFyFtuTlyzobVO+TEYy6uT2UeHJUI0B5vRLDo11xpBsT2Bap
HSRhE0Q8LjJZ0tethF/KxanKrAmMBZEvshT5EupuYrL/na/EAydK1sypSbxp
1ZJ5w+ZKfC1rvXcytBI5m7t0NzdMgjLs6nA/9iqhsCdtVTugCuYXxSylTaZQ
u12YrdvoBbxGyyLrRGrwxs2nyHHHNNJYfQK2KASD4Scj+0nnOmSqvAsdT5rG
tewfht/44/Ancqm51r4Rx30NbdoOzUA7afyhqHoaWuxv5dwQbEXzH77xNJcZ
hOkYse80yIHXfNu1sRudsJe60XWidAZnldZnUgYLsHlCWGKiphskhskS5rAZ
fNL0SBaTKwObXYsiybAXpC/m91T3zsDAwNHIPbASnHVfT4TuI+Px6fvs+7Sn
YburK4chrRpds1PRRrGDSHvy2u2N3xTWeo8tFcvXIpUu0XGwfxjHD29Z8ImZ
hHK/NZFyvQ4KJ/P6KMGjMGRtdy33ovYaH+eH2aN1iHz5vkoifwyUJ2IO3iLj
sOYzu/jgZQ3qr2wxpaPuv/LyNXVRvzH05Y7eayNVgmamSfQeEwW8L0dO0ncM
o3GJoNcKLoXp3ugMpdgxqFhoWGtcHkR9BA50FubD6pGMMyOVLwe4vdXo/vWD
Ieax8tn0bHQ/5Nbw4hrFckf4LWGePpQ8PFnFvDcNM7OND4WER8D3WjP5eRQJ
N+/8S/osE4+OqPpnpVOD4BDKVbrC2o0YG9jTrvtCav/RK+eiB5BRLVouudyJ
7QPtmbvqbRA1O7ZUc5MMln+VdkYVHQhv4VAaStUh6C34LpIKqb3MS6/6r7wF
ZYZTemccXhF3RHJszL1JqHnsdDj/dDNkT6sU+J30JTyidzHkWPfAr7Em9PPO
JgSTuBfmAt4Q2km747LNusGfobzfU6oRJrRNdarRAUQ/73FhX5MuWD+mPSLh
0oDhToMTZKtAYn2ST/edVickA3UFZsLrMbteVLDPLJDIrjCjN85tx0XrF1cZ
f9WhXTEuf2g0gNgwC2kyy2xFBhdx+4dNHbZu+2Uyn+BPNFenBdXkNuPSeNoA
179a/Pjdfu9eiB+hxmHWXkpqhPqf7M3ZvrUwvGB4sbfci7A1TPdJ42+A2cBT
04L9VC6r5cv4oudBeH5rp8gU1MFryVTQr7gGO95qMLOWuBDLXxg/5b6uRWGL
jtwx2xpIRzPJ6TXYERVn+XP+JNTAx2+/3L0HNcjfYdVU89yUmNppZFROqUZU
7UXOnGc1+Oax54vPsCqx9VKpIh9vNR7fG2lrHKjBZc24+kM0Z6HEoRMRalkF
K63EHBlqz7zyEnXL/6uJUDaSnGpvJSQlT6uem6gFW5HWjcTPhmgQ7V4sUqgE
idHG72ogdd7pJYFSNUs4kWOcC6oJ/O3oPKT/sB63KNtWp+RtsDeWXl+Xj8BB
3t6DS1caUOqCT7J3nuDrxQu6YxUVsEt6+ntQuBErn84Jltyzg0XSs2/uLytg
4vKy4SlPE/g5vo/fkLYDnVLl6tT9CvyneUHXhqkZdxbcZj4efIJm8w65+0wV
SOXa9mL0RzOkerVv+/6xRh/DHQGf1+UItvvS/qq6BZX3Q1SG+S2Rl07ffOdH
GUpkIxtcqR7/liVG3XHBCNW3Zw8kPizFeavnn2W+tYHElqwmvFsNVVEvYORS
grlyqZ9mne2wddZ09Toti5uvXVNr3xdDQI7+5LWeDgS4XTDj89pPlE7zc1TO
F2JnJ5tNPlMX4oOqCToDdcLwxkxY8uZCFN2aov0T1YWpD0o2T87qEMJqnncD
NxVgHs90BwW7QR7iWRcc0CNIFU7yX/rycJaZLUgivRsa+/hS8ocNiPt7Gjfv
if2Exf8mztzn78Fc7NVT5i6GxDRXvd1nrVz0qFayMKb0wEn+MI8ViyHxkXZJ
sZ8nB1O2r5yMz5MgPBsf4lShT0y/HKyMncwCn2BQX+cICcm/fg9bFuoSDE/v
qG5t+ADt5eCRxdBevGLjOHmSTocI/fZb8xdjJmgPl29f1urDiBLBdF1Gk7gK
AUlHIh3unL56Z8/0415FWW3XGWXCiCu27u3nNNjt28aly0yGX1Lzb+ZFWULy
0c399+3TcF2pYeP7NBnBo9qs7Je4iKOy+2vt76dB0/DqkZeVAzhLGTHO3nsF
L8KS9vrEpOFtwtKvFq9BVDsZNJKy7oB5QSq5RDEdew86x9neHgLc9ilaGWgg
fW7Cq8EoA9a3hx9bnRjGg+mk/x5N62C5s/7Kf22ZeG2WBw62EXDPJnmYnjCA
f4FmB53XR4xVOs767B1Fycmdl5S0TdBYRhnZZZEDDq1IQlSIAtWHOTxM8VaY
9fz382puLj5uz/6hX0lButjCfnl1GyxqtUUNM+eBMfTHSNzdcTyMXRaI7bTF
npvnu9u/FSDh2rOHJuYTqPU91BIxbYfjxa7hR52LUDlRz5MwNwEX9jljgdin
UBfdrf7xaAlyDc4PvNSYhETq0g2Ba/ZwTV0MClwshVxQdCp/H7VHwt+qBI/b
g6x/bD2YXA6zCusVAY0pTMUOqH/Tc4BCrfmhgQkCkkR7k/H3KeTtrERLtgPM
CO2VPqYq1MzePfTRdxpHf/A5bglyQH+tlXe2eDW6L1LSOI/OwE18/VrssD0u
9OnveelZg++RA87KFTPYnfzhhPGLp6BbD404tlSLhCJG/JGaRWiJ3Rhv3hPs
8zfhb3epxyuxh06bc2dRdtW9I3mPLb67imdYoRFv8609+37OwmPMcelhiBU4
jYK2G1PznY1nZk6HeQ6UMz/uDYmbwnLnLovvt1phoiU7fGH7HHhi/vAf/KAH
hhuPjc6+aIembbyZCfV5Vtlz4jcGtXHHe5HZXLsT3wh3xbWtc7gcW8V8RfcB
ViQ/beZ36YJc3ceDP2jn4Gq954SBkDI4yVX3Z0O7sY3VXu3+11lUWuj38O6T
xlJQyZpuQg984jvOLefMYtNZmQsXJuWI6VP58VZU/3q6jS7EQnIWlN1PU613
GBLxxnxSpu69kOo+bXPCdwaXx7QnNK85EA3H3wic5+tDXO7N558+TiOb6U+7
h7In4Wuww17vdR8sNvl5HcmdglLmYdHD3wOJlx5MDTWtfWg5+eFvXdIkxBbl
THhXwwiHPL9Vl7k+3Dv/LxvRE2Cxl/8myhRNOOypahia7IOu8wJzTvo4HtzS
8730PJZgP7p07HxFH9SGH/t7D1AgHiFX/owhniguW9H3sOnDb5bLb9mOUXB8
/vEmHsMEojVDwYbrby8CJjhKLbjGkKsgpyHankhs/s0tdfNuL47ptojLjo2A
t8O+2eVkMkFS0uMzcSZB73Q8pSFzGGvmV7dePJxC3OWRiLr5pgd5q+xOCQlD
mEz4AJbgFELb/JfsjtfdGPmkzzicP4gsX7pNkl4pRGL0RK77yy5ctMjIejM2
AI4rA8VdjClEwoOFpI8vOvH1LJtjIt8AJLPopnSOJBO9DC89Pu3qQH9W2rSM
Fxmy0qWHxL8lEtqtw61WV9oQL025rribjEixPz9A/V5+pw4r/HzTgtd1fLL7
G/rRTa+ZcyUkjqAJ77lzf7EJ20eSTHli+3GtLk38XEMMETTf8IZZqxG6gbQx
3aH9+MFUUrruG0G41z26s2upHjsuRFlcyu7HY/rGco7Zt4Tc5/lE0+I6XK8Q
d1D80o8j9su/rDf7EYvJ9AEy9bXIla28eUCaDMrFZy4zZS7EDjptg0fHaiEs
3bXrTA4Zq/qWUWvkB8SxGq3J5MUapHztyCKfHMBrxj7X/RNWmFGdHCw+UAvL
+SKhewUDSNklUHBl/0v4b6dhvv6+FmOT9PkXrw5Cnd3W2P1OAASuBoxO6dRh
W2CcbRF5EPv2xFcbvA1Bkor5gcRb9eiZ2BvXbz9E7cXAS65ckZg4OsnEeKMB
rHZ/Z0IYh7Fnx3n/idxo8FtE7Dyl1ginEYrMvmfDCJV4JcPNF4uj/tuMgu2b
4PVwpD5uehjTdxS/GNHFoWt9t3xQUjP80heeqqiOwKFSfOSwXxwif554sTbY
gp1B744P9Y+gRPkPc2B1HOwL7g80sLbBOnyA/dPDUVgITp6pj4mDlMfD874S
7TjiP3Xn1RiVi33YA0R3xsHKyH381p0OcPxhjhy5PoZdrf1W+iyxKFaytBA4
3onqS7dvC74eQ3NuWz+pNwo3M935UoM6QU95wLrp7RjenBgUy30bDtHRYdVW
cicG3+4qO6wxBprTu35eevwWwYtOb/k2d+Hu7cofLzaP4bqnUL1IuC8WfEpq
9x7sQsIS+375zFHEVmXLHdJ0xfEWRy4bPmqvr74WOqk3ih+Vr6VrPfQQI/vL
7/feLuzz/BkyIjaK8JpzxQ5OeoRsbVPWk5VO3A31+LGbYxS2gWeOts64EPBX
OXC+rBPePoo3rBZH4PftZsDGCR/CxVN7RyyVS09tKy03SBmB8b+BajEikHjm
o723o6kDhzlOpzy6PYIjabc7yrJCCC2D2ZV3qe0oykk7170xjLNlEx2/BsOJ
bk06z3jjNgjEC8XNFQ+j+zgrXYDMO8J25WHilQOtuPFszKfIj+oLKqf7g9ej
iGccRjvP1DWDVYrN+ZjTMHhk3Hp9aGIIU/a+IkkDque2nOe/7TMME+v0YiXZ
GGKT7iXp3RsNGPAP4nTKGEZhhb7Y9/ho4ud7+ne+r6jnxUI0ToY8jPUvuxNN
594RWyaU6ffvqkNzwNyPjIMj6NwyxvtFMoLoOvqX/21uDYwK+hOvuYyglF1q
dKIlhEhYtWM66VKNf80dd2X+jkBuip7jV2wgscenh9AKqoIp8xKdZcgoLp52
pv380ptg+co1c2xzFbZ6ZpaQpcegoZF3KLnpOXF3h8V/5z5XoiqDc5WFlgLB
06TT9zwVCKeLi1GqV6uQFRizy8mIAs7d4WVN1P59Kff5+SBrNbRngmqOkinU
OfNzwvx90G1wjo/vWg12mk3PRUhTfTkz6/33TSGw3fhrvTZXC3apMBXvqHH8
KVJcJ01R92H21tRfy/V4ElFQMbk0jqGYkOu+DvFwOeR5PlCjCZbXPip7KEyg
f6Y0JS08GUUXObqtNreiM1bbx+bDBPZFKPHnVKTD7sEfhsX+dtgNvKFobZ6E
aUTI/paij/jxbfs83Vgn/NqMUsquTSI7lsszYV8O/uaduGN9txsDAbNNG9qT
0OVmd9xvnos7oj83adX2INs97TdJdhIh8p9qiiU/IWvBOS+BpRfPFe5vUZyf
oHppecYw0ycQNJyuo/v64DKxQOq6OQFHc+MHd7JysE/q4J9nf/rAJeIiY+A5
jqXbTl8L9bKwK1l8OUOBjHNltSwC/43B8r53CANbCiLl/Y0PF5PBcPnrJ3vq
OVIWid/1QTEBV91c5lq+kiGS6DYb6DcCJaW/j9xmYxBlRdb7NkTGQa78nFTj
YbC+H1e5yReK3xsJ7LmOZDylH37YyzIEn8SjLIcUvDB6eoZRYrAfctlFCzwZ
A7AsaZy6EK2Lu3fs/ru7neq3yy0kZWUydC11y321nhJJ36+uLJ/pxb80dYXl
mV44aJ8Q5TweRJSUbq+ukiRharOw97mvJEikNbIOS4YSr/gVpj7c7IGNhd1i
zWESdHIyOTfkI4iLSmsJDSrdEGUyk55/2YPwxL27GpzeEbUMjZd573Xh6MK3
h7uXupFve8nxV2QU0dAs6MR2tRPzWSMXP5p0Q7o1xL77ZRThu5Qd802/HSc7
m8fNaLvR9POhwlO3d4Rkwa92j9utWIiRfYvMLvwOcySe5UQQ2o8Fvx1Xa8bn
ju6Oaf0utGZc6uU+H0Y0PAxdnXndCD6yWKKEaBcyf0XbMEkGE6FD+zO+rtbD
5srXw8YHulBdF0lfOxVAKI3+0eIJr4M3z2/5M7xdOKkjuDXLzYd4vqZ8Tk2z
FsW+SmkGMl1UbvGJWyTciCObWJ+zKdTg0dv1aiG3Lqg6xXjc5rEjOizffGO2
qoad8LrgbjJ1zhq+WzlrmsSmTwU6Pa1V0Jaoc5CU7Yb/GM+G4X016PFX3C4y
rqL6LEX6Y0s3uHpDuj5J2aBTM/X6ccUq5Fy2edN1rwdiBMdP3HAGD8tLnUKz
Kqzctky4Ot0DDU/VV1v+uaOD7TF/c3EVeAo96kvsSagPLbj+aMMTqWq1PO+5
qZ4rtiuse1svws87FDr98sEw+TKeeVYjh2/IrzylF1PqUzH5ZX5IPJ6wJDZZ
DYcNKaG3Yn2w1pd8Xiz1Gs9GvNbFRWvAnXjrOymjD1fkEy3EPvkhnEZAasip
Br6ZAdzHDvTD9b8rXHfu+cJZnJa/kahBaUQ9LVtYP5W/zJ4JqXpDefldetbf
GqR/5j1Ix08GO5f1c+n+VxDddlPwzflaLJ/xHu+oJ4P2w+nbYn3ueORGU1dg
Xot1hhMGOXYDuDrZ4P/pjit2+fyRffauFu0dX86oHRtE1c0PwgpJ9lDkvdun
WViLmECdq2O9gyhbPSdzrsoCwbe3hmcV1eJC5fKjwxZD4EnYedP1lzqO7vv8
eCS0FmqrN+PlfgxB6XPHZqa9UgQDe8XYLtVaMNXUXhZVH8ZJumZm0xQ9wjnU
sCaKphY7RX1seMuG0ZmZan+hy5rouadx14K3BhHO+yXk3o9gOFz4UcAbV6J+
RoqNJ7YauetbltOER7F1TSufq9qd+G0um+XDXo2Lvx0Oh5NHMbRh1J+X9YqY
P57Rn+5RBcVDZM+8wDEU5Ahwky95E0KSt0uc5ipxhks1p+QoBSpONgMHpHyJ
0/ddnphJViLwlymjvA8FAykVwraefoRRxLe3uowEKD1fthAzFMjevZ8iPO5H
xK6tVd70L0cDx+8twpfHca928k/2Yz9igve94cSBMjQKOcU1xoyjrjJR5tc+
X+KF/cgQb1UJ5H1nTnVvnUDq6aP6yZu8CfmaCk+LgGLY3EsgO7yYwGY6BfP9
ay+JRn9v/cjkIph0HFBr2zqJxi1MQc39LwijN0eWHgkWIT9PpeB61CR0ThsK
7/tkT+R5D0zWSBVBZf8Wtv5zU6gI5nH/0qNLGCYtKgsfKUYEe6g2d/8UUlvU
zSCiBYasBRzZKMGVjOd1f+2msSaZv1EZ54zfXiriX+fLMXymYiKDfQZ5FX37
rrm9BtG+oBW6swpmDDh148MMbkWPkCT7wqD14LriCXINGPj+Kwy9NIsPrith
3wrj8O26Ht30hQb0NxesSzTMIsPwVJzvaipY4t/t9RZsgfWpN1ILknPQIJG0
n0xl41YlWTwgugPjOkIHMwPn0Bg5e/L7jgKEMwaLCCl0Y/ye+dlHaXOgkVZf
wpdSfE0g86nu7QWDSeOKitUcnDZO7VYVqcJybIbyCB0Z7hdC7DW7ZrFls3n2
qnQtBLjElWWHB/H91fKnS0MzKJOj6/arrsdmnaPVPsYjyGoaC599P41yubSN
v1cboRjvIUfYj6G4hoXkyD2FqJHVvw8lG0F+8kA+2IwCZlr1A1N2E5iqS9b7
G1yPf99+84V1UZAmqjg33EZBDk1ZTR51f5/6WB86sETBqvILpQzXUVzmOsfJ
fLAK7oMW3hd6//9/RAnRugVD2MulSmt0qQzq0Qx8sR4UsAupebReGcBjT8dc
K88C7FLypa/YRUEk96idDzUf2PfkbiI/ycE9QiPLed8YVi1dSK+ke8EUHy6b
rZAO+2eXG/5/f5KNH2XTU71uJHZlfJjPjMR/FMbzBRFDWDELi7GXoHLlPKOb
CTkA0//yiHW1QQhs0amNF+nE9Z83P/1kfgGuG5bXFMf6YftFRC6+oBXhB9J9
/maZEB+S+ON/ZvdBy2RN4NXZFqwx32kYj3Yi1mlXfu4K6EWemHnb4lITVNlW
38SPeRA3ApNMPal5SpbWYK0daERR5Q7p8PfeRMSx3z3xj3qgZye7akY0wCwl
aa2R+TUxS/O7wJfKG8XvnvdJNtSjhFuxw0HSn/ixu+H88RtdmBQfUQgfrKPm
ETf9wwMBxPdj5jdnr3fC81bBtNWPWvj9LnvIuuZPPHYoIbuntWMg9a7qz+21
mAsaO1WU94YYUuan05hqpc5/M/+ydA1+eplU8BX4EVrS7bETMi345ZxolB9R
jf5nHaOuUj5ERebZjIXGJmQU7Klm3VuNGA3I3nnqSVQcc1Vb12xEglbE71+f
qtDzPcHNVMqDSOR4G8pN0wDDrASZNrsqyNQLOWvXuBK9k5717CV1eJW/76OJ
aRVE/KYFN145EnzFUyuhnrUw2nbusohXFcSEXAtWPGwIge2HFgctatAt/FnT
rKIKv8Q6DjrvMyJ6vQ9V2j+n8qSdfFTH5mpsETIRqtpxn0j+tqN/ML8Kswps
tIaq1YgVaKPb+5sPBfHHN49wVeFk7dCSSl418s/Iaig5q6HZulEpOqcSCqqL
ufIHalB8Svib00t93HEXY0p5WImwHd7B82E18KqezPW8ZI6/rj6Utu2V6Nl8
upd8phbqMx31LGQrbNELDb/ylMCmNr4g2v5aRFrqZgQ9sIFqkNaO470VSE69
dTrDrA7kcsU3/CQbvHd5FPJZpAIk3mKxNKZ67DfjuVfhZoNbmRqU3MByaF/a
k/K1uB63XteLNYRYw/Y5xevanzLM/dnOTXJpwGg234UtAlYQ+7tHsOhpGXgP
snm0Uf1Sv2OgQNLDHFHHElTN6Mtw0FZF58jlJlQO/NuzOGqE2TRH4/TIUkz2
RrAkCzZDJTAyWthZF9pr62dXjpYiwE6OyZexBdod37RvS2rigWw7jWxkCW6E
bgkrG26Bzq4PH85fuA3mB+cTJwaL0b3IJrUe3Yq5GNEGdZlzcPrQEHp5UzH4
VZWOs8i1gSIVGz73T5hoKkvazkhbiO1O0bJu79vx+M3UX2vle8SdvPN6v77m
Y2eZT4uqXgd+W31QHY9WJ/x/VPD29+VBOOxrWe2hTgT1K8X8HtQi1r6cuC3Y
9AkRz3IpBe878a7I5IcvjQ7xT1JijqU5F4Ve9x98PdIFbt2GsAtPHxNVKoVm
LwZzkFh6+aprXhfsEh11coR1iS91Iv5qy9mIktPgtb7ajd3OWxKdt+sSIoxh
Z712ZKPPJkTtT083jKzfLbut6hCyrIl7M6U/4uZ9CzqyVg82XCpU/Ja1iUtq
6gdKX2QiBMYidyd7sGAiaJVSrkH4ZMXOkSfS/38vpeWSEQmmNfcTBTtUiNDa
4etZdmn4LLkuofqXBG21XpFlNSWip+PqjqP3UvGu/r7yz/hefOR6xCjzW4pw
f+PwSeVtCu4HVZp8fdCHyxN/byqJHyJEXDtW5mVSwG5x6EUrfz989w/+d737
LE4x11aYWabgWkv/48L1fgzwBKex5MghKz5puwVDKjjVB1PoyGR0GT906bW8
B3X966YKS6mQ4D1wmrZgAD7fft/Ynv8AyTect1TtTMfbDy8oo28H8au4aVVT
4BG2pQeSva9ngHHpkut3qyEobP6TN7j0GC2aXBGHwjOhp+U4qX9+GD0rSWSZ
4/pYmNuavvTvA15MLXAd/jkM9kGXc8afDSByKtflsXMWFPMElv4UjGDDpjp+
y1UjFAZ8tNf3yUa7Oi9JJ4jKOR4iKu23jMHVPcGWqpODf1lhXef8xlD0u1Jg
jt4E87SZ0aXXc3Ex1F9i5TYFye/EdhzSNEHb96IHxRKfECK4dOnJZwrWPzAk
BFw0gfN/hy99vpSHDKmoQ//3LH8Buhk3F2MEzt/Xb72Rj5bBlWb+IxP4Zux4
hmGvEaSZx2VkHhWgmI69i71qArTX/S4VbDJAuNWZn13OhZDok0u/qjIJnFqd
36OuC3ZXn/WikWIUXmBe2ik/hTsj7bYsYhrYZzA4ba5Qirnt98JOpkxB8B+Z
T/iKMmqcEn6LDpWhgd6O7fmmaVRa2v74YSEPvo5vTOMvKzCn+1OXzWwaly1L
K8UCLkOj/emVC0epnEaEbzJZncam7iPJF8y3YeHYdN4zvip4HngbMJYwg4Dh
7VbsNFJExGl19jTRavAToc89DGYhW3D73Mrz+wR5vO2so24N5HP2/I+i8wyo
+fvjuIbQ0CAjKymiIhmheEepaIjihyRp095LU9JS2ktbGtp7+Xbbe6/bbe9F
KSpC//5P74Pz4J7zOa/X68E993zC+WmYxk7OmkKLqPh+UlEitxJ1jxOOPfo1
Da+ROsoTJRNidlfu9xqBaqzFLTH/Fz+DJ5YeNw0NbYkCa/Kevx01CJcI4aQ5
OQv615MSsoPOhJnijo6F1DqEcUtTGl1mUX8hdNe1Gjfi/IlrVBL1DZiaNayR
iJhF8i2XNT8vb0L2UWAOD3cz/OYfdyqbzoLtFovRqVt+xIlfzQsm91qRnhA1
cuXELHS3pm5JKQ4kKvN2XZINbYPosaXvas0zINq2qbxODCGS7PQbbpA3+3A2
QCvMZAa+N9Srn62FEb43g7sKt3YiIjzE5M3OGZTF6r1IXosgurN5ni7u6oLX
kRK7d++mIfleI/7exSjCZv2wKP50weO8RsHZrikcJJvs4toVQ2xnj9oyndmN
7YXPumxbJyF6gskgcjGWaKy0VPvC3IOmtNADhhkTcIiqXBT97yNR6HRB+B53
DybD8sR0HMaB1wdUrdo/EbanvsoaUvVg7Uvj4ycyY5ATT7TeN5NEmC0rHNyX
041SywhWjxOjcC49p+D/PIXoV1coTxDvxmDuuv1znhE4LHAZr8l9JhL8I/lf
ZnYhitgNDblheAkqBKwMfyZq6pKL6H51gmd7iR4hNIRkj9wM5uupxMvRjtBx
1k7YzL1K9ZgYwPgcc4HcnVRim9JzpzTaDgRGia7pV/Rjes+WMPHCz8Q9jY4a
udE29AezfQnop2B0u7vVJ/cUgqwkqDCe14rnJjy/mQ5RkBT18X53ZxIhJmyd
W8HZguc/p/dQ2/Whq47yfijpE3EkyGGgZ60Ri1P6mb/WyFBsfpxgs/8joeXj
KXyIsQFbkjMuJoaQscVJLrbkXCzR6hwXO6ZVB4ni3aO+amREaaTLT9BGEhqS
39pyt9fCOjNHtu0hGbSeux396IOJFrH56ksT1ai54SJu5UBGNLfnfrGWd8ST
x3F9/38v0+3nkUKilowdAUL6WwJfESN3FU+l2laB9lH/i4+n+6BQSpcbWS2G
FOfSA1aqVbghwZpokNOHazKBa1EfHMEVnqLhnVuFCCgGut+noPvikrJ7hw+I
Qo7mRzbVmHp5wyZ5Wz+S+1OUyMLBqJ/dI33hQw3MjV8tTpf2g1OlUtXg3we8
WqHJmaGpw8FvN3ao6g3guLITR/JqDILVGthUfOtxXPPK8C7GQYicNNhz6Gk8
7v7dUHrH04jzwQoTaRGD6NQwV6ZmT8BehZfVj1OacEY/iLRlfhBDl2dEOQcS
MHS6t5KHqwXeQ69XB6mH4JGqlbW1NQEZ9kaj+ZKtEE+mPxVJN4Tu9yfpyacT
4JbP+CHtZysuqr3ll2QZwo6zl1tteD5CeyX71v6wNsRPNFmL8A7h9JFg6eNE
HGxOXzL2EmiHuW2BjsXNIZQECHF2zMXg6YRyxOCndox+vE5pVBiCRcTTRPXj
UWjmPDJ2Y0sHJg7qLH/hG8JllZT9/CqhMIw6EmhwugPL1k3D7MQgEuKtBvLy
/MAgdtMmXLADZwTqVzuPDaK1J0/S+6AbdvSz7DjJ0gHDRvHEZJMBSKfdHh4Z
MMZk+bZXHV3tsDNO+fdx89yykAf1LWTUCOXndRnP3dphJMwyL36qH45du2x1
NB2J0LJBxqbj7cifja13TaNgawT7ZMcDT0LxDqE0ntmGr2uNrl+lKYjeb3Cj
KsSPsOsdpY7jasO8ed8ng9E+iJloXDnXHUSot0+W25u3Ij572kfLqA8BblyL
1nvCiIqq/dv8tVvw1iLnUhJDH95tD5Hrlo8gVIsW7jNMNUHn3FBredHm+Xwp
bx/m+oGQtrhsVK3SCH0GOvoGGzIOP+w8fO7vB6Iz4r+rZ3rqcVImQLpfgQzq
F+/T6mo+ENyfZr8vP66DzsHFOh8xMgJ3MMbSfIsg0l0mGQPnarAxSi1y+TYZ
+7vOSOfqhhOOuu/YJ12r8UU/NGFGl4yKc2Pa0TyhhOaiR+v6iSowZr7s1w0n
Y75IaacyexDxjfF9j8lEBc42T7vqTJARz7NxwtDAjzC9HyYR3FyOO+Z9Ae2S
fVAq+Vg7G+xFjFwYz8z6QUJfQMW/HaV96P0xRig7uhC7Ar/lrmmRwMA5Eqdw
k4IOjW41VzNTQtwsuZf3NAmHy024wgYoUDg8WdNXdxYPbbQu/f9334P/njtY
u/aDom+XyHbDAsLuhS/fZpDQJFLJWX95AFQfPvf1Zbmio6WanP6kHLqXOTbO
jwwg7HlQXFOfDwxupvo6yVZAQrXuiJT7IKw33B78rgxAGd8Fpju2lXjyWfeC
47XNufAo/lCrFQq2YzLzbcNVGOrc8iGUahhxOYLO71s/IDVao/W7cQ1ISweZ
ZHQ2u/Y3d8CulWgsunyn7OWqw8fPIXmpjcMwWddKZK2JBZ9iprDv+OZ+6Vu/
yzw+gu1bxLXSEA/JpivBFamN4HvzzY3NcAS0xXtrf0p9BMPPvSkpps3g1O9w
uB0zAoGER8XCXR9xgAg6/JWpFR4P79+sSBxBkuGTY63eH7Gy678YqvZWlPwu
tvF+OwLRYlk2Opt41PXlnuh3b8M2NgrXLcURROYptLXNxEKsgH5E6WL7plex
W77dPwKFK5oxgYdi8Idp/6cXm/PytDF1X9HkMI4ouxrNvYzEX33/j5+fdyD6
RRvT7JdhNOT2FNxUC0NJDmfHcE8H1oZ1rs98GAZdOtObwbFAeJQzU/cIdMLB
co1R2GoYbCOC2UMZvuh5lWmgqdKJkj32V72uDoN3K3Wp6ANX+FDdKrz+rBON
4tWyJcQQHCsdzvpzGcHRhk2E/lwn2nt21ThMDoLTMF5N6aMmscB4ueXO4Oa8
X5bziP0zgAdmaZWHrjoT6XqyUnl6HWh9w3x3P+MAatWa/FWKvYmWfYreq1Pt
iK4a7jDm6cdcs+rMz2p/Yu7Tjfaq/9rx55PyRZbHFFBxeNfsGgwm7lkE5PSV
tYEv3T25Jq8PI6dv+s3fCCcMDhxMleNugw7Hriv30IdO37DhoV2RhO3pMtv/
HFpxnuvKmbg5MjIiSzsEeKOJD5PX7KWDW0B1Ionc/YmMrXF5bmpj0USN2c0z
f6iboXSpgb3oMRk/mG/RxDPFEN9FD7zVVWrEK+pda6pHN31blWp6V2I0YaK0
RO8UUg+eZ+JskzRkVMYU+/2OjSIaD+vsCOmrhaWGoab+316I6zBZx4l8IP67
s7bdnK8GJlcluq4wkGF/Me1uhnAYsewswbsnqgrygul1e/nJMCl4cLDpcxBR
rUoWGbtVCbuiw9cbVMnY+0hJuSTZj2C0imrbcbUC90zyFPMSNvkrkbZhZetF
sF240GDtXI6wpHCbUKo+lDaQLzCMORO21L93MHKUQ20u/4uLcR/CcEvD/p4x
cUd+dKPmFwmsScH6M6ub98CHz0NmEgo4JHFg1Y2tHF6pmjKKARQwPtt7VXvM
GnkeqZ2z6uWQ07iYe5utH1ekpjPo5NxQ6sjWeH6pHKrffu8R+P87V9OqMrmP
fbFDfyLgJFEBIXfjG2Z9/cgKPFdsFBMAq4b9MbfqK3Hyjdgxh/8GsKe378PZ
0BAoligPObrU4FqOLu1S/iC6Zu7k7JuPws1ExS/RB+pAV6aTf9NnCA1ZvOd7
gmKQ+tTQwb62Hrf8PQ0uXRgGT6SrpOhyLKbO2EQt2DTiWt36v+rQYXx08uk7
MBmHFaIgLWbTV+20m+rrZ4dRMH19+YpcPFynK+78I7fg/Ao+BR0bwUGtAp42
+ngUB7lLBuW24gB1/s2UyyOoF7fu9D4ch4yfvD0bKv9/X9rzwTvuEWjbeR/j
+i8GHkd4XmZuehfzmjPP9NgwGENpGr8afYCqEtNFX9l2/L2olvDccxjPtgyp
d+kHY5Ht6apnTDtuTm7JVDwzjFhfQz0rpfdgN80qWxlr3/SA5oMJm3MnGvbb
bW3uDeTtxavV2Dowq3n49p1bQ9hiwxNozm+Jttbr3L9PdEBISMZg8ucgthiM
JDH6HoRSYeb+x4c6YHTtBpkhZRC9O3mldtFbEsYfnfKrZtpRME9tXo5BSIvU
nBuzdiMK5r7UJr5px4Lp3kcaoQOIsDWs91N+TyR/f3L7znob5N+dmVX71g9J
+fIL+seCCNVL22in77ZBzpWO7plEP7ZodZtOr4USKpfeDh8NbIV1SVLbRiwF
BxI5j+0jRxBEa7IkS2QLLMWV/4rvpYDMRlsy1htJ3LdMq1na2QyJBY+2ydQ+
7N7XxlLBEE2wpX12+uzaCKFmOnojgz6kSVnfUVCKJiai5+mlqBvwds/wevp/
fdCeLaN/IBZNnG/6RL1oW4egcskLj572wcl1KXtRL4pY5vOQ+jdWA4aad5Gd
m+vk2Yaezz/ygaijc3/7WLYaTA4bUgObvfx4r3fNG1IokbXC+1e2uRIlX311
D5D7EHHbhiUqNpCI6RO3GHGoQDFH5pKxKAU1WkZrFiO+hJz2pHaUbTmqzoSP
sxVRIHeWIhbK6UbsecA7KtNHwniOQISCXD/kqON32/yxIK7XZy4+SCHB93bL
rqbv/RB8u1C+uHINJy3NrsstkPDDzDlkKn4AYvbLF3z/2CLL3/uNXEg5GIvq
C+5qD2I270PnDhFPZP53/NlDvwrspVvlttnshZDy9fprBwIgusb9U7i3EnTj
fBeTB4ZADvG8t3QmDEdXHvqe0q7Gw+OfXTTFhlHfblyk0R+FXFNaldILtZBg
uu6jFjyMkBm9D7HBsci2zZ4TvFCPRsaDa0M/hvECUTfjdn5Eu1DJiXLFRhT+
OqVufm8ENJMbezKFP8H5zNif/Q7N0H3JLxkcPwL5yTu69uOJ+GLJ8FZEsRWy
7hIPdg+OQH1qyLJuLAk7H1+KlH3aBnemT/rPfozAS/M9o/+BZDy5E9/cqtAO
e9/2+N/kEejYBEtIX00C5zX6I0cOd6Bt2WhPgecIzP21Gcd2f8IXDpZCp+YO
TD9iN3fiHIHhTK39FuF49PSM923R6kRl9n3plrRhsLz1CszZ5KkANe/Mt7FN
fg13MoxJDuPb1dLiz/QRuDtxNeaBeBdsZDWmW/uHYKS2TI7oCEQNj9TIqu1m
b6616k6IDuFShQOJx/EdlvreCBAuXcggC3YHbnqLGUdzVsM2RwTcWW3kuNuF
NyyckQeCB/BMbzArW0YQFozMTa6Tndgp/Lz5g28/+N3H3Xkb7QjDor1Pfit0
YvryzbPjrhTQ0dzYrp7nSVy4FPvqXmQHnkmox7yz78OdZ/spcwb+BL3L+533
KZs+bJHmrOG52VNM7Z5y/cHEmfPnK4pZ21H6fTrzd2kvXhiZ1A6LhxPBqaWj
rpJtCBL6V73E2YvDBfbXjbo/EAyKV/dTrFrhX87r+iOzB+cHKKyziVGEKvPX
6izxFoRyidfTqPZgt0Lh9uxb0cRPx0PfDho0gdFT9DoVYw8GhUd5vTmiCUXN
yzvK3zTA6uvWC3Ot3YjdL3q0My2S8DN0E06LrUNB2viceHY3Gv8ridKUjCBO
ZEYXx3fU4N15mlN2qd3ovyT2jnI0lKi/wmEscboa9R/Y+Eil3Xga40kJVQsk
xj0Ue09VVeKryaDjxHg3Dgn0Pfh99D2xJcrofnNcBSY4D/65z9ODwzedyn6u
viWYzo3KuNWXQ+Rsh/IZ5x4UvAsZSDloT9wqZaLrOlOOE/TOuw786YFkcMSy
xh51gvGAL/3XARIC2xhlrlj2QsN13u2Y8nNsnJjJvNVMwolhfVk2KjJU5Z7S
dtDbgkXYtVmWthxmnAzRO6PJ4FqcEb1O9wZHPock3HAsx+KKXXWPYh+Ohvyo
O7T7Hab2aug3ilaA1ej9af89FLwRTE/Rq/PDyfkuH7/Tlbi0wyFn+xAFWSNP
zznyBCGg/IVj7c0q7L+YUXc/rh8cX60SpH+FoD+DOPvKqBrvBa4Vf1cewPvu
Wv0vR8Jx50G5ynhEDfgK2M6v0w2iJu2P7Hf7CLzz/T10paQWO2LafnzzGsRy
Vds3768RKHk3tHq/qQ6RDcMbi/2DyE+v3eGgEwFjztaLap314P0THNnEPgQm
Dp6y+AvhsH2qFKTX0QBFmbb6PZudGHT31L1Z91B8M/yq5lvXiB63CdWjYUNY
e1O18cIuGJ7k49+qsprARpGu5F4ZgrZju5/ktkCsnOA4cfNtM2r6aK6oCAzj
02X/lK5dfvAJ1/x4/XoLCukbvHofD+Pg6X2H9xz0Bss+npn5jhawPfnGo7Tp
q+XMpvpPll5jWflMotyBVlR95WJ8azuMDPMd51//toTu5/GTTfytSC5tnRfR
GEb0cpyxWpgi/CSspbKPtMKJwS4+6tIw1mYuuPVv0SeW34xcJP1swR3DmR2d
W4YhI3kqWtXdkRD9HrvjtXsLsqTS6prfDeFqDM85713uxAjP78untrYgmH9G
xVNgCCvUJ0PStXwJeTOp/5IMm1H8afTVt6+DuHfLIqN/xp+48oVhNqmhCXP2
P0dSewbxdJ+D5/YTwYTIj/15onubIPRQKfD09CASafaJ/T0WRmi8H/1+QrYR
6mKPSjPZhnDN49n2mboIgt7vac/Qswbc/a657nNjCCIrT/LPDUcSlv9C5MVu
1+Mfauqmng7B5n3354Ud0YT7uZI5Z4Y6SObKJErpDcG6QFCX2BdNeCvIU9/N
r4Fl9qdiP/chMLv3nLv5PIooKO39RvuoGkU5P53tijd7f3U4gqH2A/GE96z/
wEYl/nNYjN9Js/l9Dq3+TbAKJ17b/QoX/rLZm6b3G79veldka5Bmp00IMSMc
rhyQWI5ouR/f7S2GId/K4NZWHUCoT/y+eriThLVnFPa0imEYH7OnNb3tS/j/
t1BioUTC1j664sgDI3h5KOEY25ArceOPhi7/ZRKuDeoSe+1GcMByveOfhwnR
lM+hsM1rk4/fnSTPjo3AJOfN7ajLmsgOzXruercc6oMrOw4qjCLEonE1f9gV
vC8E0le8KrBezHFYu2gUVAa8mlqXArC1nj5vTb4KVQeZn6oxjmFum6h0mH4k
ZP57khUQWYOQqa1WEvfHIKjv3HHsSzzWFaX/9b6oB21AYeeDqDEY/ZD5eCA3
GWPV4/5PApvgenV7mtvcGLSoA8zN3mZA2+Ye+377VgjaUBn/OzuOd+PMUSda
svFwW0nFAbF20GcI0QhrjONQSfLy/t95eGPZr3qbthPpC+JHRY3Gsf3Ozdbb
RCG+fjV8YVvehetrKj2ZEuNYYaFyKe8shv9lUQ5D8817rXrRb6RrDDyrLq2s
O0uRFkP+8mi4FzPyTgaiR8dQkemboB5cgnvH4xT3r5FhYMOt53phFPHlnyPE
3IpAdzPB9GBzHwyIUHcW/hF844lqIiLz4fGSXf6q/iaHAvn4T3Ju7qNEtqK2
ew6au2M46MgUvHrVP1KtsNl9KYzX5JIyISoevDzI1I8BXje+xKh++P/e7Su/
Mw2VpeZeJ6j7Yef3mNx0lII7W33jXVoToePBRrmSSMF30/G6bUlkRCT6mKps
jUPSHoZdzVsoEN9ua0Z/qBfMZtLaLJWhmFn/eDyOb9PbFArvW37uRhaVD/Xk
E28o3/g+4CBMxhJdEH+XfBe215qYs3ib4V+t74+aUz2gaxaWqpluxz4739vS
6k5EyVENy1W+bgQm+NPkbPos/8njdyyCPQjjh/eXWM91gW5HOi+DaBtuP7jd
u7roS3RkUGtUXOncPIcf2kPDWtF7g2vBocOf8PxGGWUT7oDpXym9uaUWlDsd
DGFoDyTKfwidcuFrx45UZ1ma2mYcXHgucGYqiFg1KBNQ5GyDW4XO5CFSE2Lt
6260ng8mFJ311fP3tyLqL8P29aZGPCkMbuyrDiJm5ydbeEWakSG28/3M1wYs
xHVUZ+QHElKHn5YtPW9E6nQyRfJkAxhY75xr5QsgClp2Bt3OrEfL5VNdez3r
YbI0MH7iph+RMc+/NZ27DtLq7E1HDtTDmnpbzIG9voQO2GlzMmtgGMBBEiDX
QdhVrVBK3JNYaWPee+tuNQQLBy/rVNZB6gTNsuasK9E8vq9EfWcVZM4HHC0d
r8OPLiEtws+RiE3VI92fqUBsiw1tl1A93mlcTmUOtCAyfrW/vzOz6av6MXa0
H+tR+IY/9rqJDnFJ6G2E7b5yXL3BQPPibANYdhk0rzZdJ0RamN8zO5DAbKfq
E9fSgNms7tsGyU/g6qgw9ukwCa7CjHi42XPy1YJnIWuILzOyKkoLZfDoqhAL
EmzCvhGLyB9TFoj4mXPCZagMTbIf53auNiHIeyFv/JMdUl78PZXXXYbjataV
fORm3CUttfE8cASv2tNKu7oy/Izm9/9c0oIU3q1x6rpOGGncR8NVUoYN8tsL
PBKt0LioKJ2Y6oTOFxw/JD5vfm5nyUxKaYXKGQ6HrHtOYK/Z8P0UXobNwbCw
PdwG2mBxDk1bR1QMnQw6612GU0Me+qbRbbjnTe+3w8Ie9DnSwlHOZRC6bbZQ
LtiOemc79xwhW/zXNOg9a1MG7faUL9717bCo5H4We8ES9680F9sal+ELDT9z
/v//n0WaId3ZzwTG2768OPi0DPf8o71W/nbAI/1cHjH9Atraofd8L5ShoCZh
msuzE3EN2+yYxZ5BM93y6P1BAvNBGdpB9F3QSNAxZDOQwqNra1cunSDA6Jif
/cuqCyWPHAYbX10lvC2dPj1VKAVzbpvlxr1NT7PxPqazpE5ovY6I9b1egmOt
QUs57d24yTG/sNz1gngV+n30KG8xdp4nlto1e6CnPOrE42hEjEo3tjAyFuFz
XVDwVcZeTArFuO48Z0oQi5/v//hegB1phZny5b3492EisU3PnMie9Rva2ZcP
xhN5ZqedySjYL5fZtM2SGGspamgi8qCjR7kScLMPvRue3THdlgSnsv7A67Bc
iFBLKVZuo+AK1ahCWaol8WVg+uFL7RxUM53RT6yg4OHGgiq1rQWRH7I+dhnZ
0C+7beVh3g8LvbT9NRZmxBMvs/yjAllIX/w1QQgMIO2JzFJ9tTGRMJT4KB6Z
WLWYk5b6NQCFjBXVmjU9olXOKDfDPQPP90RTcQ0NIr3MMMWCX5OIFVF57caZ
gZgDRxslh4ewuL+Xtnz3Q+Iib2Hg8X0Z8IhkWJazG8biL6NrnQHHib1es26/
7TOgf5lU/IxlBIzCwefbs+4jROF2/9rjTGg0R/w4nTiC9PI4absmHXBdPxXG
kJwF89a3Lg/ERnFq+cYlXmEzVLhx7zHVzMGv6FcFYT2jcCmae+nfa4ept+kb
+68UIptx5QvzzCbvgge+p4S8hVsqvfWgSQnYVgaO/30yjtLQh5MCQ+9wb0xc
8MHuMsjdFVIT7RmHnd7brCuH/UGxW7qaYlQJqp3yP+a+TyDtkqmJlGUEnqA3
weBrNapcfhpwu00CPU/S2Vhi0GD8M9cyug5Mtlqi9cxT2EpWrvPjjsdLKlZa
Xp9GsBReFPljM4Vbhj+nZNU/gU3PKISqvAWn8w593Vs4hd9H2JZdqpLh9eyu
7736NjRxex6NLJ1Cvd8ngd+NaTDcN5ixVNeBmP2/qi9qTOHSz8LqGOZMHBrU
I1EVd4Hy8NbAQtwkukb343d6JhYKsxtkAntwnP4MMyl+Ahdf61yML8wE29bW
L1ZSZMw+4Gh38RqH0jrHRQm/TJDfvGK5WtQHK5lz/z01H8P2TO/BU0qZYLJ8
LrLRQcGzgI7mVs1R8DFc5BbPysAtppPq/Xb9iLS7bT8uOwLu6domZv40JIbu
frztYz9+ztNeE9s5DOqwJctqocTNe0nrTe6TfmhxHuOTy9jsxOv//iSoxCDE
wf914+Z5Pd/Sct1Kh4JblJ2vFC0CEXzzvO6D1T6ciJOnNZclw1fnX1mxnwuM
DxlkhO7sw1NXrV3bDHuwJZ3ibvRHEG2r4lsK9pKhI8B72m6wC76vBIRc2V8R
iS3hOm/+dEOLiab9nkkHfmQOr1Yo+RHpJi+27W3owvuSk+9p1NthN3CR4xt7
EMFlZGS//L4TYst//JdN2qBzz1qvLjaEiP4apkv3qAMlNJOyvwNbMbJL8+sd
6jCC8YZ8N+3Jdkx0X2ybDWvBuq8fY/mDMELB885Vk+1tsI2PfF0m1gxGyIvy
9IUSY8bKaW3fW9A0vu8w/YkmXNt+qpnpSwhx/25Fn+ZsE1jpFETOSDaCHPdw
vxhDMHG7JLK5aL4BL9KWTBcCGvC8+jX/2ZwAojbyzhSJrh6s+Si4JNiA6ukI
ro3V98Qehxpa5au1OGS7+OU8VQP4Ne87Kvd6E5O8fql6H6rBoHaa48TPejQL
hbg+uO1GcGnUu5gJV0HEaUjImboB5y+LpnQ6OhJ/zCN2Cu6rhPfnFYaXvA1o
yuS2rXhtSgjMaO6yuV6BPVph7zL0G9DLlpXf9OkxYT5y53H/x3LsPpAc8GSo
AWzXrm03e6wEXZtZ9qaT5ch6aZ3g4N2I9MHcRuYMA3S0/uSaqSahg3JyB/2d
JjjnjDVvWFsi9H3Wzz92JLz498+U8VAzekxs9hq5v8K+52rnam6RQBZxsCXt
aEG9B5Wa2XdHdJXc/HL/DAlZDW93cjK1YuCPgHKsqjNckmcz0k6TsI/9QgBH
fCueT7BKObK7YIm+33OHBAnU2cIvZm604dP7CJIUgwss91K6WTU31+lyrPYe
acOjN9HFwZedMdzOaCHkRILLt0jRaet2XKV6sHsswRHeleel7F1ICBe8d7yY
vgMWZLuzlX12UP7qF3tXm4T5sDZd8usOyJ+nTnf0tsTSU+XT386SQB/t/OPu
bAdKb7PsExwzBru26i7ByTJsKQ0TOiLfCTW27FOu4jrYK3vYZ4dHGUZ+DPOc
ITpRFcJ1mCH4EUzzecv+HNvko9R/HBclu+B4s+1Jr/lx3De3HVsP+oKLKyvZ
DkHdqFrn15Yc0SAOfWuyTsgqhW6M/A2uez1Q4ajZTnfKkHhtKtEnUlgC+QPu
ISpMvbg+5TO6ut2McKlpeeoYXIz1ue+an4heJHS9td6qbUmwWJft9xQvQkkU
24/jGmQ0NrOECGlaE1kp8eG7yQW4yJ+Uwr+lDzL+6Z6mp20I6t+m27nU8rFN
qf2HWnwfLk5d6j/z25oYKJeuSprOxfuj/Z85VCgwrzmT8WvRijj7S3p60jEH
C/V50w6C/WjdcmfizTFLIvyeVUrq1ezNrq89GnZ4ANd/v03662FGLN2yf2F7
LgusPKUHYrkGwXJk7UMVqzFR0t/066h5JgxP/Iu+fWEI14+VJp6+rktMex0a
s2bNxKdAY7m2E8P48kb37XzyE6Jj9t4HUbZN7uxum+bO3+y+Z6vmx32OE01e
YeucrpmQEF532yUxgh9Cq9v2Vj1G/e6wHY+8s/BXhPU/+/IRaNFeUdOiMoCa
0fZIKb4ckO2GadXFRyGjtRq27akVjJVn1YL585C5/I/ZqW4UaVXf0lRPOsG9
re7m3+gChD1NOHtabQweX8Kka4beQJCxeuu/3i9ILS9JNcwfxwexhxdMLfyQ
Mjrgu36XBPfimPREjQn84buWoJkchOICofxDVhUwKqiZ3rZ1EmxMklWjiuEo
E1u+vTpRBepPqh5ePpOokevi47gejcBf6gtf42rBrBKV2LExidkIFUWVy3Fo
E7Y61/+lAaeN/epSZKZwxTaLlSc1AZfi5p57XmrBlu+/K5eeTWE08NzVDbVk
pP7O4lGzboMI1YUC/rtT2NN4n0ZFPQ2mxtc0r2l0QC52z3wW9xTif9AJLd7K
RLg0RZX7dheCrpx2eN0zicBJ931qktnokLt88SVHD7Jlr1TEPZ6EKodbzLXW
HJioT3v51/Zi+RWbyM6QCWjkUV9acMvF4ovKHI0zffAxDqvS9h5H4Xbu538m
c6AGPa1t5ymI51fR2/pwDManRb3/zWehiT2dWmGKgtHkJ5k9zKMQs5vl8b+b
gfXHr/SvKfZjz9a1EpXmze5TCxzLEU+BgWCkc4RNP7rmS+szZIdwz/PJHxa+
BOzzPJjt8agfTLlyzLnCA/h3SJPv79EYLM1zXb+1uX6+sujrq6Cg+06dUZZM
ME40ePVcE6Ig/Nm9sShNMqYnw8P3/n0Luob4hf1KfSgd6nYcyOvB8MZ/l4pZ
dfCOviRKUoUMtVxrmtaz3cgYo6ak5pgSkzYnoxUf92Ir62z3I0onZk8dCD4W
/YbgEJpJzr/bg7CVLsWanA54/dXi9lTxJczC/WhFbnSDhfHg+Y/Z7RDrDD3b
JB9ALPQfaXU83gXxZ/dn/WvbUF/NW3BDMJj4UXTfS2/rZvfZ6bV8/tUKxwa5
mWD2UMKT3UEuYbwd7+sLR0+JtoJzj1vxEl0Y4eXX+DZ600+2uMeqMfz/3d2q
BCed/WEEb/R0LntpK8h8bTuiJ5sgbdsa3m4WSkhQTtb9ftWCrOGzPjyjjRA+
SFxsuBFCUO0631f5oQlbKU02KqyNqIw6Ik4XGkRsexRnEtPYgNhwM5YnLxrw
j72An8sggHj6Rrpwmakep2SeKfZt1KNtb2wm8+h74rO9z89q7Vq8qt/yfbSl
Hq+5lnJuC74jqK+9stEfrkaW0mLbs9p62JHUm8KvvCWuPHPRr3KpgqzIXZuR
/nrsW/7jc3ibM2En6eN382kllqmWk3Zua4BNs88Gv7clIUKwBsdYVuCgmVFw
jGQDuNc3TGbKtQjhC/339zWXQ4u/b5o6pgFbypboXzQMXiP2/2s5rlSOX78U
N+I5G8Ho20Of80EDu+VvMxgukaDFqn3rRXsjco6bX91+1BR55mnvA+JJeN2Z
xDr7rgmuKt9C+2ls8Jqzh61Ql4RokXp9pbvNENg5yfyG2QH2y4bZLiDBLv95
NA9fC5QGzrSt3XaC9pyBpOYJEmKYdnY0sLYi9nyCv5q2M/iOfsup4yKhQZ6n
mD+iFYMK7cOOU84Q329xT1SQhCiJUq6VM21Yw/p2zjpn+I3/OvJ/zl7IzDkU
WN2G429cvf7QOeMoj85yjAYJ63frH+Y+akfnb8Y7AnGO6LxaavPHmATLZ4cP
v5poR7n3o4vTyq/ww+6jXtpzEr4y/WL+p90BztsP4w18rPBArypqlwgJFnuL
Ty23d+Bz+/MuybumKB2V2BHwtww3ZG+d6BDsxEqSiX3i+EsEWzo1qaeW4Tu/
SfoN307oeL3O/iushtMVx+9XtxOwXWquYLbrAu9Ua2RAtyhhvP7z6fLfL1i/
P7fAxdKN3bGnBg0slAmnkGEtf+4vcNNV8bma241zB5u0KS7aRAf7ftMWiVII
YTXnjUYPeo+pZr1VMCLmWaR3Bz4owZxh0SGCvRf8Lgkux25tcueCuQT1+WI0
OwQE2LX0QrLUc/awvyXBk7TrZPBQIfaGn3m2YUeGtb0PS7GNNeFr7VmYY1KA
ioPVdmxHNuf+9yGDUwdsiCMNuxZ9fuWhMUSFIay6Dx/bUv1WMq2JrfqRlt8c
c2H/kXc5x4mC+ZxXZ8teWhH37LMfFHLkgLvJlo3qYT+OfhD68PGJBRGgpXNX
vj8LGtTXtPRvD0BjS9G3JgdTIpxQvKvVnwkxSoW1ldIgfKXYPD46GhLvLu6i
uSmYCaFa3+teBkPgkB4u7WfSIri/LbMGTmdAaHq20lV6GEi9877nwH3Cff9D
efXNztCqGD4/RBkGp6QV26fPwrgh7ChUnpoJeX3HoVCDERR/XzmQqvwcrKHr
g6kTWZt90sE8vziCj0qZiXzdxlgvMO6hKtjkY6BH+oTJKELSp4PfRNjiaGm4
qNBGIaj4F+Z0E8dAzWm5Jrnojn37nB4baZbCebssW+HTcVSaWrykqfCF/MtC
/zefykDFNshw+eAEqBleOu45FIiDRlfHD4+VY+V1BrmrfQIiMzQ0fDRhWE4p
fB+vXwUZda8nYmaTKMoN5582j4L8JOdw8N1ahPc7vfr5cxLa97hujjfFwk+R
SywzvAFXmEJ49yhO4brp+VNMZgnIj84+uXG/Ba9FB2yE9adw1U7pYqhGMj4Z
n6/7m9GGkpIHoYMKU1AwvyBAepeGc+whjW9qOsBIv2PMdrMHT98VcR8yycRj
Rbr8T51dMBBwcohKmoSN85XH7HbZOBTbmONb1oNmi6u1VsyTsC05wyW4nIO/
Ris2NNZkHFOw06jgmcC1NWXZT/dzsUWZ9D22uQ8Dq5lG/xbHMMutLZXOkoM/
goKamRkUUJ1TDfYLGoWZS8ObH6aZKGH8+TL1wibvVuWofc6N4M8JO6Z00mfs
2/PpkuKLfvBc1Om9WTeE3h3NjknNCXg1eF2a724/dNp+unmZDsC6+SN9mlgM
SEPaIkZjFBCN5W52/1Eg+PJ6VLlwMMR3lIooc1EQWdUsK/2QjAwTvZCvD9xw
5vBsG/cmr79zGjwS9eqBoyjn1inTR1iZi/6ec5iMFy2iVdnfuvDw699plz4b
4kDS341LVL2obbMbXXzdib7tz09Gm3sQPpfZpSSGupEZpzeVeLcD8bsrQjsv
+RFLkmfjH+Z3YR/zf/Pt0u2I9Lf1FFwJJHYeC9eic+nEM3ZaC+7Hbdg5W59h
bR9ChMbw32O43YGerAcxjl6tuD2otytgPpTQiRgp7WZrB8n/QOjnmBbcTn/F
flcmjKhJKJUonGjFw6BkHv9bzVg5Ugq5glCCflTzt3lAC6q/nyp8cLAJjcxj
Kbo6IURunMxN5rdNmB1IktPgbYTULc6x7++CiD9SNhVfoxtg59FrRzJpgI87
g9nv6wHEZy+xMI6mOuSpn3UJ+V6PPc/V6bTN3hNxc0XyhbtrofqTz6+2YLPX
DK3tywkvokbr1cq5V9W4mDlaq1ReD4d9WxUfK70hqm7T/+ZnrsJJBnZj4fV6
PDtvE3bH3oHoqXz0e41cAY5C2eFLSg1QoDVlz5A1Ie7dledqmCvHBIM4uami
Afbvr91aon9AHKVLfRl/qxw0D0q3KEg1gq8mwLN/c7/+W0/KDZwh4b1Nslvl
WCO8GoNTGtuMEFJ/LuNUFgmjHk47biQ0QaEtkZGkZw2T7IKFudckJLzvezfl
3wzfba5Rq3UOOG8TXFetTgIHmzIft0kL+mMUee0HnaD2j8mbW4aEgE91W6j4
WjF+c7fqr35nHGqbN5fY5MVqv6jPrpRW5Exfvr97s+MWjdbYmi6S8Ig+wont
ahuKVE6vWMQ548i9Uf4X1zY5+P5O4c+BNvTSj0lb+jqhoOmkLpU8CcfdM3Op
3rSDf1k4qrvIAWnUck6RyiT0hFHPNfJ1oFvmukoCry2Y78aVSjwkQd1V9xhV
VQf4zrX8eVFmjq4vOrLZ50gYsDGKELrbiTdBv8lO4YYY/hrHMPO9DP1f34s6
V3UiUpt9r3KcOp4ofPplHFyGR/NHdlsIdEHo0JXFi3IKOBTJbh3OWwZK0JiQ
dWgXMvTDQv7YXSCSJm8I8f9HYAcL65cM9m58ni//wNzwiHibY3+KS7QU2aXJ
Z/U2vW+96aWYiIchsfX61ra2EyU4rbM4ncTQi2bZ4mcHO0wJtQ2WmEjGYpi/
zOiJau6Fvp6EH6uQJcFN03GiYpNTh8+RybrvyegNLLNa8bcm7D9xCJJ8C1C2
RpRVyPVBTtEzmT/Zhljijy09diofr/Vujvv+7YOfYYiTv5ENEZp+JeAYKRfn
Wedebv9Mwdzr/TJy/NbEYOApFgO1HJR/up7wV7cfi0TQSii9JaEWVr6d6lA2
pi7ypE5dH4CgJvc16qNmRFHj6mQ/fRZ+XTPTvyA8iJY5+u2KekaEZ5+SV4tE
Jp5we51klRoCXb9j681MbcJZS98ndSwDUwG7yk9fGIbCm5AoyUuPCOGrwhHq
vzPQctBP50bjMFjcW3JeZ7Mg4TKPkpBfJr623JZS0RzBuTnXyTltVSxnyNnM
J2fh+exjn9KNERT4fn479MIIzcIt8p/lc8D80H1P0vtRPK53OnSY1gYul0Y7
2gLzwOglm+jHOgYl08L9XNbOaF/PyYowK4QUyWNELWAMf9a5qGNr3qKrn/WR
W38JKFZv7lOfGMdX18cf2nf7bnp66+4o/3LQx8fsW7KbwMiYVaSNXig+8s8w
2NNVgZRUSPHkm0Sz2/6jnruiQHu92oCWVAMLQmEtqXoSQz/jbszGxYIo7z0q
2lQPQsdeJ//qFI4fuVvzmCoB8kqW06yXmpHMfVZG23UKXDTXGtsrk+Bq9CiD
hqoN9+z38Bh7TYGlrutPSncq9L+2s1f8bYfs/ufJZP4pzJULvLPTykB+ktkJ
BdouHCsNVah9M4n2iNM779hnwmhIJUJ6oxv7P4Ss/FcyAaFHGbcijbLw0WX8
V0FHL0jPZZxZx8dx8CuTbph0NmQqdmjt1OyDR5b/PCvNOLb/aOgQ+5INBtu/
OcMhFFTrqVYt0I+h1tu2p0gsG2GCO8WvKvfj1oKgI93ACH7+SxZkEsnEjl17
c9I/9EMpcuDPM79hvGtI1NOi+YzF/Euzyib9KKrPMC2NGUTjxufWpYp4fC+p
uIXfFNhlqO1RvNwP0cmf6g524ZjIU3119S4F44YCl0Jo+xBSa/zqUOo7eLoU
pXZ49MHXcmqF/VAvHq6PdCmumeP7tQXPZ+lk0Nb1s0V5dkNnmzT/f9/VCU51
fmWB6B6cdhyVrFnvQNmvWstekXdExG7e9TmjbvxQDmfUGmjHLw5eJ4Zkf4Ip
M76v4HIXzgol+j/obcMyqSmyZzKIcN5JOXKcthM/FRs+i820Iupcgor8aAgh
b7HD16i3HQIL3yW+sbfiCNXzv9eaQ4mH9OGPM4va8KNvXj+mthkcOyIESmdC
Cca7trJJia3wVnUW5PnYhEidmz8r/wslurceTNt1rgU8pk3CDxIbQfYemJDa
GkKcidpqHc252Wn3ikstvzVgT4DAMyqWIAJlEyb7uRpQmKZ2TtugAT/3vr2f
FeFPLB8d6E29XofwV+/4PFgb8HH/gocM4UvoKQSys/vUYEJGuHFvcz1eLL74
VsbnSeS0vy1g3V+NsEg7zvH4evBFZg24er4mwlgWbqZOVsJ44GPTh8h6fD3k
fMCm2ZZQPqr6t/p7BXiNYqpKNnvNhL5i/s2UPlHQ7ePwkKcC/gyukReEGrAU
O1hENyBJlNCQ9lhblqPrwivptOoGxN9a0j1+ShWVG/eSaH6SINtpkW6k3Qid
xkB6ld1G2H859UbfOxJY/iTsGT/RhPe3KX8l/llA4/fSvIIUCRMfD+eY7mjG
6sK4pFCqHWSlIm7PcpJAqakaf0vXAvMDt8jm/o4oCnhp3MJBQsUPf3F3+lY0
PdRZaTnljBe/GYwTTpOw05K7vi+gFbtN+seKGVxwObgy+5ACCe7ORkaxh9qw
lSmP2H/SBZPXGqn+6JOg+MWk/XRcG6SsjttJOjnjWOX71EhzEvRzQj7SHm8H
+dyL79pHnZC19OmHlQ4JNmO7R2n8Nvn1zXLrgr49eChC9DTSJMgvS5hEfGsH
64GXI8tfrXGgIrlAcQ8Jmsb3Dh+U6cD5m1Qb9gzmiDW+Z/KzpwzdYoaK4tkd
2EfLw8tEMYTVjX3ZM+/LQFekmDos0Im998MksiU0YZ/DL3VujUBxghoNm3IX
HH2UnT9Y7SU85r8r0D4isHrjqCIDTTesvvKfSvb6jzCJ5dnFn/QFZ79s2xOT
0g3ViU/SFVJaxEsusXcnyZs+b3BFcF62B+bMu57bhhsSZQ7ttEFdJbCafax1
cLQHO//p1Vx3MyU+q3tPPU0uRp+qtmS2bi+IA0qSTwUsiFCjHet2WkWQlb/b
0fW1F2rfqnVfj1gSKyL13S9YChF8Y/XlexsyxNS+sDHVWxHytDeJc1n5sK/8
FPZqXx/em+UejNlqTbAV05xf/i8PPokln340bHbZJ5EiSqwVoVfEc8d0Zy5E
ZGnqDgRScJpxW2BapCUR/Ovqub6RbFjNM6ykG/XDVWp/o8+0OXH8n5+y3WZ/
yZBk7PUfDSDjbSpJ64UpMcZpv/MIXRb4lCOq+28NwuT0ka9vWY2IW5cXGng0
MnH91+X0R9eGIHrWn6cmRZsI4yq9R/U3A6E7/so84hjGnjRiOenXY8LTKzPN
4nsGPClegoGew/DMzS7Of3iaSDznMBmpmIljlBePj68PI6Xk0vrPf/eRr7GX
2+xkFmoHiTIGsxFc0Dz96Y+aLvh9pPjvmWXDukiRYvlnBNNVccufm83gulvd
o0UoFzcMz8MtcBR6PGF+pkz22OJPt3pCPR8f8u+c7xYZg8VTnrZR2dd49Xp1
4NjWIrTs5KNrnh7D4X8v55ilPLAm8vIZ/f0yOD1VOkUnPIG9hie0UoQDUHbp
d1H/k3IMtZyRLWqYAGvYg2+x6iHgclyvoE6uhOUDlejlu5PYklcsvVXoA+6I
qXDOPaiBo+u3zKHYSfSxzW4o8ccgQ6OpI8uwHmSmpJJ3+ZOQlcww29IXB2mK
X4bbSBNyOR6efZMyCTNu3V1buxJQnxxuzV3Tihke0FL7T2KFtSImTjYZf10L
xzST2hGMpQIvy0n8UK8zPSWdhiZj1ZP1rp2gREl8VX8wCY78bybkG5ngtjpa
d1C2G43Vnl+Ej06i/zjlKa1w9iYnpq0OLfSgI/PpAWHSBITfRZGng3JQncA0
R6tFxp0ZO9XVAxMwSH2hVfMvB9qS9BqPU/ow/Ja9YuHgOBgFOVscb+bAgiN+
/JgrBVyDrnOL30cRFn7q0LxAFuqd83gDlyhI7lG4rZQ1giXLsotOnGk46LEt
sXRnP4bVAmx7dYdx0aHuo5rwJ6xWvdbatkjBZBmM2x8MIqJveC2qPBqHWDn8
9BIoaFMhPY5j74edOPNv1/Qg5CbZXdx1hQLKpaYUGb4+0Gp9/vyqzRNbOnP0
Y5P7MMFxZsYhpBcKwr5NFs7W8CiKkwlfIENARzXrrEgPMnymzsla3iaYG0rt
t270gv9l7tPV4S6Yxbv4Kb12INjU8zRiF3vgXvD6J396J7ZYiixxpHoSRW9U
OO+3dGObxoyLQXAHKmafzCVE+BGB91+qssR3gfuBdttbr3ZUn3o8sOdwEGHG
IESWeNaJ6XqO4WGbNgRXrcn5OIQQNxjW20d5O/DOuoWH1bUVXDfN1JdiQ4mk
/2KYG7e2Y87u3ICocQvYW62dfaZCiVsd212p11oh8FIyQ0u4Gcw6X28MhIUS
Vzc6q/4utOBTnBhftUwTXjwZnT1XF0IsM2ksVM41IUCqIszBthHzfN6muqeD
iUzMfjWeasClh1y5Rl0NcIhX4uvqDiAKwwN7G3/XYd9l+msiZg0ICD1udInd
j7Auuj9PfboWxYLS+n3XGrDasSHrvuZNzFvu6A7zrUZZf975bScawK/gnTYl
60Yo/kd1wUOoCgZj60f9eBtgrjv8gE/fkbjAdc2x9GAlBCayOX5KNUD+bJl2
lZQpAVn3S+W3K2B9h5Rs6tuAgwfGV4WiHhHMnXpzConluPLh52AnayNKBa3M
k3Xuo+zAY9tQznJkOLj3bK9qxDvZV9g3aYBAJ0n7ugISDAvPsqS4NKEoVkWN
omMJbpkHI/Z6JAyR9e5aqzZjfEtPS6HnK4xKy4XSXyUhL8vk66NnLYgeO756
g9kJ7OpaZX78JJz+qpwjdL0Vi0n1On/CnXE+NnNe8jIJFvHNt1P7W1Gz+rLu
uYYLhu9mZMQ9JuFI9022ps39rbhRuOPlYxdcP2h+nMVpk49jLqLfdrdDKotd
/IOVM2yyPV7qBZNgpeGb9TGxHVv7brxmbXQEv26bOfsm3w1/KRUnnu6A4wSv
4+qqHdz91ylvX5LglrTbgjm0AzycTLT+kZaY73l9X/wsCcwCPmc3fndAjf2y
RNqiMVozQ/ySPcsQQX9Spne8E3ZFO8fP7H+EfaNiHHn8ZVi9pMl3y64LZR4X
wnTv70X5Hlrl+4EEFjznlQROdmO3DltdI+9mRztT03rXfQH/Mec2jHXjsOv6
qrOnFsFVeZFlbK4UjH89Bz5H9SBsj4dAjpsRkbQxd/jQbAlKhx726yr1grs6
dGJwyoxYFn2wzzK9GHEaSgkv1zfnUbWLrP/XktinY6qocbcIf8f3BfwLICMu
d2yfT4U1Ud38HxvtYAGoX8mv2QtuerdSSh1hYkN48TCUsjzLhy6JO+hifx+C
U5SLD4rYEJKWQQWVk7lod714PD+aAq88+rHES9aEme05b6bXOVjn+j2q5NiP
LpV9g8P6loSzeggP6XY2Bs+Q039ZDuB404xEYq0ZYe75WalQNgvNLwvy9joN
4vPKidbtp42JAZk5a7bQTOw84SP6JGAIuker39Uy6xJjozUkyU2vH10/IaX9
YBgtzGT6Y1eViem3DI6vr2XCYQ//fMbYMBxdRLjLVb59qfv8dMOvPhPqUvYk
dfURbJMe/xvn8BTvFI+XCn/Lwp+gaqPEkRHkb3+8seu2EUJujXvPfsxBkcXK
jSP6o8hI1GIb47fB+O+pi09n85ATSoy+YRzDvg93w0ZanPHoaT8hllcIhqCX
j0K/jMGVjvUJp607FhmDvF/vKEWhaO89J9txVL9/UJge6othzte9x8zLsFx7
W9hyk3eFDYLxLFSBGNC/9IQ3qxzFjixryxMToAl6QRJYDUUnj3nmmngVHh4e
NDj1apM7nwUd5/yjcNaxilnjfC2UfAycBn5NwtGsUuXVnjj43/mmWxPcgHsO
0UpWUlOwKJR2C5tLwGkFYhCaLTit6iol+3wKrelXiq8IpSDIOoHZf7MLLA6l
2xc/nsK7ZJuWhKl0HK/xiz7Z3IE8enGdecEpmLl5cBc+zcL9qCJTV3IXzv0b
+ZLTNYmAYb64EZccPD1o5XWvqQc5PEpvH5yZxPHbHvGpy7ngvDVOs8udjODM
ruUJ/gn0CgX1zbPlgaki+r0yuQ/V8TlhLbNj0Fd9/NnSIgd4kxI51EjBiU7n
8yc9RvHr7H8lXD8z4ar5UG6PXj9Cz7p9ZxQYgUhI7dS312k4s+1A0a/sfpQY
GKvv2xjCeAI1o1hQEm7+/hpWkNyPT+EB9Qu9Aygp/xdSaxqP5VkF4yrJfjTK
ldqyV1PwVJM2+x/PB+g7Tzc2RVAwZ2pedqybjEH7B858Qe+hKl9y6GP1JtdI
tRV+bL3QSVV6Lqb3CnEVdM97u8g4RFGo6bPrxiK/xkbBP0WCZa/keFNLD9a9
DyuIz3TAzNtjISPTk5i1eTJFV9oNnlM/w6z72nHUjzrwuYwf0fO+V+3Ihy54
CIq4b59sw8OkRXOF+EAiKihW4LxVJ5aMF7/S/6/i8o6n+n3jMAqhoZKMIoWS
koxC9JY0jayM4ktISMgI2SMhycomQpHsPT/noGzOsfcelQYN0tDv/P58nv+e
1+u57+u62KiYtqRG1n2NJV6d9doepNODUbtdNTOKFPzUKEvwVIgnlC5XOXTI
0DzeIm9vy/Yu+Hl5Sd1PiyceqDubLolQUe740jWO0oG7s1JjJNV44vyYziC/
CAUWM9k822n7/Ifeo3cUizjCJP4qf6d5J/xKzTJZ3rdBWWH38tjPGKJH/5N1
lE87Pr02cPoo3QbDg3oVTWvRxLCilLtoQSvO6OluKmxshYzxzcH6+EiinCPb
P3a1Ge/LrHUovq0IWvHRWeh9Qph5y52eNmkCU/Gn9VijVig9hxzzr2DisTx9
sdDaG5QqukYZarTCSHCdf7HHn5ialnx/va0RZgJMJyoMWiFZeVrMWM6dSP+9
/c3xkQZAS6bspncrsv+FsH1TtCVUBefllAQa4LXP42Z/WyvGG2wWgr6rEU3R
WWxmIfU44qHb7K3ahuYt0RFuNtfQfZw57AFrPT4pzE+ZLbVhk3qY1f0BW1R4
Jn/2yiRju+DLki8p7XD8PCjyxfYennu87A3TI+MW3c4vTrc6sHHHTfveD+5g
GeLlZdpPRv7J86NfrnQi9tmlLmdWHxQ/+3VsMzMZBYzvGCOvdkF2U7VLm48v
Uls/BnAwkeG1UVYt7CQFNWTez/PafnguP6XynJuM4doX3/Y1U3DSL29plsYv
+Yi2vaknyFh31Y1v1KXCWaI8mum9L/yk6jiE1ch4nXaDJDNJRVN696a5bB/4
bPU9yqlC46a+mm+QeTdS9Wt316d64vyOxVoJGr+2XFmkZHV3I6S0Ku31Xjec
kAwOk2GgdWhIlGyceA+uyTBaaB1zgum2Bi1nEgn0369TGx/3wLa78kKlkC1e
e4W56HORoHfg+CfDu704soBrulVaaFAL4rFyIeDaY6jVQ9eHybn+W1W5AkSk
9fLYYGUd3Egm+13S+mDZ83aj2D9douYzbZes1CL8p564A82XZSP/OzQUeJP4
FPiXWDtQixeRzLXn1vqhOy7/daDElujfMhftIFUD40STM7ypA7jFxX8wXsqR
2Fn2c1Z2VzXmsu/U7ZGn8U4gofPSP2ci0E7xcW9vJXg0dfgs2gbRbMrczp7j
QpwMoo4l+lag25XBdZPBEJTkmAcEb7oSj0sW0mb2l8NDuebsg+Uh1OQdO9yk
60o46v/WYGssBfe/9y06ycOYZzJUXklyIW6pPtTZ41iCrl69UHmTETgYcSzF
Kd0j/NmrD95GMSov/1kNkR3F2LiPetkZJ+L+rm5LTpki3GWM/X5AaAzcnZPa
a8F3ibqIfuHb1oV4Ka/nILJ3HF3VVNminTbE9/ng7cGTBQj+xy6+cc8E9mwe
f/LK1owwzCu4sppagLXineKa2yYx2R4mwnVVi9hy5DYfX3EBUl1tXfvDJ3HE
6G7KgToptBVFZWRIF+L069dnjjNN4faB0DRLJWMoTlyRuiVO469F4/CF+1NI
pHLmu/y5g9eb28LVU4tx9cL3tJ6fU9i4FjiZ+/seuqwXKfQ+pdC82LX89eE0
NE651FnS+UAhkev7/rZyjBKvNJYOzuDQcsnfVYEHMJhl38j4vBan9tebiQTM
Qv7j9IgKEY4J0SudoREkfHiQkuItOoeYgFyrfarRWGw2f+DxuB4VZfHtNm/m
YE7fvuWEdBwmtqa6aLc24pQF4/NF1XkMbttjxPg0CX2iukk1V5pQZDok4UXQ
OMhzrf9obyqe+G/IN5ZuxX8FFN6TND6+9bb5I+yfDnPOvFJj5w50vRTbRrdh
AQcTp02+Gr0ASfCTFLM7BUnURzEPv9I4W8Kd3BaajYurSu4pKt343TJ3YVPv
PLK2Os7x8OTC6trCUhBvL15nnVRVy5rHoWMl1M9WBQi8VBY7PdyHbRcrmXrM
52Hz2Keuhq8IAe9/PzfyGIDPxYk9Iitz8PxQk3xCsxju39039a8MQio4zMRE
eQ5R73L2Obwqxr2N9U37ZIcxoTlTqKs8i0eMEjv7PxZh1iF58ujmEQiy339/
mn8GCc6mu13bCkB/3Wnjus8IvDodqP00n/lzTahnLSEH4cxybT55I4hiUpZr
TZoEzx+3US6ZTNj5Sxdp0/ou85bBs+jWcfCxVT/UpqQgzf7wHmfHEUxVmS4q
JI+CX8Gfn/PAUzT+Pjfqzj2CGydiRiRpPMQ/nvLsEyGIt6bejYoexr1oI+Oe
U0NQFtf7uSrpAvalcier4SEcYz/tbkIdAKm1S3Qy3YAwqGxpd18cREKW4JVJ
237I0BPbmZx8iSPGqvZ19f34UB7g7bK7F62dV7YFWEcR/KwHA24n9kGsSzV5
hKEHt5/b65yaiCGypLlMMpx7oWn78/DoOhWjs2oGd3bGE0F9glK113rQc13C
k7qLimfC3wN2KCQQuJornarRDXPVzCoNLQoMhOMszbMSiPxcSTkefSqOdi6M
HHfowp+ndiKpUQnEhujqV9TbFGiebrwaF9QJeoVpkf+2JhAnMtiqUui68PTm
3G32hg5EvJJTd1+MI2R2Z0e+4e2AZvTXTl2WDnT+8e4e/htDcHisrXw834ZD
LBUTIk/acTzZ82JcajQR4HWpouhhC7ScHhZLnG3HmnLM5rX3EYT1sVPmW941
ITxs27IAZzuC9bYaCg88JjwtBVY3OL9Fknj6+zt0NA47KLzlcX9ILMkpUtnl
3mDtN2+cJ307mo+qHbmy5kPEXhI8bCbfiJp9Dq1ufO04Wy30xmq3M5G1t1xN
2KUBR39tzpo2aUeI1sY3FtE3iDA3EVv94Xrwca7FL/a2Q2ODzJNbO88h94nc
s9SrND4O3q7eda8DP/84EqmeVvAg+6+6fiZjwDDaa16gE05fm8X72Jwhdijw
CkcaGfMeYbbP5zrxYN0ejoQ7cgV/rfbeIeP6kejeX81dCNbkMgwO8sEZbW2d
dF0yLNsK3V1vUqCawhJ347EfRmSMyC7XybDJO3J9YpmCHQ8nr7kv+mO7X8FG
RlcyxqbbHRb8qciUqjzsGBOAG9tVVijPyahKrE7L2NWNHoOdwwJ+AbAVH1x6
1UHGu0Bm9+Xn3Th6h+nDpxx/+Mg4X+VaIIMpjzjkJNqDyNee46/5/WDm+yiZ
Z56M1pFVzT2ZPWB5OWow9NcbFWeyQvkoZAgbhXzrYerFOSMnlgxGd9hvL1jm
e0HGg3qNKy0mvTBJ4WO1yXGGT1bgWxZa/yprn9X/R+qFVkJfpts+e1ALct7J
j5DATRe+ZV9ZH7qnh1YfDWphU2PtwVVaP2Yc+/OpQb0f8mkBntIbJQhbqfcT
t2VJ4KB3X5370Y+yqzMklp7rRG/qPaWPZAKH1VcWLNMHYLQc4yskZkVwMpfY
L6zVgck1cM5ZfRCH7+i6DNfcJdjG6n/eY62Dwc971v1fBmF911TmFts9oqGC
N9xroQYGNq/sG/2HIO1t4iIr6UbUG8ke7ntZDbkRwRzXLcOIavrY8VbRnTjW
KK1gp12F7woVN2vjh9FowD971siDWBwP5n7QWwGxzU/2aJ4ZgU3+hYJPOR6E
PFfXVu+r5SCn6gjuox/FivLsfg9hD4LaefMmhdaPAn58RcUjoyjLCM8X6bpP
bHwcqWMbXwIK2f7B5c4xJNSme1yNcCXYf/0uMfEsxtFvIZ7Z3eNIndjZ7Kzq
TIxl77pdnVoEYxMz6uupCew77HmUddqeSFp+Ihm6rQiBI3+tBN0nkXzdz9nS
z4KI4WAYNB0shL2e09n/c9D6mqkCZ4EmsaHMxKROpAhVDOdaDgRMYYnKz7FX
WBU3UrpXI7mKgTI7xhH6aZzjDsn7IGcFzfm++5kvSvC93/3OncfTcNByLDIW
cEGSTG2aUlcZWvoSc0SPziCb6+8p6SpfvOznJxU+rgT36kJD6MQM9nu21fuu
B+FXukJuzVQNSNRtJ9KTZlGQc2JsZ304TkwJ33tYUg/et0d+CDHPQ9psIuSK
ZiK029srRg3f4DPL0gnJlHmwfXAMbp1MhX9z0HdBm2YsHJN8ep6HxrXfuXEm
uRkYt9/z3n+lDaKHNuopWC7g0t/TP24KZmO49YDd7PcuVP7A/EevBZDK8hmM
D+TB7g/Tr/693dCnSORF2C1A/On6Y2FqIYy61nefUOvFcUupZKlTC6h8avSD
P70Eu5Oy2xfu9iMls+udcs88bnxoljcTLEfpLk4X1vuDyGjSluTnm8evzRzn
xikVkFFVOXDz7DDeucJeh20OWV/Exjn/VOCz7KFvxrEj4Er5JfOiagb2uc4/
mk6UwyBORPtX4ChMaroq9qtNw/QkA7eFTQk8LZnZb+0dw3lDPmbeuUnccREU
br1ViHNX9gmPXx/DpSf+Jp+lJ5Bh6s1A9+U1HA5P5w3LjeEuRypmp0cRre/O
82XwBeRVlp0Ui2idyCx9Pi1nGPr2f/TqNqbi0Fkqy7GZEVSp76XIvRxE2/rZ
f9rno1C9JDbj+H4Y5rav1wQH+sH1Xm1GP9EHlinReDc4BHXNoMqZ031Q3PqU
x5nvHNFUs433R+0gts9znzw23YOs86zswSLehHCfVm5pwgDO85a/fFHejSy/
deP6mRAiPPibXLdlP8bU4h8fz6aiiHHrx8quCIL7GvtzwWN9CNVfcUuopCD1
yimj2j/RxMtkTiOxHz3Y8kp6sb6K1n3UFYZHf2KIh9/+7eyo74bya8Vej4Od
+Oct46i/EEusSAb/NkmhwqYyR/ctrfvareWSbL7FEgl+SYarwRS8iWJnYXzW
hiXDN5/KdWOJVIYMPxOGLjAF50Uk5LRCPkSLx29/DHE2UDVv7lc7osTYz8dP
tyBAUlTaTTWaaCTtMEzd1IYnDBK9PcYtCOc7bnWSOZIoFv/1X5R4CxrSImw3
sbXg2hIpfaIljLD8FSt+xrsJTnjbbNLTjJHmMEetlSDCzPZK08yGt1C8xqiw
u7gZTql6rxq6/QjDZvNzZi2NsHJ/5PIytxndEgqftdTcCMvnllcbuxrQrVnE
FtrRjOMFtTsY260JN8+cyMubGsDCU7GUJtAC8YGXPzgTlIgTIWs38q/XY/1x
Wr5GQQsaXbU5Svn+wyMva+//80KCLyliSrMVfsUOmXw77FCy8ZVw1jVaH0VP
dUtva4PA7bIz7ePOKKSSS+02kOEXu5QpTOvHjFaSCk/rfWTxPHr2oI2EpHMx
2ixf28GnaKgvd8sLTp17czqKSZA1pj8fytqJrgO6DoG6PhAm7n4cKSNh01vT
jO+iXbAy/+K5i+QDoa3ZZ5KaSFjU3sP/T5CCfoHrxmkWPtgboWJ8vpsEdtWx
EJ98CsJ0q8tak72w88amfIJMwvCHExbVUjQ+LlLelQu4o5vLkXs8noSLTCx8
R55TQfdOVKCCeg/fbj/6q2lIQsA+jrnCDd3IE5EWXt/lgBmpn9axm0kIszoj
nmvVDbviw1uv6liD56Pk9dO2BE6ymDRuGOhGPb92rMQfEzhYPpLYWVGHvkf0
8/66PeBwpnujc0QdW/41JEcr1qLj7jOJ+w96MVu5ZXLRW5c4c1wkU8Wjhta/
zdy8In3QVn6rYs5hThTptTDqZlYjTXVMvb61D7odfi+uLd4mnsqZK7m/qsJn
Z/JbW/N+THWtJlbsvktsO8W6qO5XCX6KNF3gVxofE7Vf3Jd2JPI14ug9lCsg
YD9aVuQyAAftrL/y5k6EpPZS5MuVMtTtkM/NoBvE+eVboantTkT7VF73rbRS
bP7y6U5Q7CD+uDPczYhworlO2KcujRJcamoqs1cawm3vnPWPzY7EYMfQ9cUd
xVhv3iHHsWEYYqfa3tm7OhCT0l+l+FYKMerQUKg/MIzOsevGZfH2BHubOZ8u
cyF2WftdD6kaAev85e13z9gQD+tZgxQ1CiCkHN1Gcw3wa7xf/MtsQVzd/zNS
+XU+KNrrQqfjxjAgJpR5YYsRMb9a/VVLKh/i8kb2eaE0Dno82Syve4FoI/3u
9buUD9Y+eYW1+xMwn+w5Uh1yGpvMzwvwbCnA0eUtsRKik1jgSa6a1TAEi4dn
oHBfAX5QbpnnJ04i6BincsFJK3Ss9Ged/10Ir6PSjV92T+HDOfp/U7EO2Fjs
lXbyainohTbLvcY0uJgpZssSPvj8m7W1zL8ctS03+vnmpxHV0W63SywAi6VR
aTbMVWDZ/eZ0QvgM3rJHl/D5BWEg+4bdEI13yvNMbZknZ6HQtMSLQ48havRV
RpyNhNqhfPcDfbOQur9B2mp7BIi6dPYtfWSQ32TUW1rM4cNIt15KSxQ45QvL
jg/S5lq7TJ1lZg7jjLYxetQYvNGaFNM59ha/nT5uiDoyj3iZZ/5xf+PhrOPo
sULbL+0XXCQ/683jx5YQxDxMhkRNb6RVaRsOh94VYnabh7r4gW2XB1OhOLzH
yofoRFA9R/q2hHmILMryPr2UDp/Nzx/0f6bgO2fG9s1V8wg8NuZjQPcCzz4+
6X7p1Y3v+Mbp1jEPa/v3yd4VWRAcP1vWwEzzPyvruU+kedDddtDwZM3BNRWe
K/YP+qCwf31awXMevqPuFV6hr1EdO1sXsdIP/lF+sZmPcziUoy7PuTUXhV2E
zeyJQUzqKfRf3TmHi5fA9GwqByrDFCkbziEM2p4TUGGZhQb5RvvZw1nQG4pq
ZHpFu095YbN/eBr1VM+MWcZ0JPq6qOjT/qtc+JnPpIQpeDaVlASpJ8K4tzSs
XmwYiYk+fEzmk+j/m18i1h8BhaDW+CyJYay94LLmjx9HxSbJ34GRAVC6pnRf
btsw6m60G7s10PhsesUxYtdd+AUKWX2qG8LVQ8cSC5RG4KMdVzGloU0MlppG
FJ8cgqsP14WWT0Mo+OTysMzag1jWqX7NZzeIQf6nlz8FDCJwz7W83YceEbL7
gipbaL2ctdHj33/SA1CeKbo4LhdF/LjMyPCS5hsbP+dYCjH2I6Gs7VVsZSyh
tTvZSVO/D/l7H3ldfteLi+lV06EbEonQsLQ746do59pDH7InelCufSpWiy+Z
6Dep/TYs1AO2vWaX+L91o1X0iqSoZAqRHap0z2hPNx6vfzW6I9qNFIuE14+9
UggH97WEG/uo+MemmHctlIqlzO/k2WMpBJ3I0W2UIxT8FaLft5Odin75JK14
lWTCuYi198ydTjSIpocdyaSAdVTvzPZniUTHx4a9VO92VDqQLrZqUjDksPUw
STqeKKe8bp3KaEWeQkc8Fz8FTE1uEba6MYSaYWaL1mwzVsymQ8kMFLC9a4q9
viuKcOX/MPRIpQmHtNzPdn/sQp35ckbJzifEXlPpon/v3qDSUdBt9XMXGCW8
JRzSHhJFY72Fgk2NuFD6V7KciYJrJPsPujt9iN57JRy51Aa8TrtsWkt7h8fZ
mBtjsnbEoqXF1Dw/jadvuFt07SmgkwlINlXtOn0tX39BOq4e6j8n8rl7KWjt
a1CqF7NB3Ld1RRX5erSEOMz/ARUsNubPB0rdUPyrtiB5Uz2kwjOSGqqpOP9D
UmI8yBeXJ99yXv1LhtvPXP39at34M2NM53jqAQYkz9pt563Hmd/mmvu/0rzI
qpebYf0h0Kju4WRUj0tLzz5cSO9BhWTM3WBSMDK2bBT2qKjHW7/JYqpuL1w+
GO+YsQiBsN/FpySuBvy8JEAK2NiHPUVC0Wzjwci5eESFfLMBalfpKlqz+9A7
xf7l4pEgLJZ/M2YIb0Be80Ye0ol+ZNQ2aeS6PkC8/4qmbFIDRnPTcn8+6wdD
4nhXJLcf2D8nvmIIa8Bg46bHfHQDUL+VeiG0xgMD7m2xMjYN6GuNDTe7M4AF
xjfyQjNOmDDoIrUrNCDiMKPcvR8DOKXMdc/JwwpaT+pJlswN8LqhlFGeSJuD
PGbIHdSExogdU19LPZoeySuNGAzhUCdrumG1JuFrlnVfwrceN/3K1Sr303z1
wcQR4f+sie1hQd47hOrB+eW5adT8MOJcTkX8c3cmLB3vuZhlk3G57tF23jha
l4W927ZO67I6H0XO9k1kmP7XbsklOYolqV/V0jy+RDBvefCiJgmufB+qL7wZ
xYVtdYqZu/0J8vLpwru7CHyfLf5YazIGTrlhcXXLACJVrPZSoVMtFN4oLdTs
GEd100Um+v0PCHa34+YK1GpYKu1/2zc1Dt4RgdLayw8IgRoOoYdyVVDMOLOv
pWMC88Ga8Vd7AwjVGP+In3UVcDJ6dT3AchJ2coXk2Wf+xB0GXlEtm3I06l8o
JJYnESzImtod6Eu8ffj8epdmGczo9lzh9J7Cr1Ahv+lWD4LF/VkFy+NSSH+1
1ONgm4anqISOs4oTce6O7jqdZSl471SL0dF6LShw76fPB80IM0YvGYutZbDr
cVD4wzmD97caLrqsqcJ5+RKHR2w5shJP7dYunUEOa5PpgRVHhPBwPJPcXIVz
Ttlfd1vPIsd7/XckjXfnVs8+1LSvhVJs+soBsTk4/wrk/OoYjv+aOBvG5kj4
93v44sK3OThMMIo2X4rDMnkkNTW2ARUpkaxKOfN456317NJ0KrwZHtG7D79F
qEeFc9u5BRxamzBmC3sBDzWJMk6iFdwr3zJ8qxfApTEm62Odi4PpspSjBl1g
SzqerfZrAQGjogH640WIEvjz3e1yNyr3cb/bPLeA5aSkVw3e5eDZYrrYt70P
h06Z/PscvoDHe9ceGZjXwD449uDN3gGIm5ReLqJbACdlVVHFj+apvoOd1yyG
4SNhHHd5/zwuySQ5dEvT5jmmXUstbRR7rej+Gg7O4hPx0NWCNocBK4whrdLj
+MEkO+6nPINLbc4qS4lk+Jen6DkencDeYzzl+k+nQK/2K/rXtzqIup5/E/pi
AjkbiECHuQlo3b0ie2J/FYhNUkPB+RNIvreQzb86ijutkQN7fEuR6rB/LOf8
BOys//v7/dYwFI6/EIz7VoDoG1061Lvj+LKLp8SAexBz8vQlSXVZiDhAsnai
/VcGhG6j5+jHOf9B7nftqVj5oKbGITYKi2+WorkavXDy7o8WuB8NHXI2XWDe
EG6+4h648ZQKywdlmsxmhtjEo7Yl3GIQBsZK8c+8KRjt+C7deNORMHzPNae8
awCTKVnWBmxd6JTi5B+9EEDsE+GyD6zvg+a7rxEBpzugqKb0okkplDgQKGYU
59wLcSvT7U0hbch80e8f2hBOHLtRs/DqRA90hjts1eha8X2n3Sd32UgiOy2w
qIe1G7IGxTuE/t9B4sosY4ORREa4BJG+RAF56glHeXoTEn3+GP+diiT+vbE0
PV7ThYaSQLme/LfQPsN+DOqRxP8Auf646w==
      "]]}},
   Axes->True,
   AxesLabel->{
     FormBox[
     "\"|\\!\\(\\*SubscriptBox[\\(z\\), \\(1\\)]\\)|\"", TraditionalForm], 
     FormBox[
     "\"|\\!\\(\\*SubscriptBox[\\(z\\), \\(2\\)]\\)|\"", TraditionalForm], 
     FormBox["\"w\"", TraditionalForm]},
   BoxRatios->{1, 1, 1},
   PlotRange->{All, All, All},
   PlotRangePadding->{Automatic, Automatic, Automatic}],
  DynamicModuleValues:>{}]], "Output",
 CellChangeTimes->{3.5535782783906116`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DynamicModule", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a1", "=", 
      RowBox[{"-", "0.4`"}]}], ",", 
     RowBox[{"a2", "=", 
      RowBox[{"-", "6"}]}], ",", 
     RowBox[{"b1", "=", "1.6`"}], ",", 
     RowBox[{"b2", "=", 
      RowBox[{"-", "0.1`"}]}], ",", 
     RowBox[{"c1", "=", "1"}], ",", 
     RowBox[{"c2", "=", "1"}], ",", 
     RowBox[{"e1", "=", "1.465`"}], ",", 
     RowBox[{"e2", "=", "1.217`"}], ",", 
     RowBox[{"m1", "=", 
      RowBox[{"-", "0.337`"}]}], ",", 
     RowBox[{"m2", "=", "0.27`"}]}], "}"}], ",", 
   RowBox[{"plotPSip", "[", 
    RowBox[{
    "m1", ",", "m2", ",", "c1", ",", "c2", ",", "a1", ",", "a2", ",", "b1", 
     ",", "b2", ",", "e1", ",", "e2"}], "]"}]}], "]"}]], "Input",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.552750224975037*^9}],

Cell[BoxData[
 DynamicModuleBox[{$CellContext`a1$$ = -0.4, $CellContext`a2$$ = -6, \
$CellContext`b1$$ = 1.6, $CellContext`b2$$ = -0.1, $CellContext`c1$$ = 
  1, $CellContext`c2$$ = 1, $CellContext`e1$$ = 1.465, $CellContext`e2$$ = 
  1.217, $CellContext`m1$$ = -0.337, $CellContext`m2$$ = 0.27}, 
  Graphics3DBox[{{}, {}, 
    {Hue[0.67, 0.6, 0.6], Line3DBox[CompressedData["
1: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
1XOQOqilldRvSXg/JCthjmtGIs0N2VL9bPDt5b/f4GlN+FUkXVv53IScUIdw
nhNZWC9jtSizsSG+Xh5l+LHyHbT09CLbsxlQ+ed4f2pwh9OepSjPKzSAo96O
0Sg5HXPJYo4URjaEYBhD+aP8b9BwY/sTq7iTc2OB3O6TVsRXR515Mek6FJMv
RJ9oTcbse0WXE3EWxGtNgcOMyzVIjuwhNTyfCD36zSxTMTMiUCeOYa2uGj9u
srhwkMRjz8i+YfHrxoRma5fenZIqLLOXinUoxGFD913boL8hIdYstCqTWYmt
4zXqDpsx2HPt01ScrC4xrLd5aSuxArNNRS/Lr8bgR/ORkMyN24SCw/vOhKRy
uK6pjv8nHINjK2ny0nQ3iSCF9GTm3DJEKzv5BgbHYMLl5At3VWHi0oln72+2
l6JCNim48XIs8o4KzUplM0FCeOig4H+lqClhM95NG4cUGVu7PZLSUN3OtjNs
L0F3fFSX2Uoc2B07XeOZ5BCzeMVzqLYYZ/Uom7RHvsK9M+E37ZgS/GL7zKj6
i/DAyoEy92c8rihU6zpSqOIjc8LbvoFCsGgbmDLcSoRxfIwba6wqlOTjR6ub
CyBQF3K6KyAJnPkhVoFDKqAaM9R/U5wPZ2NjSun4ZFBYzjBbnFCG6AT5qY9R
eSDznb+pXJICurz+NDeXWxD0nTlV6J2LuqPJbLfWUyGm7dSxQSsLaw8TFTnP
HHzpcArbm5aGhfCavIIjV0DBVhqwKzobxa/NSBKepkPAVbhhSkQcX6XjVW+d
zoLhgyXbFapMkHTmL3b5V0m6ZROFxcaZeBT2dDWkOBMqSpee0lNyElXBGq4N
bzNQo7tuL62cBRlJlZAjiUKE8BGFebmodMi8vevl3ZGFK/YfDmZZSBC+xU+d
D6enIeLo0Zs6t7Nx7vKX151aUkSFxEW1IotUqHVwT70YyMbzCZFIW0tp4obK
87MPPJOhc5z2MrttDoZaJtVqUqQJVsu/D8mqEyG3eNLhMFsukrI2NQ3PSRMy
+7LFOS8k4HREzljoaC7cn/z9V0giRfxYpOmUX/yKqdP7fKsz89DP+Lzr910J
4kXMXW/73jjA6dAPDp98nFq81i7qIUIoUR67zNkQg7xg2hgjxULwp4k9i444
TdwU+Z4tXBUN4ROXH0WyFkHmzhIX69JhYmdkcjbrorBtfOKS6UoRSgtEH0m4
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
e/ke21N1IkzkG3VYawrubHNzH3Qaw3N2rpVPl7WIQ877igjaFEzdz2Su2xxD
gWa49z57HSIxXs/cQCYZ3vZOkfccx+HpIMvK6a1HmB6ch/fTJMSotB3gYJhA
e9rQrywtfcLjcXoctVUiUgIDntAVTiA80bEhptKA0Gc+WXnvZQL6C24NcahP
4thqo5Wx4zOCtk3j933zeJCeqjx+iGQKPu36989oPiMuuDAQRTZxuH4uKko9
cArn+QuaZFgNCAd+2fG837GY2nvTYYthGoZUaT+3pvQI6vvduYL8cTBJOG59
5tM0mF8t1xyX1iYUJec4o0XjQTJyRnh2axqHp74/FphWIWzGakfvHk0EL90p
Oe/3M9BbSvZYYhclLuyeiLhRlox9thoedzhnYebMlftf4F3oc5Rob1ek4XJC
M9+PuVlsFnvqRpGa4JPbE34q40yElB7kTMuYQ86GomnQEXtYKlgsaHLkYuFx
rbWLxTyuklK1UaZ8xlFpk5J9MkUgxVop04kFWL+1HVbn9IEO+b3ZMx/K0LEp
Kj3ovwC9iKqzV46E4WSu3Y2IwSrMBfi8a9nJY46amsw/BmLxz+b+k8ZnDWjs
/rPgULszP3H08ZhxOm7SxPCZUrWhP9Oa0fnqAp6Nu4H0Qx68imUP2Od2gpXm
5l1qyXm858219VIvRUDDgJqLTi+K2Xj5klZnUWgYct7ErBJlLFbHP3YNgN05
zcuCdwZ3cpQHyq1qoONytOt81zBo3ALb1jonsWf5tJYUaiG4d/t6h8Uo9px7
u/1DZBzCUi02OYrV+Jav3dlFNYbfW8ZXj1uOYL9qVghpdzmmdSVfjt0fQ4kX
12vf9n645B5Y//OoBJvXn4r/2BkfOcBipz7djX1JBxr+0OZBb1z9VjP1GG7J
GJDcq+zAE5soUveUDHhtbyS6hYyiyZR7wV+kDT0Zv+94cichIe71EfrDo/Az
Ck4vNG5G9/ybOw/oosH2cN58YHkY2xdDR+6cb8D9e3dJYh1CsXnwXaN36RBC
JYutnnrXYrckyzVdTz8IWrDuP+48iLgvWkIMttUIOdXPN/XUY4cjb+3tUBhA
loSvV35yJY6yyvz2PvsRx4/3ZD+j7IfYWhdNCHkF1o8cN1xRewP6YZVywawd
/XrlFav8oBSlk9WCKnc0sMvPQf97ZjfCK0qEe/cQOF2sLFkccgNuroMZT0q6
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
yN0sFR+YgKvufRqVJiXYUd2lVfN7i9Muq0FHLk1CTWh81m0FiFbmH3kTGYt7
r8fs3EYnMeadsjvEQRmZE9oKf+bjQN7HhhqXKaiq+h1VoigjOZY0zCbwDhes
p12nBKZhIKyWf7FGGVOp0sc+OiXA7oYzk23rNNILbreU3VbGS/6xPtnl9xg5
pGlq4zwDHY8ASQtd4Hd11ebv4CTkTNs+OsczC2tPZX8F1ZP4MHbrT4dJCmRm
DE7MFc5CLLfDIsrkBCbMDCarbqfCyXKWW1ZxDsvcv/mGuk5gxfz2x438dHDl
p/a5kuYwx9XZPp4CtAcLBu86n4nyCJ8dPjzzWG9R9Lwmr4bfnf5X6nWyIWrJ
Gr+WPA9DG/eNQGhitCWr7696LgaPuxkMnl5Ad7lCgmHbOQgJpcgKROZDc/hn
iNDaAri+OurpBOhCOY52h+atInhJMz/7nvIJEiFSJeRZPYhmRxyuqSvFbdo7
BnbnFuEX5ttDKdTHO47WAmKAwH3veDuiYxG0z+nlzRcM8drkdVSvUSVGc3vZ
Px5aglz8erDb6C20Z1dxnLtdg7PkpQ8eyktguipcxu1iD7dRb/nDtA0Ijzqo
r7XlQYrLoQycBu4gKzTwXWBrQcv8Rs/VwUUcUhioCtzuh8Nq+Q0W5e3oCzei
dtRbxPvHmUtFfKHQFqtg2cfeBatyndaVe58Q8Df6te9IJLbzuEv6evRA/JaD
5b90C3Baai1v6Y2F5ofsDl1SH+wLVEbuC8/hl7VzFQdLHBKti1PYPAdAacus
Cfg7DdXgjBfeVdFYe9OXuPptECqNZiam1ZM4JEiIzT6PgI6mVETZzBByhrTN
25PH0e87LhZD9wosMic1h04Po7eQZERjNYq42AdG30/4IcYuIEN59zAMpvnJ
C41DGNtQtE09YAHGPamzsrZDiO/lVGN81w/6+qKzf+46E22bLF8/vBrEuD7/
McGxHqTLab4odPAnpBL9g6deDeCsWMTLuqddW/1aYqOxGkL4MIj2lj7uR2LR
TikTrw5Mcx3Y62EWTkjKHJGx0+yDa4cim0BaG5g9xwNvuEUQwlL/nVnb1ouE
rzvLKa3NcNxLI+7qEklMH+CdCirvRqyXGGOIciM2W8UW792OJHI8XzvLbu33
bkryk/vXOqjS/5yMs4ogeB/N+K9e60T2wnKP1EIN/JSVb5nVhBN0ChzHZtU6
YPAv3fFbx6sh/2Rs9mH5K0Jn/a0os3Q7qH2jor8WV+IlJanqqnEI4RBS+C3M
qBUPnrv+fhBLAT2t4qZbTCDxVYtliWTVjH1zBQ+TGyoQcyz93vQxPyKIJf/h
mbeNiF3bvXGGqwJSTLXFrQ7PiCscyyfiaLbuVRVNB/cmGQU5k872mq4ES/4/
A9e35vErhsBwXXoyNgPOMj4QsSMKspRqmF7VQus8temee+UYthK3Ddc0IUJM
3o7dj6vB+NHP16NvlOOSh/WuihwBjCwnRKmUVsPSQ1+7f6Ycale667M6jcHN
Q9p4/qkKK7RDa0gio2pamH1h8zYMw/hfpolWoe0H86PeVAJymnc3WD/aoEHd
7QnJuxJ/K3yj2h9WgHGkmuNrqD06AlODS/9S8OJ6lHuRJAXfUJ3GKu2IPdT+
VzjDKGAXT/hu/5OCdd3caM8sR8AjVQGntviJgWzDVFKJ1OdXswd+OmCPxfn3
Vn8qMLxdcVnRtgpauy5ulPLZY6yTfkM7ugIr38ZW7vNXw6W+dvK7kQ0s1aTJ
kQcrQDJ+bB+UVY3TlM7MF6JWqGVoGJ9WJfBF9aij+8EanD9lGu102gyeD6vG
LLjI+J6aPV76tgZypyL0Svqu4mlT72Ha0TL4sadsqh2oRWrx9V0aIhpwinLL
EnIv+f+7yonMHnWQy8vrVfl2hjBobppQtywG/XvVs9la9bgYbV/I/uEKcef5
5eAsvSKke8f6vWFvgINyDnlB1oSYY39X/+RgISSSGW4kdTXAv9wvlEfajGD2
HR337MrH3UzzXD3XRrjdnIpz8jAnBA6Eipc65WEz41e6Ol8TaE2swnJtzQk+
6vRKcbZcXOng/xjd1AQiXcl5m6EZIej63+6ewmykei9I8AQ2g5tPOP3m0xuE
i6r09zsOWbgza3Ap5n4LTAce1FnxGRNfJEMshMoyIOtRFn/SuhUCko8/n1O4
StCZdr18R0dCUsH6GvOTNmg8qC9LfqxLHFboTLjdmYYfVpzZfy+0g3fvTy0h
eXXiyUNnmTc0afCNIH/lnGrHxrNvw2+89xP/AxRCRSY=
      "]]}},
   Axes->True,
   AxesLabel->{
     FormBox[
     "\"|\\!\\(\\*SubscriptBox[\\(z\\), \\(1\\)]\\)|\"", TraditionalForm], 
     FormBox[
     "\"|\\!\\(\\*SubscriptBox[\\(z\\), \\(2\\)]\\)|\"", TraditionalForm], 
     FormBox["\"w\"", TraditionalForm]},
   BoxRatios->{1, 1, 1},
   PlotRange->{All, All, All},
   PlotRangePadding->{Automatic, Automatic, Automatic}],
  DynamicModuleValues:>{}]], "Output",
 CellChangeTimes->{3.553578278961236*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Tr", "[", 
  RowBox[{"matVarSyz", "[", 
   RowBox[{
   "u", ",", "v", ",", "0", ",", "m1", ",", "m2", ",", "c1", ",", "c2", ",", 
    "a1", ",", "a2", ",", "b1", ",", "b2", ",", "e1", ",", "e2"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.552751425344307*^9, 3.552751426168195*^9}, 
   3.552752544629949*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"4", " ", "m1"}], "+", 
  RowBox[{"3", " ", "m2"}], "+", 
  RowBox[{"4", " ", "a1", " ", "u"}], "+", 
  RowBox[{"2", " ", "a2", " ", "u"}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"2", " ", "a1"}], "+", "a2"}], ")"}], " ", "u"}], "+", 
  RowBox[{"2", " ", "b1", " ", "v"}], "+", 
  RowBox[{"4", " ", "b2", " ", "v"}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"2", " ", "b1"}], "+", "b2"}], ")"}], " ", "v"}]}]], "Output",
 CellChangeTimes->{3.5535782790690002`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"GraphicsRow", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"plotPSip", "[", 
        RowBox[{
        "m1", ",", "m2", ",", "c1", ",", "c2", ",", "a1", ",", "a2", ",", 
         "b1", ",", "b2", ",", "e1", ",", "e2"}], "]"}], ",", 
       RowBox[{"Show", "[", 
        RowBox[{
         RowBox[{"ContourPlot", "[", 
          RowBox[{
           RowBox[{"Tr", "[", 
            RowBox[{"matVarSyz", "[", 
             RowBox[{"u", ",", "v", ",", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], " ", "u", " ", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"m1", "+", 
                   RowBox[{"a1", " ", "u"}], "+", 
                   RowBox[{"b1", " ", "v"}]}], ")"}], " ", "/", "c1"}]}], 
               ")"}], ",", "m1", ",", "m2", ",", "c1", ",", "c2", ",", "a1", 
              ",", "a2", ",", "b1", ",", "b2", ",", "e1", ",", "e2"}], "]"}], 
            "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"u", ",", "0.0001", ",", "umax"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"v", ",", "0.0001", ",", "vmax"}], "}"}], ",", 
           RowBox[{"FrameLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"\"\<u\>\"", ",", "\"\<v\>\""}], "}"}]}], ",", 
           RowBox[{"Contours", "\[Rule]", " ", 
            RowBox[{"{", "0", "}"}]}]}], "]"}], ",", 
         RowBox[{"ContourPlot", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"reqbEqPar", "[", 
                RowBox[{
                "u", ",", "v", ",", "m1", ",", "m2", ",", "c1", ",", "c2", 
                 ",", "a1", ",", "a2", ",", "b1", ",", "b2", ",", "e1", ",", 
                 "e2"}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "0"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"reqbEqPar", "[", 
                RowBox[{
                "u", ",", "v", ",", "m1", ",", "m2", ",", "c1", ",", "c2", 
                 ",", "a1", ",", "a2", ",", "b1", ",", "b2", ",", "e1", ",", 
                 "e2"}], "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", "0"}]}], " ", 
            RowBox[{"(*", 
             RowBox[{",", 
              RowBox[{
               RowBox[{
                RowBox[{"reqbEqPar", "[", 
                 RowBox[{
                 "u", ",", "v", ",", "m1", ",", "m2", ",", "c1", ",", "c2", 
                  ",", "a1", ",", "a2", ",", "b1", ",", "b2", ",", "e1", ",", 
                  "e2"}], "]"}], "[", 
                RowBox[{"[", "3", "]"}], "]"}], "\[Equal]", "0"}]}], "*)"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"u", ",", "0.0001", ",", "umax"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"v", ",", "0.0001", ",", "vmax"}], "}"}], ",", 
           RowBox[{"ContourStyle", "\[Rule]", " ", 
            RowBox[{"{", 
             RowBox[{"Red", ",", "Green"}], "}"}]}], " ", ",", 
           RowBox[{"FrameLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"\"\<u\>\"", ",", "\"\<v\>\""}], "}"}]}]}], "]"}], " ", 
         ",", 
         RowBox[{"Plot", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             FractionBox[
              RowBox[{
               RowBox[{"-", "4"}], 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", "a1"}], "+", "a2"}], ")"}]}], 
              RowBox[{"6", 
               RowBox[{"(", 
                RowBox[{"b1", "+", "b2"}], ")"}]}]], "u"}], "-", 
            FractionBox[
             RowBox[{
              RowBox[{"6", "m1"}], "+", 
              RowBox[{"4", "m2"}]}], 
             RowBox[{"6", 
              RowBox[{"(", 
               RowBox[{"b1", "+", "b2"}], ")"}]}]]}], ",", 
           RowBox[{"{", 
            RowBox[{"u", ",", "0", ",", "umax"}], "}"}], ",", 
           RowBox[{"Evaluate", "[", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"b1", "+", "b2"}], ">", "0"}], ",", 
               RowBox[{"Filling", "\[Rule]", " ", "Bottom"}], ",", 
               RowBox[{"Filling", "\[Rule]", "Top"}]}], "]"}], ",", 
             RowBox[{"PlotRange", "\[Rule]", " ", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", "umax"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "vmax"}], "}"}]}], "}"}]}]}], "]"}]}], 
          "]"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", " ", "600"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"m1", ",", "m1o"}], "}"}], ",", 
     RowBox[{"-", "2"}], ",", "2", ",", "0.01", ",", "manAppear"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"m2", ",", "m2o"}], "}"}], ",", 
     RowBox[{"-", "2"}], ",", "2", ",", "0.01", ",", "manAppear"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"c1", ",", "c1o"}], "}"}], ",", 
     RowBox[{"-", "1"}], ",", "1", ",", "2", ",", "manAppear"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"c2", ",", "c2o"}], "}"}], ",", 
     RowBox[{"-", "1"}], ",", "1", ",", "2", ",", "manAppear"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a1", ",", "a1o"}], "}"}], ",", 
     RowBox[{"-", "2"}], ",", "1", ",", "0.01", ",", "manAppear"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a2", ",", "a2o"}], "}"}], ",", 
     RowBox[{"-", "7"}], ",", "7", ",", "0.01", ",", "manAppear"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"b1", ",", "b1o"}], "}"}], ",", 
     RowBox[{"-", "2"}], ",", "2", ",", "0.01", ",", "manAppear"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"b2", ",", "b2o"}], "}"}], ",", 
     RowBox[{"-", "2"}], ",", "2", ",", "0.01", ",", "manAppear"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"e1", ",", "e1o"}], "}"}], ",", "0", ",", "2", ",", "0.01", ",",
      "manAppear"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"e2", ",", "e2o"}], "}"}], ",", "0", ",", "2", ",", "0.01", ",",
      "manAppear"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"umax", ",", "2"}], "}"}], ",", "0", ",", "5", ",", 
     "manAppear"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"vmax", ",", "2"}], "}"}], ",", "0", ",", "5", ",", 
     "manAppear"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.552382781167823*^9, 3.552382820070025*^9}, {
   3.552382853394147*^9, 3.5523828915290413`*^9}, {3.5523832047839746`*^9, 
   3.5523832189944563`*^9}, {3.552385651263235*^9, 3.552385706691876*^9}, {
   3.552385934788619*^9, 3.552385938030107*^9}, {3.552633774442996*^9, 
   3.552633781505261*^9}, {3.552634544854994*^9, 3.552634567313672*^9}, {
   3.55263459795553*^9, 3.552634631851671*^9}, 3.5526346989714413`*^9, 
   3.552634813920253*^9, {3.55263493092197*^9, 3.5526349519648438`*^9}, {
   3.5527509965136557`*^9, 3.552751000658885*^9}, {3.552751197720078*^9, 
   3.552751202367917*^9}, 3.552751245931971*^9, 3.552751370290097*^9, 
   3.5527515418988256`*^9, {3.552751596830122*^9, 3.55275159841253*^9}, {
   3.552752544643106*^9, 3.55275254466815*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a1$$ = -1.4, $CellContext`a2$$ = -2.18, \
$CellContext`b1$$ = 1.526, $CellContext`b2$$ = -0.1, $CellContext`c1$$ = 
    1, $CellContext`c2$$ = 1, $CellContext`e1$$ = 0, $CellContext`e2$$ = 
    1.217, $CellContext`m1$$ = -0.234, $CellContext`m2$$ = 
    0.28, $CellContext`umax$$ = 2, $CellContext`vmax$$ = 2, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`m1$$], -0.234}, -2, 2, 0.01}, {{
       Hold[$CellContext`m2$$], 0.28}, -2, 2, 0.01}, {{
       Hold[$CellContext`c1$$], 1}, -1, 1, 2}, {{
       Hold[$CellContext`c2$$], 1}, -1, 1, 2}, {{
       Hold[$CellContext`a1$$], -1.4}, -2, 1, 0.01}, {{
       Hold[$CellContext`a2$$], -2.18}, -7, 7, 0.01}, {{
       Hold[$CellContext`b1$$], 1.526}, -2, 2, 0.01}, {{
       Hold[$CellContext`b2$$], -0.1}, -2, 2, 0.01}, {{
       Hold[$CellContext`e1$$], 0}, 0, 2, 0.01}, {{
       Hold[$CellContext`e2$$], 1.217}, 0, 2, 0.01}, {{
       Hold[$CellContext`umax$$], 2}, 0, 5}, {{
       Hold[$CellContext`vmax$$], 2}, 0, 5}}, Typeset`size$$ = {
    600., {155., 158.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`m1$1631$$ = 
    0, $CellContext`m2$1632$$ = 0, $CellContext`c1$1633$$ = 
    0, $CellContext`c2$1634$$ = 0, $CellContext`a1$1635$$ = 
    0, $CellContext`a2$1636$$ = 0, $CellContext`b1$1637$$ = 
    0, $CellContext`b2$1638$$ = 0, $CellContext`e1$1639$$ = 
    0, $CellContext`e2$1640$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`a1$$ = -1.4, $CellContext`a2$$ = -2.18, \
$CellContext`b1$$ = 1.526, $CellContext`b2$$ = -0.1, $CellContext`c1$$ = 
        1, $CellContext`c2$$ = 1, $CellContext`e1$$ = 0, $CellContext`e2$$ = 
        1.217, $CellContext`m1$$ = -0.234, $CellContext`m2$$ = 
        0.28, $CellContext`umax$$ = 2, $CellContext`vmax$$ = 2}, 
      "ControllerVariables" :> {
        Hold[$CellContext`m1$$, $CellContext`m1$1631$$, 0], 
        Hold[$CellContext`m2$$, $CellContext`m2$1632$$, 0], 
        Hold[$CellContext`c1$$, $CellContext`c1$1633$$, 0], 
        Hold[$CellContext`c2$$, $CellContext`c2$1634$$, 0], 
        Hold[$CellContext`a1$$, $CellContext`a1$1635$$, 0], 
        Hold[$CellContext`a2$$, $CellContext`a2$1636$$, 0], 
        Hold[$CellContext`b1$$, $CellContext`b1$1637$$, 0], 
        Hold[$CellContext`b2$$, $CellContext`b2$1638$$, 0], 
        Hold[$CellContext`e1$$, $CellContext`e1$1639$$, 0], 
        Hold[$CellContext`e2$$, $CellContext`e2$1640$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> GraphicsRow[{
         $CellContext`plotPSip[$CellContext`m1$$, $CellContext`m2$$, \
$CellContext`c1$$, $CellContext`c2$$, $CellContext`a1$$, $CellContext`a2$$, \
$CellContext`b1$$, $CellContext`b2$$, $CellContext`e1$$, $CellContext`e2$$], 
         Show[
          ContourPlot[
           Tr[
            $CellContext`matVarSyz[$CellContext`u, $CellContext`v, (-2) \
$CellContext`u (($CellContext`m1$$ + $CellContext`a1$$ $CellContext`u + \
$CellContext`b1$$ $CellContext`v)/$CellContext`c1$$), $CellContext`m1$$, \
$CellContext`m2$$, $CellContext`c1$$, $CellContext`c2$$, $CellContext`a1$$, \
$CellContext`a2$$, $CellContext`b1$$, $CellContext`b2$$, $CellContext`e1$$, \
$CellContext`e2$$]], {$CellContext`u, 
            0.0001, $CellContext`umax$$}, {$CellContext`v, 
            0.0001, $CellContext`vmax$$}, FrameLabel -> {"u", "v"}, 
           Contours -> {0}], 
          ContourPlot[{Part[
              $CellContext`reqbEqPar[$CellContext`u, $CellContext`v, \
$CellContext`m1$$, $CellContext`m2$$, $CellContext`c1$$, $CellContext`c2$$, \
$CellContext`a1$$, $CellContext`a2$$, $CellContext`b1$$, $CellContext`b2$$, \
$CellContext`e1$$, $CellContext`e2$$], 1] == 0, Part[
              $CellContext`reqbEqPar[$CellContext`u, $CellContext`v, \
$CellContext`m1$$, $CellContext`m2$$, $CellContext`c1$$, $CellContext`c2$$, \
$CellContext`a1$$, $CellContext`a2$$, $CellContext`b1$$, $CellContext`b2$$, \
$CellContext`e1$$, $CellContext`e2$$], 2] == 0}, {$CellContext`u, 
            0.0001, $CellContext`umax$$}, {$CellContext`v, 
            0.0001, $CellContext`vmax$$}, ContourStyle -> {Red, Green}, 
           FrameLabel -> {"u", "v"}], 
          
          Plot[((-4) (2 $CellContext`a1$$ + $CellContext`a2$$)/(
             6 ($CellContext`b1$$ + $CellContext`b2$$))) $CellContext`u - (
            6 $CellContext`m1$$ + 4 $CellContext`m2$$)/(
           6 ($CellContext`b1$$ + $CellContext`b2$$)), {$CellContext`u, 
            0, $CellContext`umax$$}, 
           Evaluate[
            
            If[$CellContext`b1$$ + $CellContext`b2$$ > 0, Filling -> Bottom, 
             Filling -> Top], 
            PlotRange -> {{0, $CellContext`umax$$}, {
              0, $CellContext`vmax$$}}]]]}, ImageSize -> 600], 
      "Specifications" :> {{{$CellContext`m1$$, -0.234}, -2, 2, 0.01, 
         Appearance -> "Open"}, {{$CellContext`m2$$, 0.28}, -2, 2, 0.01, 
         Appearance -> "Open"}, {{$CellContext`c1$$, 1}, -1, 1, 2, Appearance -> 
         "Open"}, {{$CellContext`c2$$, 1}, -1, 1, 2, Appearance -> 
         "Open"}, {{$CellContext`a1$$, -1.4}, -2, 1, 0.01, Appearance -> 
         "Open"}, {{$CellContext`a2$$, -2.18}, -7, 7, 0.01, Appearance -> 
         "Open"}, {{$CellContext`b1$$, 1.526}, -2, 2, 0.01, Appearance -> 
         "Open"}, {{$CellContext`b2$$, -0.1}, -2, 2, 0.01, Appearance -> 
         "Open"}, {{$CellContext`e1$$, 0}, 0, 2, 0.01, Appearance -> 
         "Open"}, {{$CellContext`e2$$, 1.217}, 0, 2, 0.01, Appearance -> 
         "Open"}, {{$CellContext`umax$$, 2}, 0, 5, Appearance -> 
         "Open"}, {{$CellContext`vmax$$, 2}, 0, 5, Appearance -> "Open"}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{906., {308., 313.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.553578279652811*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\"\<Limit cycle and 2 equilibria\>\"", "\[RuleDelayed]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a1", "=", 
      RowBox[{"-", "0.9199999999999999`"}]}], ",", 
     RowBox[{"a2", "=", 
      RowBox[{"-", "5.21`"}]}], ",", 
     RowBox[{"b1", "=", "1.606`"}], ",", 
     RowBox[{"b2", "=", "0.029999999999999992`"}], ",", 
     RowBox[{"c1", "=", "1"}], ",", 
     RowBox[{"c2", "=", "1"}], ",", 
     RowBox[{"e2", "=", "1.217`"}], ",", 
     RowBox[{"m1", "=", 
      RowBox[{"-", "0.21`"}]}], ",", 
     RowBox[{"m2", "=", "0.6459`"}], ",", 
     RowBox[{"umax", "=", "2"}], ",", 
     RowBox[{"vmax", "=", "2"}]}], "}"}]}], "}"}]], "Input",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.552387120227466*^9, {3.552387397244564*^9, 3.5523874111334743`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Limit cycle and 2 equilibria\"\>", "\[RuleDelayed]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a1", "=", 
      RowBox[{"-", "0.9199999999999999`"}]}], ",", 
     RowBox[{"a2", "=", 
      RowBox[{"-", "5.21`"}]}], ",", 
     RowBox[{"b1", "=", "1.606`"}], ",", 
     RowBox[{"b2", "=", "0.029999999999999992`"}], ",", 
     RowBox[{"c1", "=", "1"}], ",", 
     RowBox[{"c2", "=", "1"}], ",", 
     RowBox[{"e2", "=", "1.217`"}], ",", 
     RowBox[{"m1", "=", 
      RowBox[{"-", "0.21`"}]}], ",", 
     RowBox[{"m2", "=", "0.6459`"}], ",", 
     RowBox[{"umax", "=", "2"}], ",", 
     RowBox[{"vmax", "=", "2"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.553578279662121*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"Tr", "[", 
   RowBox[{"matVar", "[", 
    RowBox[{
    "u", ",", "v", ",", "w", ",", "q", ",", "m1", ",", "m2", ",", "c1", ",", 
     "c2", ",", "a1", ",", "a2", ",", "b1", ",", "b2", ",", "e1", ",", "e2"}],
     "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.552385379774076*^9, 3.5523854547478027`*^9}, 
   3.552752544771955*^9, {3.5534226713454447`*^9, 3.5534226723807364`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"6", " ", "m1"}], "+", 
  RowBox[{"4", " ", "m2"}], "+", 
  RowBox[{"8", " ", "a1", " ", "u"}], "+", 
  RowBox[{"4", " ", "a2", " ", "u"}], "+", 
  RowBox[{"6", " ", "b1", " ", "v"}], "+", 
  RowBox[{"6", " ", "b2", " ", "v"}]}]], "Output",
 CellChangeTimes->{3.553578279675*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"reqbPar", "[", 
  RowBox[{
  "m1o", ",", "m2o", ",", "c1o", ",", "c2o", ",", "a1o", ",", "a2o", ",", 
   "b1o", ",", "b2o", ",", "e1o", ",", "e2o"}], "]"}]], "Input",
 CellChangeTimes->{{3.5527520202137423`*^9, 3.5527520357013187`*^9}, {
  3.552752272884582*^9, 3.5527522796917667`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.07579993952897586`", ",", "0.5031983302089911`", ",", 
     RowBox[{"-", "0.06484847592798684`"}], ",", "0.08578719329629873`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.313904601392976`", ",", "0.23317132096568116`", ",", 
     "0.19942171370247982`", ",", "0.22832903749040775`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.55357828025845*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"m1", "=", "m1o"}], ",", 
     RowBox[{"m2", "=", "m2o"}], ",", 
     RowBox[{"c1", "=", "c1o"}], ",", 
     RowBox[{"c2", "=", "c2o"}], ",", 
     RowBox[{"a1", "=", "a1o"}], ",", 
     RowBox[{"b1", "=", "b1o"}], ",", 
     RowBox[{"a2", "=", "a2o"}], ",", 
     RowBox[{"b2", "=", "b2o"}], ",", 
     RowBox[{"e1", "=", "e1o"}], ",", 
     RowBox[{"e2", "=", "e2o"}]}], "}"}], ",", 
   RowBox[{"reqbPar", "[", 
    RowBox[{
    "m1", ",", "m2", ",", "c1", ",", "c2", ",", "a1", ",", "a2", ",", "b1", 
     ",", "b2", ",", "e1", ",", "e2"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.552752251785783*^9, 3.552752254191708*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.07579993952897586`", ",", "0.5031983302089911`", ",", 
     RowBox[{"-", "0.06484847592798684`"}], ",", "0.08578719329629873`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.313904601392976`", ",", "0.23317132096568116`", ",", 
     "0.19942171370247982`", ",", "0.22832903749040775`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.553578280434403*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"m1", "=", "m1o"}], ",", 
     RowBox[{"m2", "=", "m2o"}], ",", 
     RowBox[{"c1", "=", "c1o"}], ",", 
     RowBox[{"c2", "=", "c2o"}], ",", 
     RowBox[{"a1", "=", "a1o"}], ",", 
     RowBox[{"b1", "=", "b1o"}], ",", 
     RowBox[{"a2", "=", "a2o"}], ",", 
     RowBox[{"b2", "=", "b2o"}], ",", 
     RowBox[{"e1", "=", "e1o"}], ",", 
     RowBox[{"e2", "=", "e2o"}]}], "}"}], ",", " ", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"reqbEil", "[", 
       RowBox[{
       "#", ",", "m1", ",", "m2", ",", "c1", ",", "c2", ",", "a1", ",", "a2", 
        ",", "b1", ",", "b2", ",", "e1", ",", "e2"}], "]"}], "&"}], ",", 
     RowBox[{"reqbPar", "[", 
      RowBox[{
      "m1", ",", "m2", ",", "c1", ",", "c2", ",", "a1", ",", "a2", ",", "b1", 
       ",", "b2", ",", "e1", ",", "e2"}], "]"}], ",", "1"}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.5527521211130447`*^9, 3.552752197671175*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1.8399155438452865`", ",", "0.8720336441789193`", ",", 
     RowBox[{
      RowBox[{"-", "0.10025953508663721`"}], "+", 
      RowBox[{"0.5169382559237929`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{
      RowBox[{"-", "0.10025953508663721`"}], "-", 
      RowBox[{"0.5169382559237929`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2.1258463508926013`"}], ",", 
     RowBox[{
      RowBox[{"-", "1.1123002250547644`"}], "+", 
      RowBox[{"0.4977658011684802`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{
      RowBox[{"-", "1.1123002250547644`"}], "-", 
      RowBox[{"0.4977658011684802`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"-", "0.1915190365635851`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.553578280602996*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"m1", "=", "m1o"}], ",", 
     RowBox[{"m2", "=", "m2o"}], ",", 
     RowBox[{"c1", "=", "c1o"}], ",", 
     RowBox[{"c2", "=", "c2o"}], ",", 
     RowBox[{"a1", "=", "a1o"}], ",", 
     RowBox[{"b1", "=", "b1o"}], ",", 
     RowBox[{"a2", "=", "a2o"}], ",", 
     RowBox[{"b2", "=", "b2o"}], ",", 
     RowBox[{"e1", "=", "e1o"}], ",", 
     RowBox[{"e2", "=", "e2o"}]}], "}"}], ",", " ", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"reqbEilSyz", "[", 
       RowBox[{
       "#", ",", "m1", ",", "m2", ",", "c1", ",", "c2", ",", "a1", ",", "a2", 
        ",", "b1", ",", "b2", ",", "e1", ",", "e2"}], "]"}], "&"}], ",", 
     RowBox[{"reqbPar", "[", 
      RowBox[{
      "m1", ",", "m2", ",", "c1", ",", "c2", ",", "a1", ",", "a2", ",", "b1", 
       ",", "b2", ",", "e1", ",", "e2"}], "]"}], ",", "1"}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.552752862611267*^9, 3.552752863200118*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.8720336441789192`", ",", 
     RowBox[{
      RowBox[{"-", "0.1002595350866369`"}], "+", 
      RowBox[{"0.5169382559237926`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{
      RowBox[{"-", "0.1002595350866369`"}], "-", 
      RowBox[{"0.5169382559237926`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "1.1123002250547014`"}], "+", 
      RowBox[{"0.49776580116852664`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{
      RowBox[{"-", "1.1123002250547014`"}], "-", 
      RowBox[{"0.49776580116852664`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"-", "0.19151903656354424`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.5535782806769323`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"m1", "=", "m1o"}], ",", 
     RowBox[{"m2", "=", "m2o"}], ",", 
     RowBox[{"c1", "=", "c1o"}], ",", 
     RowBox[{"c2", "=", "c2o"}], ",", 
     RowBox[{"a1", "=", "a1o"}], ",", 
     RowBox[{"b1", "=", "b1o"}], ",", 
     RowBox[{"a2", "=", "a2o"}], ",", 
     RowBox[{"b2", "=", "b2o"}], ",", 
     RowBox[{"e1", "=", "e1o"}], ",", 
     RowBox[{"e2", "=", "e2o"}]}], "}"}], ",", " ", 
   RowBox[{"reqbPar", "[", 
    RowBox[{
    "m1", ",", "m2", ",", "c1", ",", "c2", ",", "a1", ",", "a2", ",", "b1", 
     ",", "b2", ",", "e1", ",", "e2"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.553583782534457*^9, 3.553583809930587*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.07579993952897586`", ",", "0.5031983302089911`", ",", 
     RowBox[{"-", "0.06484847592798684`"}], ",", "0.08578719329629873`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.313904601392976`", ",", "0.23317132096568116`", ",", 
     "0.19942171370247982`", ",", "0.22832903749040775`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.55358379060422*^9, 3.553583810505412*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"m1", "=", "m1o"}], ",", 
     RowBox[{"m2", "=", "m2o"}], ",", 
     RowBox[{"c1", "=", "c1o"}], ",", 
     RowBox[{"c2", "=", "c2o"}], ",", 
     RowBox[{"a1", "=", "a1o"}], ",", 
     RowBox[{"b1", "=", "b1o"}], ",", 
     RowBox[{"a2", "=", "a2o"}], ",", 
     RowBox[{"b2", "=", "b2o"}], ",", 
     RowBox[{"e1", "=", "e1o"}], ",", 
     RowBox[{"e2", "=", "e2o"}]}], "}"}], ",", " ", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"reqbEilCart", "[", 
       RowBox[{
       "#", ",", "m1", ",", "m2", ",", "c1", ",", "c2", ",", "a1", ",", "a2", 
        ",", "b1", ",", "b2", ",", "e1", ",", "e2"}], "]"}], "&"}], ",", 
     RowBox[{"Map", "[", 
      RowBox[{"reqbPol2cart", ",", 
       RowBox[{"reqbPar", "[", 
        RowBox[{
        "m1", ",", "m2", ",", "c1", ",", "c2", ",", "a1", ",", "a2", ",", 
         "b1", ",", "b2", ",", "e1", ",", "e2"}], "]"}], ",", "1"}], "]"}], 
     ",", "1"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5535835046584272`*^9, 3.5535835522989492`*^9}, {
  3.5535838430181103`*^9, 3.5535838478274612`*^9}, {3.553583908331439*^9, 
  3.553583908927719*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1.5109940769636188`", ",", 
     RowBox[{
      RowBox[{"-", "0.17722094845571107`"}], "+", 
      RowBox[{"1.421564745785313`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{
      RowBox[{"-", "0.17722094845571107`"}], "-", 
      RowBox[{"1.421564745785313`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"-", "0.12107756435028204`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "1.044103099914905`"}], "+", 
      RowBox[{"1.2955500320613895`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{
      RowBox[{"-", "1.044103099914905`"}], "-", 
      RowBox[{"1.2955500320613895`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"-", "0.853008725278645`"}], ",", "0.6082941943971883`"}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.553583553846837*^9, 3.553583913229639*^9, {3.553586231178822*^9, 
   3.553586254853003*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"matVarCart", "[", 
    RowBox[{
    "x1", ",", "y1", ",", "x2", ",", "y2", ",", "m1", ",", "m2", ",", "c1", 
     ",", "c2", ",", "a1", ",", "a2", ",", "b1", ",", "b2", ",", "e1", ",", 
     "e2"}], "]"}], "//", "TableForm"}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.5535844401403027`*^9, 3.5535844534702063`*^9}, {
  3.5535855262198067`*^9, 3.553585543480364*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{"m1", "+", 
      RowBox[{"x2", " ", 
       RowBox[{"(", 
        RowBox[{"c1", "+", 
         RowBox[{"b1", " ", "x2"}]}], ")"}]}], "+", 
      RowBox[{"a1", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"3", " ", 
          SuperscriptBox["x1", "2"]}], "+", 
         SuperscriptBox["y1", "2"]}], ")"}]}], "+", 
      RowBox[{"b1", " ", 
       SuperscriptBox["y2", "2"]}]}], 
     RowBox[{"e1", "+", 
      RowBox[{"2", " ", "a1", " ", "x1", " ", "y1"}], "+", 
      RowBox[{"c1", " ", "y2"}]}], 
     RowBox[{"x1", " ", 
      RowBox[{"(", 
       RowBox[{"c1", "+", 
        RowBox[{"2", " ", "b1", " ", "x2"}]}], ")"}]}], 
     RowBox[{
      RowBox[{"c1", " ", "y1"}], "+", 
      RowBox[{"2", " ", "b1", " ", "x1", " ", "y2"}]}]},
    {
     RowBox[{
      RowBox[{"-", "e1"}], "+", 
      RowBox[{"2", " ", "a1", " ", "x1", " ", "y1"}], "+", 
      RowBox[{"c1", " ", "y2"}]}], 
     RowBox[{"m1", "-", 
      RowBox[{"c1", " ", "x2"}], "+", 
      RowBox[{"a1", " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["x1", "2"], "+", 
         RowBox[{"3", " ", 
          SuperscriptBox["y1", "2"]}]}], ")"}]}], "+", 
      RowBox[{"b1", " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["x2", "2"], "+", 
         SuperscriptBox["y2", "2"]}], ")"}]}]}], 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{"c1", "-", 
         RowBox[{"2", " ", "b1", " ", "x2"}]}], ")"}]}], " ", "y1"}], 
     RowBox[{
      RowBox[{"c1", " ", "x1"}], "+", 
      RowBox[{"2", " ", "b1", " ", "y1", " ", "y2"}]}]},
    {
     RowBox[{"2", " ", "x1", " ", 
      RowBox[{"(", 
       RowBox[{"c2", "+", 
        RowBox[{"a2", " ", "x2"}]}], ")"}]}], 
     RowBox[{
      RowBox[{"-", "2"}], " ", 
      RowBox[{"(", 
       RowBox[{"c2", "-", 
        RowBox[{"a2", " ", "x2"}]}], ")"}], " ", "y1"}], 
     RowBox[{"m2", "+", 
      RowBox[{"a2", " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["x1", "2"], "+", 
         SuperscriptBox["y1", "2"]}], ")"}]}], "+", 
      RowBox[{"b2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"3", " ", 
          SuperscriptBox["x2", "2"]}], "+", 
         SuperscriptBox["y2", "2"]}], ")"}]}]}], 
     RowBox[{"e2", "+", 
      RowBox[{"2", " ", "b2", " ", "x2", " ", "y2"}]}]},
    {
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"c2", " ", "y1"}], "+", 
        RowBox[{"a2", " ", "x1", " ", "y2"}]}], ")"}]}], 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"c2", " ", "x1"}], "+", 
        RowBox[{"a2", " ", "y1", " ", "y2"}]}], ")"}]}], 
     RowBox[{
      RowBox[{"-", "e2"}], "+", 
      RowBox[{"2", " ", "b2", " ", "x2", " ", "y2"}]}], 
     RowBox[{"m2", "+", 
      RowBox[{"a2", " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["x1", "2"], "+", 
         SuperscriptBox["y1", "2"]}], ")"}]}], "+", 
      RowBox[{"b2", " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["x2", "2"], "+", 
         RowBox[{"3", " ", 
          SuperscriptBox["y2", "2"]}]}], ")"}]}]}]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.553584453919363*^9, {3.553585531451902*^9, 3.553585544911736*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"matVarCart", "[", 
    RowBox[{
    "x1", ",", "y1", ",", "x2", ",", "y2", ",", "m1", ",", "m2", ",", "c1", 
     ",", "c2", ",", "a1", ",", "a2", ",", "b1", ",", "b2", ",", "e1", ",", 
     "e2"}], "]"}], "//", "Tr"}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.553584466239584*^9, 3.553584482011278*^9}}],

Cell[BoxData[
 RowBox[{"2", " ", 
  RowBox[{"(", 
   RowBox[{"m1", "+", "m2", "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", "a1"}], "+", "a2"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["x1", "2"], "+", 
       SuperscriptBox["y1", "2"]}], ")"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"b1", "+", 
       RowBox[{"2", " ", "b2"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["x2", "2"], "+", 
       SuperscriptBox["y2", "2"]}], ")"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.553584467325489*^9, 3.553584483866037*^9}}]
}, Open  ]]
},
WindowSize->{1280, 753},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
ShowSelection->True,
FrontEndVersion->"8.0 for Linux x86 (64-bit) (October 10, 2011)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[557, 20, 115, 1, 30, "Text"],
Cell[675, 23, 473, 14, 30, "Text"],
Cell[1151, 39, 138, 2, 30, "Input"],
Cell[1292, 43, 113, 1, 30, "Text"],
Cell[1408, 46, 196, 4, 30, "Input"],
Cell[1607, 52, 182, 2, 30, "Text"],
Cell[1792, 56, 1372, 31, 50, "Input"],
Cell[3167, 89, 1240, 31, 69, "Input"],
Cell[4410, 122, 723, 21, 30, "Input"],
Cell[5136, 145, 782, 22, 50, "Input"],
Cell[5921, 169, 824, 23, 50, "Input"],
Cell[6748, 194, 852, 25, 30, "Input"],
Cell[7603, 221, 1282, 33, 50, "Input"],
Cell[8888, 256, 384, 11, 30, "Text"],
Cell[9275, 269, 4572, 112, 155, "Input"],
Cell[13850, 383, 205, 4, 30, "Text"],
Cell[14058, 389, 4237, 107, 174, "Input"],
Cell[18298, 498, 210, 4, 30, "Text"],
Cell[18511, 504, 4722, 121, 181, "Input"],
Cell[23236, 627, 133, 1, 30, "Text"],
Cell[23372, 630, 2273, 70, 92, "Input"],
Cell[25648, 702, 119, 1, 30, "Text"],
Cell[25770, 705, 1050, 26, 50, "Input"],
Cell[26823, 733, 1555, 47, 50, "Input"],
Cell[28381, 782, 958, 26, 50, "Input"],
Cell[29342, 810, 3442, 97, 131, "Input"],
Cell[32787, 909, 917, 24, 50, "Input"],
Cell[33707, 935, 242, 5, 30, "Text"],
Cell[33952, 942, 1459, 30, 50, "Input"],
Cell[35414, 974, 1002, 23, 50, "Input"],
Cell[36419, 999, 1142, 26, 50, "Input"],
Cell[37564, 1027, 556, 14, 32, "Text"],
Cell[38123, 1043, 2633, 72, 95, "Input"],
Cell[40759, 1117, 136, 1, 30, "Text"],
Cell[40898, 1120, 4064, 109, 126, "Input"],
Cell[44965, 1231, 436, 8, 49, "Text"],
Cell[45404, 1241, 5936, 150, 157, "Input"],
Cell[51343, 1393, 460, 8, 30, "Text"],
Cell[CellGroupData[{
Cell[51828, 1405, 8571, 218, 257, "Input"],
Cell[60402, 1625, 5880, 106, 638, "Output"]
}, Open  ]],
Cell[66297, 1734, 1717, 44, 99, "Input"],
Cell[68017, 1780, 1822, 53, 99, "Input"],
Cell[69842, 1835, 276, 5, 30, "Text"],
Cell[70121, 1842, 4581, 103, 202, "Input"],
Cell[74705, 1947, 4699, 113, 279, "Input"],
Cell[79407, 2062, 246, 6, 30, "Input"],
Cell[CellGroupData[{
Cell[79678, 2072, 2170, 61, 69, "Input"],
Cell[81851, 2135, 4116, 73, 540, "Output"]
}, Open  ]],
Cell[85982, 2211, 196, 4, 30, "Input"],
Cell[CellGroupData[{
Cell[86203, 2219, 2539, 70, 88, "Input"],
Cell[88745, 2291, 4219, 73, 540, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[93001, 2369, 858, 24, 50, "Input"],
Cell[93862, 2395, 96060, 1581, 394, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[189959, 3981, 858, 25, 50, "Input"],
Cell[190820, 4008, 93419, 1537, 395, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[284276, 5550, 339, 8, 30, "Input"],
Cell[284618, 5560, 538, 16, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[285193, 5581, 7615, 195, 303, "Input"],
Cell[292811, 5778, 6561, 115, 638, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[299409, 5898, 831, 22, 50, "Input"],
Cell[300243, 5922, 731, 19, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[301011, 5946, 439, 9, 30, "Input"],
Cell[301453, 5957, 313, 8, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[301803, 5970, 311, 6, 30, "Input"],
Cell[302117, 5978, 441, 12, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[302595, 5995, 726, 19, 30, "Input"],
Cell[303324, 6016, 442, 12, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[303803, 6033, 1014, 27, 50, "Input"],
Cell[304820, 6062, 861, 21, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[305718, 6088, 1015, 27, 50, "Input"],
Cell[306736, 6117, 787, 20, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[307560, 6142, 731, 19, 30, "Input"],
Cell[308294, 6163, 465, 12, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[308796, 6180, 1214, 31, 50, "Input"],
Cell[310013, 6213, 937, 24, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[310987, 6242, 428, 9, 30, "Input"],
Cell[311418, 6253, 3728, 116, 117, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[315183, 6374, 366, 8, 30, "Input"],
Cell[315552, 6384, 627, 20, 34, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
