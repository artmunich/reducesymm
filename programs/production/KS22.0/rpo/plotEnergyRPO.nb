(************** Content-type: application/mathematica **************
                     CreatedBy='Mathematica 5.0'

                    Mathematica-Compatible Notebook

This notebook can be used with any Mathematica-compatible
application, such as Mathematica, MathReader or Publicon. The data
for the notebook starts with the line containing stars above.

To get the notebook into a Mathematica-compatible application, do
one of the following:

* Save the data starting with the line of stars above into a file
  with a name ending in .nb, then open the file inside the
  application;

* Copy the data starting with the line of stars above to the
  clipboard, then use the Paste menu command inside the application.

Data for notebooks contains only printable 7-bit ASCII and can be
sent directly in email or through ftp in text mode.  Newlines can be
CR, LF or CRLF (Unix, Macintosh or MS-DOS style).

NOTE: If you modify the data for this notebook not in a Mathematica-
compatible application, you must delete the line below containing
the word CacheID, otherwise Mathematica-compatible applications may
try to use invalid cache data.

For more information on notebooks and Mathematica-compatible 
applications, contact Wolfram Research:
  web: http://www.wolfram.com
  email: info@wolfram.com
  phone: +1-217-398-0700 (U.S.)

Notebook reader applications are available free of charge from 
Wolfram Research.
*******************************************************************)

(*CacheID: 232*)


(*NotebookFileLineBreakTest
NotebookFileLineBreakTest*)
(*NotebookOptionsPosition[     36522,        959]*)
(*NotebookOutlinePosition[     37205,        983]*)
(*  CellTagsIndexPosition[     37161,        979]*)
(*WindowFrame->Normal*)



Notebook[{
Cell[BoxData[
    \(<< LinearAlgebra`MatrixManipulation`\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(<< Graphics`Graphics3D`\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(<< Graphics`Legend`\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(<< SiminosUtils`\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(filelist = 
        FileNames["\<ks22rpo*\>", \
"\<../../../../rpo_ks/davidchack/orbits\>"];\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(Nplt = 154 - 9;\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(MaxPer = ToPeriod[filelist[\([Nplt]\)]];\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(LastShift = ToShift[filelist[\([Nplt]\)]];\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(thck = 0.001;\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(pt = 0.01;\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(isz = 72*4;\)\)], "Input"],

Cell[BoxData[
    \(\(Nd = 128;\)\)], "Input"],

Cell[BoxData[
    \(Ec1 = Import["\<../equil/1w/steady_c.dat\>"] // Flatten\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(Ec2 = Import["\<../equil/2w/steady_c.dat\>"] // Flatten\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(Ec3 = Import["\<../equil/3w/steady_c.dat\>"] // Flatten\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(EcTW1 = Import["\<../req/w-1R/steady_c.dat\>"] // Flatten\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(EcTW2 = 
        Import["\<../req/w-2R/steady_c.dat\>"] // Flatten;\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(EcTW2\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(c1 = RGBColor[0.8, 0, 0];\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(c2 = RGBColor[0, 0.8, 0];\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(c3 = RGBColor[0, 0, 0.8];\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(p1 = 
        ListPlot[{{Ec1[\([2]\)], Ec1[\([3]\)] - Ec1[\([2]\)]}}, 
          PlotStyle \[Rule] {c1, PointSize[2\ pt]}, 
          DisplayFunction \[Rule] Identity];\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(p1Poinc = 
        ListPlot[{{Ec1[\([1]\)], Ec1[\([2]\)]}}, 
          PlotStyle \[Rule] {c1, PointSize[3\ pt]}, 
          DisplayFunction \[Rule] Identity];\)\)], "Input"],

Cell[BoxData[
    \(\(p1e = 
        ScatterPlot3D[{{Ec1[\([1]\)], Ec1[\([2]\)], 
              Ec1[\([3]\)] - Ec1[\([2]\)]}}, 
          PlotStyle \[Rule] {c1, PointSize[2\ pt]}, 
          DisplayFunction \[Rule] Identity];\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(p1E1 = 
        ListPlot[{{Ec1[\([1]\)], Ec1[\([2]\)]}}, 
          PlotStyle \[Rule] {c1, PointSize[2\ pt]}, 
          DisplayFunction \[Rule] Identity];\)\)], "Input"],

Cell[BoxData[
    \(\(p1E2 = 
        ListPlot[{{Ec1[\([1]\)], Ec1[\([3]\)] - Ec1[\([2]\)]}}, 
          PlotStyle \[Rule] {c1, PointSize[2\ pt]}, 
          DisplayFunction \[Rule] Identity];\)\)], "Input"],

Cell[BoxData[
    \(\(p2 = 
        ListPlot[{{Ec2[\([2]\)], Ec2[\([3]\)] - Ec2[\([2]\)]}}, 
          PlotStyle \[Rule] {c2, PointSize[2\ pt]}, 
          DisplayFunction \[Rule] Identity];\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(p2Poinc = 
        ListPlot[{{Ec2[\([1]\)], Ec2[\([2]\)]}}, 
          PlotStyle \[Rule] {c2, PointSize[3\ pt]}, 
          DisplayFunction \[Rule] Identity];\)\)], "Input"],

Cell[BoxData[
    \(\(p2e = 
        ScatterPlot3D[{{Ec2[\([1]\)], Ec2[\([2]\)], 
              Ec2[\([3]\)] - Ec2[\([2]\)]}}, 
          PlotStyle \[Rule] {c2, PointSize[2\ pt]}, 
          DisplayFunction \[Rule] Identity];\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(p2E1 = 
        ListPlot[{{Ec2[\([1]\)], Ec2[\([2]\)]}}, 
          PlotStyle \[Rule] {c2, PointSize[2\ pt]}, 
          DisplayFunction \[Rule] Identity];\)\)], "Input"],

Cell[BoxData[
    \(\(p2E2 = 
        ListPlot[{{Ec2[\([1]\)], Ec2[\([3]\)] - Ec2[\([2]\)]}}, 
          PlotStyle \[Rule] {c2, PointSize[2\ pt]}, 
          DisplayFunction \[Rule] Identity];\)\)], "Input"],

Cell[BoxData[
    \(\(p3 = 
        ListPlot[{{Ec3[\([2]\)], Ec3[\([3]\)] - Ec3[\([2]\)]}}, 
          PlotStyle \[Rule] {c3, PointSize[2\ pt]}, 
          DisplayFunction \[Rule] Identity];\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(p3Poinc = 
        ListPlot[{{Ec3[\([1]\)], Ec3[\([2]\)]}}, 
          PlotStyle \[Rule] {c3, PointSize[3\ pt]}, 
          DisplayFunction \[Rule] Identity];\)\)], "Input"],

Cell[BoxData[
    \(\(p3e = 
        ScatterPlot3D[{{Ec3[\([1]\)], Ec3[\([2]\)], 
              Ec3[\([3]\)] - Ec3[\([2]\)]}}, 
          PlotStyle \[Rule] {c3, PointSize[2\ pt]}, 
          DisplayFunction \[Rule] Identity];\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(p3E1 = 
        ListPlot[{{Ec3[\([1]\)], Ec3[\([2]\)]}}, 
          PlotStyle \[Rule] {c3, PointSize[2\ pt]}, 
          DisplayFunction \[Rule] Identity];\)\)], "Input"],

Cell[BoxData[
    \(\(p3E2 = 
        ListPlot[{{Ec3[\([1]\)], Ec3[\([3]\)] - Ec3[\([2]\)]}}, 
          PlotStyle \[Rule] {c3, PointSize[2\ pt]}, 
          DisplayFunction \[Rule] Identity];\)\)], "Input"],

Cell[BoxData[
    \(\(cTW1 = RGBColor[0.5, 0.5, 0];\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(pTW1 = 
        ListPlot[{{EcTW1[\([2]\)], EcTW1[\([3]\)] - EcTW1[\([2]\)]}}, 
          PlotStyle \[Rule] {cTW1, PointSize[pt]}, 
          DisplayFunction \[Rule] Identity];\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(pTW1e = 
        ScatterPlot3D[{EcTW1}, PlotStyle \[Rule] {cTW1, PointSize[pt]}, 
          DisplayFunction \[Rule] Identity];\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(cTW2 = RGBColor[0.5, 0, 0.5];\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(pTW2 = 
        ListPlot[{{EcTW2[\([2]\)], EcTW2[\([3]\)] - EcTW2[\([2]\)]}}, 
          PlotStyle \[Rule] {cTW2, PointSize[pt]}, 
          DisplayFunction \[Rule] Identity];\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(pTW2e = 
        ScatterPlot3D[{EcTW2}, PlotStyle \[Rule] {cTW2, PointSize[pt]}, 
          DisplayFunction \[Rule] Identity];\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(pm = \(pme = \(pme1 = \(pme2 = \(plt = \(plte = \(plte1 = \(plte2 = \
\(mE = \(mvx2 = \(mvxx2 = \(plPoincE = \(plrPoincE = \(plrPoinc1 = \(plLor23 \
= \(plrLor2 = Table[Null, {i, 1, 
                                        Nplt}]\)\)\)\)\)\)\)\)\)\)\)\)\)\)\);\
\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(Do[\[IndentingNewLine]Etab = 
        Import[ToDir[
              filelist[\([i]\)]] <> "\</energy.dat\>"]; \
\[IndentingNewLine]color = 
        Hue[\((ToPeriod[filelist[\([i]\)]]/MaxPer + 
              0.2  ToShift[filelist[\([i]\)]]/
                  LastShift)\)]; \[IndentingNewLine]d = \(Dimensions[
            Etab]\)[\([2]\)]; \nNp = \(Dimensions[Etab]\)[\([1]\)]; \n
      mE[\([i]\)] = Sum[Etab[\([i, 1]\)], {i, 1, Np}]/Np; \n
      mvx2[\([i]\)] = Sum[Etab[\([i, 2]\)], {i, 1, Np}]/Np; \n
      mvxx2[\([i]\)] = Sum[Etab[\([i, 3]\)], {i, 1, Np}]/Np; \n
      pm[\([i]\)] = 
        ListPlot[{{mvx2[\([i]\)], mvxx2[\([i]\)] - mvx2[\([i]\)]}}, 
          PlotStyle \[Rule] {color, PointSize[pt]}, 
          DisplayFunction \[Rule] Identity, AspectRatio \[Rule] 1]; \n
      pme[\([i]\)] = 
        ScatterPlot3D[{{mE[\([i]\)], mvx2[\([i]\)], 
              mvxx2[\([i]\)] - mvx2[\([i]\)]}}, 
          PlotStyle \[Rule] {color, PointSize[pt]}, 
          DisplayFunction \[Rule] Identity, AspectRatio \[Rule] 1]; \n
      pme1[\([i]\)] = 
        ListPlot[{{mE[\([i]\)], mvx2[\([i]\)]}}, 
          PlotStyle \[Rule] {color, PointSize[pt]}, 
          DisplayFunction \[Rule] Identity, 
          AspectRatio \[Rule] 1]; \[IndentingNewLine]pme2[\([i]\)] = 
        ListPlot[{{mE[\([i]\)], mvxx2[\([i]\)] - mvx2[\([i]\)]}}, 
          PlotStyle \[Rule] {color, PointSize[pt]}, 
          DisplayFunction \[Rule] Identity, 
          AspectRatio \[Rule] 1]; \[IndentingNewLine]plt[\([i]\)] = 
        ListPlot[
          AppendRows[
            TakeColumns[
              Etab, {2}], \((TakeColumns[Etab, {3}] - 
                TakeColumns[Etab, {2}])\)], PlotJoined \[Rule] True, 
          PlotRange \[Rule] All, PlotStyle \[Rule] {color, Thickness[thck]}, 
          DisplayFunction \[Rule] Identity, AspectRatio \[Rule] 1]; \n
      plte[\([i]\)] = 
        ScatterPlot3D[
          AppendRows[TakeColumns[Etab, {1}], TakeColumns[Etab, {2}], 
            TakeColumns[Etab, {3}] - TakeColumns[Etab, {2}]], 
          PlotJoined \[Rule] True, PlotRange \[Rule] All, 
          PlotStyle \[Rule] {color, Thickness[thck]}, 
          DisplayFunction \[Rule] 
            Identity]; \[IndentingNewLine]plte1[\([i]\)] = 
        ListPlot[AppendRows[TakeColumns[Etab, {1}], TakeColumns[Etab, {2}]], 
          PlotJoined \[Rule] True, PlotRange \[Rule] All, 
          PlotStyle \[Rule] {color, Thickness[thck]}, 
          DisplayFunction \[Rule] 
            Identity]; \[IndentingNewLine]plte2[\([i]\)] = 
        ListPlot[
          AppendRows[TakeColumns[Etab, {1}], 
            TakeColumns[Etab, {3}] - TakeColumns[Etab, {2}]], 
          PlotJoined \[Rule] True, PlotRange \[Rule] All, 
          PlotStyle \[Rule] {color, Thickness[thck]}, 
          DisplayFunction \[Rule] Identity]; \[IndentingNewLine]coord = 
        Etab[\([All, 2]\)] - Etab[\([All, 3]\)]; \ncros = {Null}; \n
      Do[If[\ \((coord[\([i - 1]\)] > 
                0)\)\  && \ \((coord[\([i]\)] \[LessEqual] \ 0)\), 
          cros = Append[cros, {i}]], {i, 
          2, \(Dimensions[coord]\)[\([1]\)]}]; \n
      cros = Drop[cros, 1]; \[IndentingNewLine]vLor = 
        Table[0, {\(Dimensions[
                cros]\)[\([1]\)]\ }]; \[IndentingNewLine]vfile = 
        OpenRead[
          ToDir[filelist[\([i]\)]] <> "\</rpoU.dat\>"]; \
\[IndentingNewLine]Do[\[IndentingNewLine]Skip[vfile, Table[Number, {Nd}], 
          cros[\([j, 1]\)] - 
            If[j - 1\  == \ 0, 0, cros[\([j - 1, 1]\)], {i, 1, 1}] - 
            2]; \[IndentingNewLine]vLor[\([j]\)] = \((Read[vfile, 
                  Table[Number, {Nd}]] + Read[vfile, Table[Number, {Nd}]])\)/
            2\[IndentingNewLine], {j, 
          1, \(Dimensions[
              cros]\)[\([1]\)]}\[IndentingNewLine]]; \[IndentingNewLine]Close[
        vfile]; \[IndentingNewLine]aLor = 
        Map[Fourier[#, fp] &, 
          vLor, {1}]; \[IndentingNewLine]plLor23[\([i]\)] = 
        ListPlot[Im[aLor[\([All, {2, 3}]\)]], PlotRange \[Rule] All, 
          PlotStyle \[Rule] {color, PointSize[pt]}, 
          DisplayFunction \[Rule] 
            Identity]; \[IndentingNewLine]plrLor2[\([i]\)] = 
        ListPlot[
          Im[Table[{aLor[\([i, 2]\)], aLor[\([i + 1, 2]\)]}, {i, 
                1, \(Dimensions[aLor]\)[\([1]\)] - 1}]], 
          PlotRange \[Rule] All, PlotStyle \[Rule] {color, PointSize[pt]}, 
          DisplayFunction \[Rule] 
            Identity]; \[IndentingNewLine]poincE = \((Extract[
                Etab[\([All, {1, 2}]\)], cros] + 
              Extract[Etab[\([All, {1, 2}]\)], cros - 1])\)/2; \n
      rPoincE = 
        Table[{poincE[\([i, 1]\)], poincE[\([i + 1, 1]\)]}, {i, 
            1, \(Dimensions[poincE]\)[\([1]\)] - 
              1}]; \[IndentingNewLine]rPoinc1 = 
        Table[{poincE[\([i, 2]\)], poincE[\([i + 1, 2]\)]}, {i, 
            1, \(Dimensions[poincE]\)[\([1]\)] - 
              1}]; \[IndentingNewLine]plPoincE[\([i]\)] = 
        ListPlot[poincE, PlotRange \[Rule] All, 
          PlotStyle \[Rule] {color, PointSize[pt]}, 
          DisplayFunction \[Rule] Identity]; \n
      plrPoincE[\([i]\)] = 
        ListPlot[rPoincE, PlotRange \[Rule] All, 
          PlotStyle \[Rule] {color, PointSize[pt]}, 
          DisplayFunction \[Rule] 
            Identity]; \[IndentingNewLine]plrPoinc1[\([i]\)] = 
        ListPlot[rPoinc1, PlotRange \[Rule] All, 
          PlotStyle \[Rule] {color, PointSize[pt]}, 
          DisplayFunction \[Rule] Identity]\[IndentingNewLine], {i, 1, 
        Nplt}]\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(Close[vfile]\)], "Input"],

Cell[BoxData[
    \(Show[Take[plrLor2, All], DisplayFunction \[Rule] $DisplayFunction, 
      AspectRatio \[Rule] Automatic]\)], "Input"],

Cell[BoxData[
    \(Dimensions[plPoincE]\)], "Input"],

Cell[BoxData[
    \(Show[Take[plPoincE, All], 
      DisplayFunction \[Rule] $DisplayFunction]\)], "Input"],

Cell[BoxData[
    \(Show[Take[plLor23, All], 
      DisplayFunction \[Rule] $DisplayFunction]\)], "Input"],

Cell[BoxData[
    \(Show[Take[plrPoincE, All], 
      DisplayFunction \[Rule] $DisplayFunction]\)], "Input"],

Cell[BoxData[
    \(Show[Take[plrLor2, All], 
      DisplayFunction \[Rule] $DisplayFunction]\)], "Input"],

Cell[BoxData[
    \(Show[Take[plt, {20}], Take[pm, 4], 
      DisplayFunction \[Rule] $DisplayFunction]\)], "Input"],

Cell[BoxData[
    \(Show[Take[plte1, {20}], pme2, 
      DisplayFunction \[Rule] $DisplayFunction]\)], "Input"],

Cell[BoxData[
    \(Show[Take[plte2, {20}], pme2, 
      DisplayFunction \[Rule] $DisplayFunction]\)], "Input"],

Cell[BoxData[
    \(Dimensions[Etab]\)], "Input"],

Cell[BoxData[
    \(Etab[\([1]\)]\)], "Input"],

Cell[BoxData[
    \(\(ListPlot[Etab[\([All, 2]\)] - Etab[\([All, 3]\)]\ \ ];\)\)], "Input"],

Cell[BoxData[
    \(\(coord = Etab[\([All, 2]\)] - Etab[\([All, 3]\)];\)\)], "Input"],

Cell[BoxData[
    \(cros = {Null}\)], "Input"],

Cell[BoxData[
    \(Do[If[\ \((coord[\([i - 1]\)] > 
              0)\)\  && \ \((coord[\([i]\)] \[LessEqual] \ 0)\), 
        cros = Append[cros, {i}]], {i, 
        2, \(Dimensions[coord]\)[\([1]\)]}]\)], "Input"],

Cell[BoxData[
    \(cros = Drop[cros, 1]\)], "Input"],

Cell[BoxData[
    \(\(\(ret\)\(=\)\(Extract[Etab[\([All, 1]\)], cros]\)\(\ \)\)\)], "Input"],

Cell[BoxData[
    \(nPoinc = 
      Table[{ret[\([i]\)], ret[\([i + 1]\)]}, {i, 
          1, \(Dimensions[ret]\)[\([1]\)] - 1}]\)], "Input"],

Cell[BoxData[
    \(ListPlot[nPoinc]\)], "Input"],

Cell[BoxData[
    \(EtabTurb[\([1000]\)]\)], "Input"],

Cell[BoxData[{
    \(\(EtabTurb = 
        Import["\<../int/random/energy.dat\>"];\)\), "\[IndentingNewLine]", 
    \(\(Nk = 80000;\)\), "\[IndentingNewLine]", 
    \(\(EtabTurb = Take[EtabTurb, \(-Nk\)];\)\), "\n", 
    \(mEturb = 
      Sum[EtabTurb[\([i, 1]\)], {i, 1, Nk}]/Nk\), "\[IndentingNewLine]", 
    \(mvx2turb = 
      Sum[EtabTurb[\([i, 2]\)], {i, 1, Nk}]/Nk\), "\[IndentingNewLine]", 
    \(mvxx2turb = 
      Sum[EtabTurb[\([i, 3]\)], {i, 1, Nk}]/Nk\), "\[IndentingNewLine]", 
    \(\(cTurb = GrayLevel[0.5];\)\), "\[IndentingNewLine]", 
    \(\(pmTurb = 
        ListPlot[{{mvx2turb, mvxx2turb - mvx2turb}}, 
          PlotStyle \[Rule] {RGBColor[1, 1, 1], PointSize[pt]}, 
          DisplayFunction \[Rule] Identity, 
          AspectRatio \[Rule] Automatic];\)\), "\[IndentingNewLine]", 
    \(\(pmeTurb = 
        ScatterPlot3D[{{mEc, mvx2turb, mvxx2turb - mvx2turb}}, 
          PlotStyle \[Rule] {RGBColor[1, 1, 1], PointSize[pt]}, 
          DisplayFunction \[Rule] Identity, 
          AspectRatio \[Rule] Automatic];\)\), "\[IndentingNewLine]", 
    \(\(pTurb = 
        ListPlot[
          AppendRows[TakeColumns[EtabTurb, {2}], 
            TakeColumns[EtabTurb, {3}] - TakeColumns[EtabTurb, {2}]], 
          PlotJoined \[Rule] True, AspectRatio \[Rule] Automatic, 
          PlotStyle \[Rule] \ cTurb];\)\), "\[IndentingNewLine]", 
    \(\(pTurbE = 
        ScatterPlot3D[
          AppendRows[TakeColumns[EtabTurb, {1}], TakeColumns[EtabTurb, {2}], 
            TakeColumns[EtabTurb, {3}] - TakeColumns[EtabTurb, {2}]], 
          PlotJoined \[Rule] True, PlotRange \[Rule] All, 
          AspectRatio \[Rule] Automatic, 
          PlotStyle \[Rule] \ cTurb];\)\), "\[IndentingNewLine]", 
    \(\(pTurbE1 = 
        ListPlot[
          AppendRows[TakeColumns[EtabTurb, {1}], TakeColumns[EtabTurb, {2}]], 
          PlotJoined \[Rule] True, PlotRange \[Rule] All, 
          AspectRatio \[Rule] Automatic, 
          PlotStyle \[Rule] \ cTurb];\)\), "\[IndentingNewLine]", 
    \(\(pTurbE2 = 
        ListPlot[
          AppendRows[TakeColumns[EtabTurb, {1}], 
            TakeColumns[EtabTurb, {3}] - TakeColumns[EtabTurb, {2}]], 
          PlotJoined \[Rule] True, PlotRange \[Rule] All, 
          AspectRatio \[Rule] Automatic, 
          PlotStyle \[Rule] \ cTurb];\)\), "\[IndentingNewLine]", 
    \(\(coord = EtabTurb[\([All, 2]\)] - EtabTurb[\([All, 3]\)];\)\), "\n", 
    \(\(cros = {Null};\)\), "\n", 
    \(\(Do[
        If[\ \((coord[\([i - 1]\)] > 
                0)\)\  && \ \((coord[\([i]\)] \[LessEqual] \ 0)\), 
          cros = Append[cros, {i}]], {i, 
          2, \(Dimensions[coord]\)[\([1]\)]}];\)\), "\n", 
    \(\(cros = Drop[cros, 1];\)\), "\n", 
    \(\(poinc = \((Extract[EtabTurb[\([All, {1, 2}]\)], cros] + 
              Extract[EtabTurb[\([All, {1, 2}]\)], cros - 1])\)/
          2;\)\), "\n", 
    \(\(plPoincTurb = ListPlot[poinc];\)\), "\[IndentingNewLine]", 
    \(\(rPoincE = 
        Table[{poinc[\([i, 1]\)], poinc[\([i + 1, 1]\)]}, {i, 
            1, \(Dimensions[poinc]\)[\([1]\)] - 1}];\)\), "\n", 
    \(\(rPoinc1 = 
        Table[{poinc[\([i, 2]\)], poinc[\([i + 1, 2]\)]}, {i, 
            1, \(Dimensions[poinc]\)[\([1]\)] - 
              1}];\)\), "\[IndentingNewLine]", 
    \(\(plrPoincETurb = 
        ListPlot[rPoincE, PlotRange \[Rule] All, 
          PlotStyle \[Rule] {PointSize[pt]}, 
          DisplayFunction \[Rule] Identity, 
          AspectRatio \[Rule] Automatic];\)\), "\[IndentingNewLine]", 
    \(\(plrPoinc1Turb = 
        ListPlot[rPoinc1, PlotRange \[Rule] All, 
          PlotStyle \[Rule] {PointSize[pt]}, 
          DisplayFunction \[Rule] Identity, 
          AspectRatio \[Rule] Automatic];\)\)}], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(Dimensions[poinc]\)], "Input"],

Cell[BoxData[
    \(dS\)], "Input"],

Cell[BoxData[
    \(pTurbRPO = 
      Show[plPoincTurb, plPoincTurb1, plPoincTurb2, plPoincE, 
        DisplayFunction -> $DisplayFunction, 
        PlotRange -> {{0.19, 0.81}, {0.08, 0.65}}, Axes -> \ False, 
        Frame -> True, 
        FrameLabel \[Rule] \ {StyleForm["\<E\>", FontSize \[Rule] 20, 
              FontWeight \[Rule] \ "\<Bold\>"], 
            StyleForm[\*"\"\<\[LeftAngleBracket](\!\(u\_x\)\!\(\()\^2\)\)\
\[RightAngleBracket]\>\"", FontSize \[Rule] 20, 
              FontWeight \[Rule] \ "\<Bold\>"]}, 
        FrameTicks -> {Range[0, 0.8, 0.2], Range[0, 0.8, 0.2], None, None}, 
        RotateLabel -> False, AspectRatio -> Automatic\ , 
        TextStyle -> \ {FontSize -> \ 14}, ImageSize -> \ 1.5*isz]\)], "Input"],

Cell[BoxData[
    \(AbsoluteOptions[pTurbRPO]\)], "Input"],

Cell[BoxData[
    \(Export[, ]\)], "Input"],

Cell[BoxData[
    \(\(plPoincTurb3 = plPoincTurb;\)\)], "Input"],

Cell[BoxData[
    \(\(plPoincTurb2 = plPoincTurb;\)\)], "Input"],

Cell[BoxData[
    \(\(plPoincTurb1 = plPoincTurb;\)\)], "Input"],

Cell[BoxData[
    \(Show[plrPoinc1Turb, plrPoinc1, 
      DisplayFunction \[Rule] \ $DisplayFunction]\)], "Input"],

Cell[BoxData[
    \(Show[plrPoincETurb, plrPoincE, 
      DisplayFunction \[Rule] \ $DisplayFunction]\)], "Input"],

Cell[BoxData[
    \(Show[pTurbE, plte]\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(Show[pTurb, plt]\)], "Input"],

Cell[BoxData[
    \(Show[pTurbE1, plte1]\)], "Input"],

Cell[BoxData[
    \(Show[pTurbE2, plte2]\)], "Input"],

Cell[BoxData[
    \(\(connR = 0.007;\)\)], "Input"],

Cell[BoxData[
    \(\(connPoincThck = 0.008;\)\)], "Input"],

Cell[BoxData[
    \(Dimensions[EtabConn2wA2w]\)], "Input"],

Cell[BoxData[
    \(mind = 10^\(-3\)\)], "Input"],

Cell[BoxData[
    \(\(EtabConn2wA2w = Import["\<../conn/2wA2w/energy.dat\>"];\)\)], "Input"],

Cell[BoxData[
    \(Nk\)], "Input"],

Cell[BoxData[{
    \(\(EtabConn2wA2w = 
        Import["\<../conn/2wA2w/energy.dat\>"];\)\), "\[IndentingNewLine]", 
    \(\(Nk = \(Dimensions[
            EtabConn2wA2w]\)[\([1]\)];\)\[IndentingNewLine] \
(*\[IndentingNewLine]dif = 
        Map[Greater[#, mind] &, 
          Map[Norm, 
            EtabConn2wA2w - 
              Table[Ec2, {\(Dimensions[
                      EtabConn2wA2w]\)[\([1]\)]}], {1}], {1}]; \
\[IndentingNewLine]EtabConn2wA2w = 
        Pick[EtabConn2wA2w, 
          dif]; \[IndentingNewLine]Nk = \(Dimensions[
            EtabConn2wA2w]\)[\([1]\)]; \[IndentingNewLine]ds = 
        Table[Norm[EtabConn2wA2w[\([i + 1]\)] - EtabConn2wA2w[\([i]\)]], {i, 
            1, \(Dimensions[EtabConn2wA2w]\)[\([1]\)] - 1}]; \n
      s = Table[Null, {\(Dimensions[ds]\)[\([1]\)] + 1}]; \ns[\([1]\)] = 0; \n
      Do[s[\([i + 1]\)] = s[\([i]\)] + ds[\([i]\)], {i, 
          1, \(Dimensions[ds]\)[\([1]\)]}]; \n
      dS = s[\([\(Dimensions[s]\)[\([1]\)]]\)]/Nk; \n
      adum = TakeColumns[EtabConn2wA2w, {1}] // Flatten; \n
      a1s = Union[
          Table[{s[\([i]\)], adum[\([i]\)]}, {i, 
              1, \(Dimensions[s]\)[\([1]\)]}]]; \n
      adum = TakeColumns[EtabConn2wA2w, {2}] // Flatten; \n
      a2s = Union[
          Table[{s[\([i]\)], adum[\([i]\)]}, {i, 
              1, \(Dimensions[s]\)[\([1]\)]}]]; \n
      adum = TakeColumns[EtabConn2wA2w, {3}] // Flatten; \n
      a3s = Union[
          Table[{s[\([i]\)], adum[\([i]\)]}, {i, 
              1, \(Dimensions[s]\)[\([1]\)]}]]; \n
      aS = {Interpolation[a1s], Interpolation[a2s], Interpolation[a3s]}; \n
      EtabConn2wA2w = 
        Table[{\(aS[\([1]\)]\)[s*dS], \(aS[\([2]\)]\)[s*dS], \(aS[\([3]\)]\)[
              s*dS]}, {s, 1, 
            Nk}];\[IndentingNewLine]*) \), "\[IndentingNewLine]", 
    \(\(mEConn2wA2w = 
        Sum[EtabConn2wA2w[\([i, 1]\)], {i, 1, Nk}]/
          Nk;\)\), "\[IndentingNewLine]", 
    \(\(mvx2Conn2wA2w = 
        Sum[EtabConn2wA2w[\([i, 2]\)], {i, 1, Nk}]/
          Nk;\)\), "\[IndentingNewLine]", 
    \(\(mvxx2Conn2wA2w = 
        Sum[EtabConn2wA2w[\([i, 3]\)], {i, 1, Nk}]/
          Nk;\)\), "\[IndentingNewLine]", 
    \(\(cConn2wA2w = RGBColor[0, 1, 0];\)\), "\[IndentingNewLine]", 
    \(\(pmConn2wA2w = 
        ListPlot[{{mvx2Conn2wA2w, mvxx2Conn2wA2w - mvx2Conn2wA2w}}, 
          PlotStyle \[Rule] {cConn2wA2w, PointSize[pt]}, 
          DisplayFunction \[Rule] Identity, 
          AspectRatio \[Rule] Automatic];\)\), "\[IndentingNewLine]", 
    \(\(pmeConn2wA2w = 
        ScatterPlot3D[{{mEc, mvx2Conn2wA2w, mvxx2Conn2wA2w - mvx2Conn2wA2w}}, 
          PlotStyle \[Rule] {cConn2wA2w, PointSize[pt]}, 
          DisplayFunction \[Rule] Identity, 
          AspectRatio \[Rule] Automatic];\)\), "\[IndentingNewLine]", 
    \(\(pConn2wA2w = 
        ListPlot[
          AppendRows[TakeColumns[EtabConn2wA2w, {2}], 
            TakeColumns[EtabConn2wA2w, {3}] - 
              TakeColumns[EtabConn2wA2w, {2}]], 
          DisplayFunction \[Rule] Identity, PlotJoined \[Rule] True, 
          AspectRatio \[Rule] Automatic, PlotStyle \[Rule] \ cConn2wA2w, 
          FrameLabel \[Rule] \ {\*"\"\<<(\!\(u\_x\)\!\(\()\^2\)\)>\>\"", \
\*"\"\<<(\!\(u\_xx\)\!\(\()\^2\)\)>-<(\!\(u\_x\)\!\(\()\^2\)\)>\>\""}];\)\), \
"\[IndentingNewLine]", 
    \(\(pConn2wA2wE = 
        ScatterPlot3D[
          AppendRows[TakeColumns[EtabConn2wA2w, {1}], 
            TakeColumns[EtabConn2wA2w, {2}], 
            TakeColumns[EtabConn2wA2w, {3}] - 
              TakeColumns[EtabConn2wA2w, {2}]], 
          DisplayFunction \[Rule] Identity, PlotJoined \[Rule] True, 
          PlotRange \[Rule] All, AspectRatio \[Rule] Automatic, 
          FrameLabel -> \ {"\<<E>\>", \
\*"\"\<<(\!\(u\_x\)\!\(\()\^2\)\)>\>\"", \
\*"\"\<<(\!\(u\_xx\)\!\(\()\^2\)\)>\>\""}, 
          PlotStyle \[Rule] \ cConn2wA2w];\)\), "\[IndentingNewLine]", 
    \(\(pConn2wA2wE1 = 
        ListPlot[
          AppendRows[TakeColumns[EtabConn2wA2w, {1}], 
            TakeColumns[EtabConn2wA2w, {2}]], 
          DisplayFunction \[Rule] Identity, PlotJoined \[Rule] True, 
          PlotRange \[Rule] All, AspectRatio \[Rule] Automatic, 
          FrameLabel \[Rule] \ {"\<E\>", \*"\"\<<(\!\(u\_x\)\!\(\()\^2\)\)>\>\
\""}, PlotStyle \[Rule] \ cConn2wA2w];\)\), "\[IndentingNewLine]", 
    \(\(pConn2wA2wE2 = 
        ListPlot[
          AppendRows[TakeColumns[EtabConn2wA2w, {1}], 
            TakeColumns[EtabConn2wA2w, {3}] - 
              TakeColumns[EtabConn2wA2w, {2}]], 
          DisplayFunction \[Rule] Identity, PlotJoined \[Rule] True, 
          PlotRange \[Rule] All, AspectRatio \[Rule] Automatic, 
          
          FrameLabel \[Rule] \ {\*"\"\<<(\!\(u\_x\)\!\(\()\^2\)\)>\>\"", \
\*"\"\<<(\!\(u\_xx\)\!\(\()\^2\)\)>-<(\!\(u\_x\)\!\(\()\^2\)\)>\>\""}, 
          PlotStyle \[Rule] \ cConn2wA2w];\)\), "\[IndentingNewLine]", 
    \(\(coord = 
        EtabConn2wA2w[\([All, 2]\)] - 
          EtabConn2wA2w[\([All, 3]\)];\)\), "\n", 
    \(\(cros = {Null};\)\), "\n", 
    \(\(Do[
        If[\ \((coord[\([i - 1]\)] > 
                0)\)\  && \ \((coord[\([i]\)] \[LessEqual] \ 0)\), 
          cros = Append[cros, {i}]], {i, 
          2, \(Dimensions[coord]\)[\([1]\)]}];\)\), "\n", 
    \(\(cros = Drop[cros, 1];\)\), "\n", 
    \(\(poinc = \((Extract[EtabConn2wA2w[\([All, {1, 2}]\)], cros] + 
              Extract[EtabConn2wA2w[\([All, {1, 2}]\)], cros - 1])\)/
          2;\)\[IndentingNewLine] (*\(plPoincConn2wA2w = 
          ListPlot[poinc, 
            PlotStyle \[Rule] \ {cConn2wA2w, 
                PointSize[3*pt]}];\)*) \), "\n", 
    \(\(plPoincConn2wA2w = 
        Show[Graphics[{cConn2wA2w, Thickness[connPoincThck], 
              Map[Circle[#, connR] &, poinc]}]];\)\), "\[IndentingNewLine]", 
    \(\(rPoincE = 
        Table[{poinc[\([i, 1]\)], poinc[\([i + 1, 1]\)]}, {i, 
            1, \(Dimensions[poinc]\)[\([1]\)] - 1}];\)\), "\n", 
    \(\(rPoinc1 = 
        Table[{poinc[\([i, 2]\)], poinc[\([i + 1, 2]\)]}, {i, 
            1, \(Dimensions[poinc]\)[\([1]\)] - 
              1}];\)\), "\[IndentingNewLine]", 
    \(\(plrPoincEConn2wA2w = 
        ListPlot[rPoincE, PlotRange \[Rule] All, 
          PlotStyle \[Rule] {PointSize[pt]}, 
          DisplayFunction \[Rule] Identity, 
          AspectRatio \[Rule] Automatic];\)\), "\[IndentingNewLine]", 
    \(\(plrPoinc1Conn2wA2w = 
        ListPlot[rPoinc1, PlotRange \[Rule] All, 
          PlotStyle \[Rule] {PointSize[pt]}, 
          DisplayFunction \[Rule] Identity, 
          AspectRatio \[Rule] Automatic];\)\)}], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(Show[ (*\(pTurbE2\)\(,\)*) pConn2wA2w, p1, p2, p3, 
      DisplayFunction \[Rule] \ $DisplayFunction, ImageSize \[Rule] \ 400, 
      PlotRange \[Rule] All]\)], "Input"],

Cell[BoxData[
    \({pConn3wA2w, pConn3wA2wE, pConn3wA2wE1, pConn3wA2wE2} = 
      plotEtab["\<../conn/3wA2w/energy.dat\>", RGBColor[0, 0, 1]]\)], "Input"],

Cell[BoxData[
    \({pConn3wA2wMinus, pConn3wA2wEMinus, pConn3wA2wE1Minus, 
        pConn3wA2wE2Minus} = 
      plotEtab["\<../conn/3wA2wMinus/energy.dat\>", 
        RGBColor[0, 0, 1]]\)], "Input"],

Cell[BoxData[
    \({pConnA2w2w, pConnA2w2wE, pConnA2w2wE1, pConnA2w2wE2} = 
      plotEtab["\<../conn/A2w2w/energy.dat\>", 
        RGBColor[0.6, 0.7, 0]]\)], "Input"],

Cell[BoxData[
    \(\(connExpSize = 72*5;\)\)], "Input"],

Cell[BoxData[
    \(pTurbConn = 
      Show[pTurb, pConnA2w2w, pConn2wA2w, pConn3wA2w, pConn3wA2wMinus, p1, 
        p2, p3, DisplayFunction \[Rule] \ $DisplayFunction, 
        PlotRange \[Rule] {{0, 0.85}, All}, Axes \[Rule] False, 
        Frame \[Rule] True, 
        FrameLabel \[Rule] \ {\*"\"\<<(\!\(u\_x\)\!\(\()\^2\)\)>\>\"", \
\*"\"\<<(\!\(u\_xx\)\!\(\()\^2\)\)>-<(\!\(u\_x\)\!\(\()\^2\)\)>\>\""}, 
        FrameTicks \[Rule] {Range[0, 0.8, 0.2], {\(-0.06\), 0, 0.06}, None, 
            None}, RotateLabel \[Rule] False, 
        TextStyle \[Rule] \(FontSize \[Rule] \ 20\), 
        ImageSize \[Rule] 1.8  connExpSize, 
        AspectRatio \[Rule] 1/2]\)], "Input"],

Cell[BoxData[
    \(pTurbConnE1 = 
      Show[pTurbE1, pConnA2w2wE1, pConn2wA2wE1, pConn3wA2wE1, 
        pConn3wA2wE1Minus, p1E1, p2E1, p3E1, 
        DisplayFunction \[Rule] \ $DisplayFunction, 
        ImageSize \[Rule] 1.8\ connExpSize, 
        PlotRange \[Rule] {{0, 0.85}, {0, 0.85}}, 
        FrameTicks \[Rule] {Range[0, 0.8, 0.2], Range[0, 0.8, 0.2], None, 
            None}, Axes \[Rule] False, Frame \[Rule] True, 
        FrameLabel \[Rule] \ {"\<E\>", \*"\"\<.         \
<(\!\(u\_x\)\!\(\()\^2\)\)>\>\""}, RotateLabel \[Rule] False, 
        TextStyle \[Rule] \(FontSize \[Rule] \ 20\)]\)], "Input"],

Cell[BoxData[
    \(pTurbConnE2 = 
      Show[pTurbE2, pConnA2w2wE2, pConn2wA2wE2, pConn3wA2wE2, 
        pConn3wA2wE2Minus, p1E2, p2E2, p3E2, 
        DisplayFunction \[Rule] \ $DisplayFunction, 
        PlotRange \[Rule] {{0, 0.85}, All}, Axes \[Rule] False, 
        Frame \[Rule] True, 
        FrameLabel \[Rule] \ {"\<E\>", \*"\"\<<(\!\(u\_xx\)\!\(\()\^2\)\)>-<(\
\!\(u\_x\)\!\(\()\^2\)\)>\>\""}, 
        FrameTicks \[Rule] {Range[0, 0.8, 0.2], {\(-0.06\), 0, 0.06}, None, 
            None}, RotateLabel \[Rule] False, 
        TextStyle \[Rule] \(FontSize \[Rule] \ 20\), 
        ImageSize \[Rule] 1.8  connExpSize, 
        AspectRatio \[Rule] 1/2]\)], "Input"],

Cell[BoxData[
    \(\(pArr = 
        Show[GraphicsArray[{{pTurbConnE1}, {pTurbConn}, {pTurbConnE2}}], 
          ImageSize \[Rule] 1.8  connExpSize];\)\)], "Input"],

Cell[BoxData[
    \(Export["\<ks22TurbConn.eps\>", pArr, "\<EPS\>", 
      ConversionOptions \[Rule] {"\<IncludeSpecialFonts\>" \[Rule] 
            True, "\<ImageSize\>" \[Rule] 1.5  connExpSize}]\)], "Input"],

Cell[BoxData[
    \(conn3D = 
      Show[p1e, p2e, p3e, pTurbE, pConnA2w2wE, pConn2wA2wE, pConn3wA2wE, 
        DisplayFunction \[Rule] \ $DisplayFunction, 
        PlotRange \[Rule] All]\)], "Input"],

Cell[BoxData[
    \(\(Get["\<MathGL3d`OpenGLViewer`\>"];\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(MVShow3D[
        Show[p1e, p2e, p3e, pConnA2w2wE, pConn2wA2wE, pConn3wA2wE, 
          DisplayFunction \[Rule] $DisplayFunction], MVNewScene \[Rule] True, 
        MVLineTubeSize \[Rule] 0.002, 
        MVPointSphereSize \[Rule] \ 0.2];\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(MVShow3D[pTurbE, MVNewScene \[Rule] False, 
        MVLineTubeSize \[Rule] 0.001, 
        MVPointSphereSize \[Rule] \ 0.2];\)\)], "Input"],

Cell[BoxData[
    \(\(MVWritePOVRay["\<conn3D2.pov\>"];\)\)], "Input"],

Cell[BoxData[
    \(plPoinc = 
      Show[plPoincTurb1, p1Poinc, p2Poinc, p3Poinc, plPoincE, 
        plPoincConnA2w2w, plPoincConn2wA2w, plPoincConn3wA2w, 
        ImageSize \[Rule] 600, Axes \[Rule] False, Frame \[Rule] True, 
        FrameLabel \[Rule] \ {"\<<E>\>", \*"\"\<<(\!\(u\_x\)\!\(\()\^2\)\)>\>\
\""}, RotateLabel \[Rule] False, TextStyle \[Rule] \(FontSize \[Rule] \ 14\), 
        DisplayFunction \[Rule] $DisplayFunction, 
        AspectRatio \[Rule] Automatic]\)], "Input"],

Cell[BoxData[
    \(pTurbRPO = 
      Show[plPoincTurb1, plPoincTurb2, plPoincTurb3, plPoincE, p1Poinc, 
        p3Poinc, plPoincConnA2w2w, plPoincConn2wA2w, plPoincConn3wA2w, 
        p2Poinc, DisplayFunction -> $DisplayFunction, 
        PlotRange -> {{0.1, 0.81}, {0.03, 0.65}}, Axes -> \ False, 
        Frame -> True, 
        FrameLabel \[Rule] \ {StyleForm["\<E\>", FontSize \[Rule] 20], 
            StyleForm[\*"\"\<\[LeftAngleBracket](\!\(u\_x\)\!\(\()\^2\)\)\
\[RightAngleBracket]\>\"", FontSize \[Rule] 20]}, 
        FrameTicks -> {Range[0, 0.8, 0.2], Range[0, 0.8, 0.2], None, None}, 
        RotateLabel -> False, AspectRatio -> Automatic\ , 
        TextStyle -> \ {FontSize -> \ 14}, ImageSize -> \ 1.8*isz]\)], "Input"],

Cell[BoxData[
    \(Export["\<energyPoinc.eps\>", pTurbRPO, "\<EPS\>", 
      ConversionOptions \[Rule] {"\<IncludeSpecialFonts\>" \[Rule] 
            True, "\<ImageSize\>" \[Rule] 1.8\ isz}]\)], "Input"],

Cell[BoxData[
    \(\(pAll = 
        Show[pTurb, plt[\([\(-1\)]\)], p1, p2, p3, pTW1, pTW2, pmTurb, 
          FrameLabel \[Rule] \ {\*"\"\<<(\!\(u\_x\)\!\(\()\^2\)\)>\>\"", \
\*"\"\<<(\!\(u\_xx\)\!\(\()\^2\)\)>\>\""}, Frame \[Rule] True, Axes -> False, 
          RotateLabel \[Rule] False, 
          TextStyle \[Rule] {FontSize -> 10, FontFamily \[Rule] Times}, 
          DisplayFunction \[Rule] $DisplayFunction, ImageSize \[Rule] 600, 
          AspectRatio \[Rule] 1, PlotRange \[Rule] All];\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(Show[plt[\([\(-1\)]\)], 
        FrameLabel \[Rule] \ {\*"\"\<<(\!\(u\_x\)\!\(\()\^2\)\)>\>\"", \
\*"\"\<<(\!\(u\_xx\)\!\(\()\^2\)\)>\>\""}, Frame \[Rule] True, Axes -> False, 
        RotateLabel \[Rule] False, 
        TextStyle \[Rule] {FontSize -> 10, FontFamily \[Rule] Times}, 
        DisplayFunction \[Rule] $DisplayFunction, ImageSize \[Rule] 600, 
        AspectRatio \[Rule] 1, PlotRange \[Rule] All];\)\)], "Input"],

Cell[BoxData[
    \(\(eLast = 
        Import[ToDir[
              filelist[\([Nplt]\)]] <> "\</energy.dat\>"];\)\)], "Input"],

Cell[BoxData[
    \(filelist[\([Nplt]\)]\)], "Input"],

Cell[BoxData[
    \(Dimensions[eLast]\)], "Input"],

Cell[BoxData[
    \(eLast[\([1]\)]\)], "Input"],

Cell[BoxData[
    \(eLast[\([\(-1\)]\)]\)], "Input"],

Cell[BoxData[
    \(ListPlot[TakeColumns[eLast, {2, 3}], Frame \[Rule] True, Axes -> False, 
      RotateLabel \[Rule] False, 
      TextStyle \[Rule] {FontSize -> 10, FontFamily \[Rule] Times}, 
      DisplayFunction \[Rule] $DisplayFunction, ImageSize \[Rule] 600, 
      AspectRatio \[Rule] 1, PlotRange \[Rule] All, 
      PlotJoined \[Rule] True]\)], "Input"],

Cell[BoxData[
    \(\(pAll3D = 
        Show[pTurbE, plte, pme, p1e, p2e, p3e, pTW1e, pTW2e, 
          AxesLabel \[Rule] \ {"\<<E>\>", \
\*"\"\<<(\!\(u\_x\)\!\(\()\^2\)\)>\>\"", \
\*"\"\<<(\!\(u\_xx\)\!\(\()\^2\)\)>\>\""}, Axes \[Rule] True, 
          TextStyle \[Rule] {FontSize -> 10, FontFamily \[Rule] Times}, 
          DisplayFunction \[Rule] $DisplayFunction, ImageSize \[Rule] 600, 
          BoxRatios \[Rule] {0.8, 0.6, 0.6}, 
          PlotRange \[Rule] All];\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(Get["\<MathGL3d`OpenGLViewer`\>"];\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(MemberQ[
      OpenGLExtentions /. 
        Last[OpenGLInformation[]], "\<GL_ARB_vertex_program\>"]\)], "Input"],

Cell[BoxData[
    \(\(MVShow3D[pAll3D, MVNewScene \[Rule] True, MVLineTubeSize \[Rule] 2.0, 
        MVPointSphereSize \[Rule] \ 0.01];\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(MVWritePOVRay["\<energy3D.pov\>"];\)\)], "Input",
  InitializationCell->True]
},
FrontEndVersion->"5.0 for X",
ScreenRectangle->{{0, 1280}, {0, 1024}},
AutoGeneratedPackage->Automatic,
WindowSize->{1272, 950},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
ShowSelection->True
]

(*******************************************************************
Cached data follows.  If you edit this Notebook file directly, not
using Mathematica, you must remove the line containing CacheID at
the top of  the file.  The cache data will then be recreated when
you save this file from within Mathematica.
*******************************************************************)

(*CellTagsOutline
CellTagsIndex->{}
*)

(*CellTagsIndex
CellTagsIndex->{}
*)

(*NotebookFileOutline
Notebook[{
Cell[1754, 51, 97, 2, 27, "Input",
  InitializationCell->True],
Cell[1854, 55, 84, 2, 27, "Input",
  InitializationCell->True],
Cell[1941, 59, 80, 2, 27, "Input",
  InitializationCell->True],
Cell[2024, 63, 77, 2, 27, "Input",
  InitializationCell->True],
Cell[2104, 67, 157, 4, 27, "Input",
  InitializationCell->True],
Cell[2264, 73, 80, 2, 27, "Input",
  InitializationCell->True],
Cell[2347, 77, 105, 2, 27, "Input",
  InitializationCell->True],
Cell[2455, 81, 107, 2, 27, "Input",
  InitializationCell->True],
Cell[2565, 85, 78, 2, 27, "Input",
  InitializationCell->True],
Cell[2646, 89, 75, 2, 27, "Input",
  InitializationCell->True],
Cell[2724, 93, 48, 1, 27, "Input"],
Cell[2775, 96, 46, 1, 27, "Input"],
Cell[2824, 99, 116, 2, 27, "Input",
  InitializationCell->True],
Cell[2943, 103, 116, 2, 27, "Input",
  InitializationCell->True],
Cell[3062, 107, 116, 2, 27, "Input",
  InitializationCell->True],
Cell[3181, 111, 118, 2, 27, "Input",
  InitializationCell->True],
Cell[3302, 115, 132, 3, 27, "Input",
  InitializationCell->True],
Cell[3437, 120, 66, 2, 27, "Input",
  InitializationCell->True],
Cell[3506, 124, 90, 2, 27, "Input",
  InitializationCell->True],
Cell[3599, 128, 90, 2, 27, "Input",
  InitializationCell->True],
Cell[3692, 132, 90, 2, 27, "Input",
  InitializationCell->True],
Cell[3785, 136, 233, 5, 27, "Input",
  InitializationCell->True],
Cell[4021, 143, 195, 4, 27, "Input"],
Cell[4219, 149, 268, 6, 27, "Input",
  InitializationCell->True],
Cell[4490, 157, 192, 4, 27, "Input"],
Cell[4685, 163, 207, 4, 27, "Input"],
Cell[4895, 169, 233, 5, 27, "Input",
  InitializationCell->True],
Cell[5131, 176, 195, 4, 27, "Input"],
Cell[5329, 182, 268, 6, 27, "Input",
  InitializationCell->True],
Cell[5600, 190, 192, 4, 27, "Input"],
Cell[5795, 196, 207, 4, 27, "Input"],
Cell[6005, 202, 233, 5, 27, "Input",
  InitializationCell->True],
Cell[6241, 209, 195, 4, 27, "Input"],
Cell[6439, 215, 268, 6, 27, "Input",
  InitializationCell->True],
Cell[6710, 223, 192, 4, 27, "Input"],
Cell[6905, 229, 207, 4, 27, "Input"],
Cell[7115, 235, 94, 2, 27, "Input",
  InitializationCell->True],
Cell[7212, 239, 240, 5, 27, "Input",
  InitializationCell->True],
Cell[7455, 246, 191, 4, 27, "Input",
  InitializationCell->True],
Cell[7649, 252, 94, 2, 27, "Input",
  InitializationCell->True],
Cell[7746, 256, 240, 5, 27, "Input",
  InitializationCell->True],
Cell[7989, 263, 191, 4, 27, "Input",
  InitializationCell->True],
Cell[8183, 269, 327, 6, 27, "Input",
  InitializationCell->True],
Cell[8513, 277, 5566, 108, 699, "Input",
  InitializationCell->True],
Cell[14082, 387, 45, 1, 27, "Input"],
Cell[14130, 390, 137, 2, 27, "Input"],
Cell[14270, 394, 53, 1, 27, "Input"],
Cell[14326, 397, 107, 2, 27, "Input"],
Cell[14436, 401, 106, 2, 27, "Input"],
Cell[14545, 405, 108, 2, 27, "Input"],
Cell[14656, 409, 106, 2, 27, "Input"],
Cell[14765, 413, 116, 2, 27, "Input"],
Cell[14884, 417, 111, 2, 27, "Input"],
Cell[14998, 421, 111, 2, 27, "Input"],
Cell[15112, 425, 49, 1, 27, "Input"],
Cell[15164, 428, 46, 1, 27, "Input"],
Cell[15213, 431, 91, 1, 27, "Input"],
Cell[15307, 434, 85, 1, 27, "Input"],
Cell[15395, 437, 46, 1, 27, "Input"],
Cell[15444, 440, 215, 4, 27, "Input"],
Cell[15662, 446, 53, 1, 27, "Input"],
Cell[15718, 449, 92, 1, 27, "Input"],
Cell[15813, 452, 141, 3, 27, "Input"],
Cell[15957, 457, 49, 1, 27, "Input"],
Cell[16009, 460, 53, 1, 27, "Input"],
Cell[16065, 463, 3738, 77, 427, "Input",
  InitializationCell->True],
Cell[19806, 542, 50, 1, 27, "Input"],
Cell[19859, 545, 35, 1, 27, "Input"],
Cell[19897, 548, 743, 13, 68, "Input"],
Cell[20643, 563, 58, 1, 27, "Input"],
Cell[20704, 566, 43, 1, 27, "Input"],
Cell[20750, 569, 64, 1, 27, "Input"],
Cell[20817, 572, 64, 1, 27, "Input"],
Cell[20884, 575, 64, 1, 27, "Input"],
Cell[20951, 578, 114, 2, 27, "Input"],
Cell[21068, 582, 114, 2, 27, "Input"],
Cell[21185, 586, 79, 2, 27, "Input",
  InitializationCell->True],
Cell[21267, 590, 49, 1, 27, "Input"],
Cell[21319, 593, 53, 1, 27, "Input"],
Cell[21375, 596, 53, 1, 27, "Input"],
Cell[21431, 599, 51, 1, 27, "Input"],
Cell[21485, 602, 59, 1, 27, "Input"],
Cell[21547, 605, 58, 1, 27, "Input"],
Cell[21608, 608, 49, 1, 27, "Input"],
Cell[21660, 611, 92, 1, 27, "Input"],
Cell[21755, 614, 35, 1, 27, "Input"],
Cell[21793, 617, 6559, 135, 809, "Input",
  InitializationCell->True],
Cell[28355, 754, 189, 3, 27, "Input"],
Cell[28547, 759, 155, 2, 27, "Input"],
Cell[28705, 763, 198, 4, 27, "Input"],
Cell[28906, 769, 168, 3, 27, "Input"],
Cell[29077, 774, 56, 1, 27, "Input"],
Cell[29136, 777, 677, 12, 68, "Input"],
Cell[29816, 791, 614, 11, 66, "Input"],
Cell[30433, 804, 672, 13, 68, "Input"],
Cell[31108, 819, 165, 3, 27, "Input"],
Cell[31276, 824, 210, 3, 27, "Input"],
Cell[31489, 829, 200, 4, 27, "Input"],
Cell[31692, 835, 99, 2, 27, "Input",
  InitializationCell->True],
Cell[31794, 839, 302, 6, 43, "Input",
  InitializationCell->True],
Cell[32099, 847, 161, 3, 27, "Input"],
Cell[32263, 852, 70, 1, 27, "Input"],
Cell[32336, 855, 489, 8, 49, "Input"],
Cell[32828, 865, 737, 12, 85, "Input"],
Cell[33568, 879, 205, 3, 27, "Input"],
Cell[33776, 884, 542, 9, 50, "Input",
  InitializationCell->True],
Cell[34321, 895, 449, 7, 50, "Input"],
Cell[34773, 904, 126, 3, 27, "Input"],
Cell[34902, 909, 53, 1, 27, "Input"],
Cell[34958, 912, 50, 1, 27, "Input"],
Cell[35011, 915, 47, 1, 27, "Input"],
Cell[35061, 918, 52, 1, 27, "Input"],
Cell[35116, 921, 364, 6, 43, "Input"],
Cell[35483, 929, 515, 10, 50, "Input",
  InitializationCell->True],
Cell[36001, 941, 99, 2, 27, "Input",
  InitializationCell->True],
Cell[36103, 945, 132, 3, 27, "Input"],
Cell[36238, 950, 178, 3, 27, "Input",
  InitializationCell->True],
Cell[36419, 955, 99, 2, 27, "Input",
  InitializationCell->True]
}
]
*)



(*******************************************************************
End of Mathematica Notebook file.
*******************************************************************)

