(************** Content-type: application/mathematica **************
                     CreatedBy='Mathematica 5.2'

                    Mathematica-Compatible Notebook

This notebook can be used with any Mathematica-compatible
application, such as Mathematica, MathReader or Publicon. The data
for the notebook starts with the line containing stars above.

To get the notebook into a Mathematica-compatible application, do
one of the following:

* Save the data starting with the line of stars above into a file
  with a name ending in .nb, then open the file inside the
  application;

* Copy the data starting with the line of stars above to the
  clipboard, then use the Paste menu command inside the application.

Data for notebooks contains only printable 7-bit ASCII and can be
sent directly in email or through ftp in text mode.  Newlines can be
CR, LF or CRLF (Unix, Macintosh or MS-DOS style).

NOTE: If you modify the data for this notebook not in a Mathematica-
compatible application, you must delete the line below containing
the word CacheID, otherwise Mathematica-compatible applications may
try to use invalid cache data.

For more information on notebooks and Mathematica-compatible 
applications, contact Wolfram Research:
  web: http://www.wolfram.com
  email: info@wolfram.com
  phone: +1-217-398-0700 (U.S.)

Notebook reader applications are available free of charge from 
Wolfram Research.
*******************************************************************)

(*CacheID: 232*)


(*NotebookFileLineBreakTest
NotebookFileLineBreakTest*)
(*NotebookOptionsPosition[     19960,        550]*)
(*NotebookOutlinePosition[     20643,        574]*)
(*  CellTagsIndexPosition[     20599,        570]*)
(*WindowFrame->Normal*)



Notebook[{
Cell[BoxData[
    \(<< LinearAlgebra`MatrixManipulation`\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(<< Graphics`Graphics3D`\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(<< Graphics`Legend`\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(<< SiminosUtils`\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(filelist = 
        FileNames["\<ks22rpo*\>", \
"\<../../../../rpo_ks/davidchack/orbits\>"];\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(Nplt = 33;\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(MaxPer = ToPeriod[filelist[\([Nplt]\)]];\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(LastShift = ToShift[filelist[\([Nplt]\)]];\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(thck = 0.001;\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(pt = 0.02;\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(Nd = 128;\)\)], "Input"],

Cell[BoxData[
    \(\(pm = \(pme = \(pme1 = \(pme2 = \(plt = \(plte = \(plte1 = \(plte2 = \
\(mE = \(mvx2 = \(mvxx2 = \(plPoincE = \(plrPoincE = \(plrPoinc1 = \(plLor23 \
= \(plrLor2 = Table[Null, {i, 1, 
                                        Nplt}]\)\)\)\)\)\)\)\)\)\)\)\)\)\)\);\
\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(Close[vfile]\)], "Input"],

Cell[BoxData[
    \(Do[\[IndentingNewLine]Etab = 
        Import[ToDir[
              filelist[\([i]\)]] <> "\</energy.dat\>"]; \
\[IndentingNewLine]color = 
        Hue[\((ToPeriod[filelist[\([i]\)]]/MaxPer + 
              0.2  ToShift[filelist[\([i]\)]]/
                  LastShift)\)]; \[IndentingNewLine]d = \(Dimensions[
            Etab]\)[\([2]\)]; \nNp = \(Dimensions[Etab]\)[\([1]\)]; \n
      mE[\([i]\)] = Sum[Etab[\([i, 1]\)], {i, 1, Np}]/Np; \n
      mvx2[\([i]\)] = Sum[Etab[\([i, 2]\)], {i, 1, Np}]/Np; \n
      mvxx2[\([i]\)] = Sum[Etab[\([i, 3]\)], {i, 1, Np}]/Np; \n
      pm[\([i]\)] = 
        ListPlot[{{mvx2[\([i]\)], mvxx2[\([i]\)] - mvx2[\([i]\)]}}, 
          PlotStyle \[Rule] {color, PointSize[pt]}, 
          DisplayFunction \[Rule] Identity, AspectRatio \[Rule] 1]; \n
      pme[\([i]\)] = 
        ScatterPlot3D[{{mE[\([\)\(i\)\(]\)], mvx2[\([\)\(i\)\(]\)], 
              mvxx2[\([\)\(i\)\(]\)] - mvx2[\([\)\(i\)\(]\)]}}, 
          PlotStyle \[Rule] {color, PointSize[pt]}, 
          DisplayFunction \[Rule] Identity, AspectRatio \[Rule] 1]; \n
      pme1[\([i]\)] = 
        ListPlot[{{mE[\([\)\(i\)\(]\)], mvx2[\([i]\)]}}, 
          PlotStyle \[Rule] {color, PointSize[pt]}, 
          DisplayFunction \[Rule] Identity, 
          AspectRatio \[Rule] 1]; \[IndentingNewLine]pme2[\([i]\)] = 
        ListPlot[{{mE[\([\)\(i\)\(]\)], 
              mvxx2[\([\)\(i\)\(]\)] - mvx2[\([\)\(i\)\(]\)]}}, 
          PlotStyle \[Rule] {color, PointSize[pt]}, 
          DisplayFunction \[Rule] Identity, 
          AspectRatio \[Rule] 1]; \[IndentingNewLine]plt[\([i]\)] = 
        ListPlot[
          AppendRows[
            TakeColumns[
              Etab, {2}], \((TakeColumns[Etab, {3}] - 
                TakeColumns[Etab, {2}])\)], PlotJoined \[Rule] True, 
          PlotRange \[Rule] All, PlotStyle \[Rule] {color, Thickness[thck]}, 
          DisplayFunction \[Rule] Identity, AspectRatio \[Rule] 1]; \n
      plte[\([i]\)] = 
        ScatterPlot3D[
          AppendRows[TakeColumns[Etab, {1}], TakeColumns[Etab, {2}], 
            TakeColumns[Etab, {3}] - TakeColumns[Etab, {2}]], 
          PlotJoined \[Rule] True, PlotRange \[Rule] All, 
          PlotStyle \[Rule] {color, Thickness[thck]}, 
          DisplayFunction \[Rule] 
            Identity]; \[IndentingNewLine]plte1[\([i]\)] = 
        ListPlot[AppendRows[TakeColumns[Etab, {1}], TakeColumns[Etab, {2}]], 
          PlotJoined \[Rule] True, PlotRange \[Rule] All, 
          PlotStyle \[Rule] {color, Thickness[thck]}, 
          DisplayFunction \[Rule] 
            Identity]; \[IndentingNewLine]plte2[\([i]\)] = 
        ListPlot[
          AppendRows[TakeColumns[Etab, {1}], 
            TakeColumns[Etab, {3}] - TakeColumns[Etab, {2}]], 
          PlotJoined \[Rule] True, PlotRange \[Rule] All, 
          PlotStyle \[Rule] {color, Thickness[thck]}, 
          DisplayFunction \[Rule] Identity]; \[IndentingNewLine]coord = 
        Etab[\([\)\(All, 2\)\(]\)] - Etab[\([\)\(All, 3\)\(]\)]; \n
      cros = {Null}; \n
      Do[If[\ \((coord[\([\)\(i - 1\)\(]\)] > 
                0)\)\  && \ \((coord[\([\)\(i\)\(]\)] \[LessEqual] \ 0)\), 
          cros = Append[cros, {i}]], {i, 
          2, \(Dimensions[coord]\)[\([\)\(1\)\(]\)]}]; \n
      cros = Drop[cros, 1]; \[IndentingNewLine]vLor = 
        Table[0, {\(Dimensions[
                cros]\)[\([1]\)]\ }]; \[IndentingNewLine]vfile = 
        OpenRead[
          ToDir[filelist[\([i]\)]] <> "\</rpoU.dat\>"]; \
\[IndentingNewLine]Do[\[IndentingNewLine]Skip[vfile, Table[Number, {Nd}], 
          cros[\([j, 1]\)] - 
            If[j - 1\  == \ 0, 0, cros[\([j - 1, 1]\)], {i, 1, 1}] - 
            2]; \[IndentingNewLine]vLor[\([j]\)] = \((Read[vfile, 
                  Table[Number, {Nd}]] + Read[vfile, Table[Number, {Nd}]])\)/
            2\[IndentingNewLine], {j, 
          1, \(Dimensions[
              cros]\)[\([1]\)]}\[IndentingNewLine]]; \[IndentingNewLine]Close[
        vfile]; \[IndentingNewLine]aLor = 
        Map[Fourier[#, fp] &, 
          vLor, {1}]; \[IndentingNewLine]plLor23[\([i]\)] = 
        ListPlot[Im[aLor[\([All, {2, 3}]\)]], PlotRange \[Rule] All, 
          PlotStyle \[Rule] {color, PointSize[pt]}, 
          DisplayFunction \[Rule] 
            Identity]; \[IndentingNewLine]plrLor2[\([i]\)] = 
        ListPlot[
          Im[Table[{aLor[\([i, 2]\)], aLor[\([i + 1, 2]\)]}, {i, 
                1, \(Dimensions[aLor]\)[\([1]\)] - 1}]], 
          PlotRange \[Rule] All, PlotStyle \[Rule] {color, PointSize[pt]}, 
          DisplayFunction \[Rule] 
            Identity]; \[IndentingNewLine]poincE = \((Extract[
                Etab[\([All, {1, 2}]\)], cros] + 
              Extract[Etab[\([All, {1, 2}]\)], cros - 1])\)/2; \n
      rPoincE = 
        Table[{poincE[\([i, 1]\)], poincE[\([i + 1, 1]\)]}, {i, 
            1, \(Dimensions[poincE]\)[\([1]\)] - 
              1}]; \[IndentingNewLine]rPoinc1 = 
        Table[{poincE[\([i, 2]\)], poincE[\([i + 1, 2]\)]}, {i, 
            1, \(Dimensions[poincE]\)[\([1]\)] - 
              1}]; \[IndentingNewLine]plPoincE[\([i]\)] = 
        ListPlot[poincE, PlotRange \[Rule] All, 
          PlotStyle \[Rule] {color, PointSize[pt]}, 
          DisplayFunction \[Rule] Identity]; \n
      plrPoincE[\([i]\)] = 
        ListPlot[rPoincE, PlotRange \[Rule] All, 
          PlotStyle \[Rule] {color, PointSize[pt]}, 
          DisplayFunction \[Rule] 
            Identity]; \[IndentingNewLine]plrPoinc1[\([i]\)] = 
        ListPlot[rPoinc1, PlotRange \[Rule] All, 
          PlotStyle \[Rule] {color, PointSize[pt]}, 
          DisplayFunction \[Rule] Identity]\[IndentingNewLine], {i, 1, 
        Nplt}]\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(Show[Take[plrLor2, All], DisplayFunction \[Rule] $DisplayFunction, 
      AspectRatio \[Rule] Automatic]\)], "Input"],

Cell[BoxData[
    \(Dimensions[plPoincE]\)], "Input"],

Cell[BoxData[
    \(Show[Take[plPoincE, All], 
      DisplayFunction \[Rule] $DisplayFunction]\)], "Input"],

Cell[BoxData[
    \(Show[Take[plLor23, All], 
      DisplayFunction \[Rule] $DisplayFunction]\)], "Input"],

Cell[BoxData[
    \(Show[Take[plrPoincE, All], 
      DisplayFunction \[Rule] $DisplayFunction]\)], "Input"],

Cell[BoxData[
    \(Show[Take[plrLor2, All], 
      DisplayFunction \[Rule] $DisplayFunction]\)], "Input"],

Cell[BoxData[
    \(Show[Take[plt, {20}], Take[pm, 4], 
      DisplayFunction \[Rule] $DisplayFunction]\)], "Input"],

Cell[BoxData[
    \(Show[Take[plte1, {20}], pme1, 
      DisplayFunction \[Rule] $DisplayFunction]\)], "Input"],

Cell[BoxData[
    \(Show[Take[plte2, {20}], pme2, 
      DisplayFunction \[Rule] $DisplayFunction]\)], "Input"],

Cell[BoxData[
    \(Dimensions[Etab]\)], "Input"],

Cell[BoxData[
    \(Etab[\([1]\)]\)], "Input"],

Cell[BoxData[
    \(\(ListPlot[Etab[\([All, 2]\)] - Etab[\([All, 3]\)]\ \ ];\)\)], "Input"],

Cell[BoxData[
    \(\(coord = Etab[\([All, 2]\)] - Etab[\([All, 3]\)];\)\)], "Input"],

Cell[BoxData[
    \(cros = {Null}\)], "Input"],

Cell[BoxData[
    \(Do[If[\ \((coord[\([i - 1]\)] > 
              0)\)\  && \ \((coord[\([i]\)] \[LessEqual] \ 0)\), 
        cros = Append[cros, {i}]], {i, 
        2, \(Dimensions[coord]\)[\([1]\)]}]\)], "Input"],

Cell[BoxData[
    \(cros = Drop[cros, 1]\)], "Input"],

Cell[BoxData[
    \(\(\(ret\)\(=\)\(Extract[Etab[\([All, 1]\)], cros]\)\(\ \)\)\)], "Input"],

Cell[BoxData[
    \(nPoinc = 
      Table[{ret[\([i]\)], ret[\([i + 1]\)]}, {i, 
          1, \(Dimensions[ret]\)[\([1]\)] - 1}]\)], "Input"],

Cell[BoxData[
    \(ListPlot[nPoinc]\)], "Input"],

Cell[BoxData[{
    \(\(EtabTurb = 
        Import["\<../int/random/energy.dat\>"];\)\), "\[IndentingNewLine]", 
    \(\(Nk = 8000;\)\), "\[IndentingNewLine]", 
    \(\(EtabTurb = Take[EtabTurb, \(-Nk\)];\)\), "\n", 
    \(mEturb = 
      Sum[EtabTurb[\([i, 1]\)], {i, 1, Nk}]/Nk\), "\[IndentingNewLine]", 
    \(mvx2turb = 
      Sum[EtabTurb[\([i, 2]\)], {i, 1, Nk}]/Nk\), "\[IndentingNewLine]", 
    \(mvxx2turb = 
      Sum[EtabTurb[\([i, 3]\)], {i, 1, Nk}]/Nk\), "\[IndentingNewLine]", 
    \(\(cTurb = RGBColor[1, 1, 1];\)\), "\[IndentingNewLine]", 
    \(\(pmTurb = 
        ListPlot[{{mvx2turb, mvxx2turb - mvx2turb}}, 
          PlotStyle \[Rule] {RGBColor[1, 1, 1], PointSize[pt]}, 
          DisplayFunction \[Rule] Identity, 
          AspectRatio \[Rule] Automatic];\)\), "\[IndentingNewLine]", 
    \(\(pmeTurb = 
        ScatterPlot3D[{{mEc, mvx2turb, mvxx2turb - mvx2turb}}, 
          PlotStyle \[Rule] {RGBColor[1, 1, 1], PointSize[pt]}, 
          DisplayFunction \[Rule] Identity, 
          AspectRatio \[Rule] Automatic];\)\), "\[IndentingNewLine]", 
    \(\(pTurb = 
        ListPlot[
          AppendRows[TakeColumns[EtabTurb, {2}], 
            TakeColumns[EtabTurb, {3}] - TakeColumns[EtabTurb, {2}]], 
          PlotJoined \[Rule] True, 
          AspectRatio \[Rule] Automatic];\)\), "\[IndentingNewLine]", 
    \(\(pTurbE = 
        ScatterPlot3D[
          AppendRows[TakeColumns[EtabTurb, {1}], TakeColumns[EtabTurb, {2}], 
            TakeColumns[EtabTurb, {3}] - TakeColumns[EtabTurb, {2}]], 
          PlotJoined \[Rule] True, PlotRange \[Rule] All, 
          AspectRatio \[Rule] Automatic];\)\), "\[IndentingNewLine]", 
    \(\(pTurbE1 = 
        ListPlot[
          AppendRows[TakeColumns[EtabTurb, {1}], TakeColumns[EtabTurb, {2}]], 
          PlotJoined \[Rule] True, PlotRange \[Rule] All, 
          AspectRatio \[Rule] Automatic];\)\), "\[IndentingNewLine]", 
    \(\(pTurbE2 = 
        ListPlot[
          AppendRows[TakeColumns[EtabTurb, {1}], 
            TakeColumns[EtabTurb, {3}] - TakeColumns[EtabTurb, {2}]], 
          PlotJoined \[Rule] True, PlotRange \[Rule] All, 
          AspectRatio \[Rule] Automatic];\)\), "\[IndentingNewLine]", 
    \(\(coord = EtabTurb[\([All, 2]\)] - EtabTurb[\([All, 3]\)];\)\), "\n", 
    \(\(cros = {Null};\)\), "\n", 
    \(\(Do[
        If[\ \((coord[\([\)\(i - 1\)\(]\)] > 
                0)\)\  && \ \((coord[\([\)\(i\)\(]\)] \[LessEqual] \ 0)\), 
          cros = Append[cros, {i}]], {i, 
          2, \(Dimensions[coord]\)[\([\)\(1\)\(]\)]}];\)\), "\n", 
    \(\(cros = Drop[cros, 1];\)\), "\n", 
    \(\(poinc = \((Extract[EtabTurb[\([All, {1, 2}]\)], cros] + 
              Extract[EtabTurb[\([All, {1, 2}]\)], cros - 1])\)/
          2;\)\), "\n", 
    \(\(plPoincTurb = ListPlot[poinc];\)\), "\[IndentingNewLine]", 
    \(\(rPoincE = 
        Table[{poinc[\([i, 1]\)], poinc[\([i + 1, 1]\)]}, {i, 
            1, \(Dimensions[poinc]\)[\([\)\(1\)\(]\)] - 1}];\)\), "\n", 
    \(\(rPoinc1 = 
        Table[{poinc[\([i, 2]\)], poinc[\([i + 1, 2]\)]}, {i, 
            1, \(Dimensions[poinc]\)[\([\)\(1\)\(]\)] - 
              1}];\)\), "\[IndentingNewLine]", 
    \(\(plrPoincETurb = 
        ListPlot[rPoincE, PlotRange \[Rule] All, 
          PlotStyle \[Rule] {PointSize[pt]}, 
          DisplayFunction \[Rule] Identity, 
          AspectRatio \[Rule] Automatic];\)\), "\[IndentingNewLine]", 
    \(\(plrPoinc1Turb = 
        ListPlot[rPoinc1, PlotRange \[Rule] All, 
          PlotStyle \[Rule] {PointSize[pt]}, 
          DisplayFunction \[Rule] Identity, 
          AspectRatio \[Rule] Automatic];\)\)}], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(Dimensions[poinc]\)], "Input"],

Cell[BoxData[
    \(Show[plPoincE, plPoincTurb, 
      DisplayFunction \[Rule] $DisplayFunction]\)], "Input"],

Cell[BoxData[
    \(Show[Take[plPoincE, 10], 
      DisplayFunction \[Rule] $DisplayFunction]\)], "Input"],

Cell[BoxData[
    \(Show[plrPoinc1Turb, plrPoinc1, 
      DisplayFunction \[Rule] \ $DisplayFunction]\)], "Input"],

Cell[BoxData[
    \(Show[plrPoincETurb, plrPoincE, 
      DisplayFunction \[Rule] \ $DisplayFunction]\)], "Input"],

Cell[BoxData[
    \(Show[pTurbE, plte]\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(Show[pTurb, plt]\)], "Input"],

Cell[BoxData[
    \(Show[pTurbE1, plte1]\)], "Input"],

Cell[BoxData[
    \(Show[pTurbE2, plte2]\)], "Input"],

Cell[BoxData[
    \(Ec1 = Import["\<../equil/1w/steady_c.dat\>"] // Flatten\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(Ec2 = Import["\<../equil/2w/steady_c.dat\>"] // Flatten\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(Ec3 = Import["\<../equil/3w/steady_c.dat\>"] // Flatten\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(EcTW1 = Import["\<../req/w-1R/steady_c.dat\>"] // Flatten\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(EcTW1\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(EcTW2 = 
        Import["\<../req/w-2R/steady_c.dat\>"] // Flatten;\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(EcTW2\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(c1 = RGBColor[0.8, 0, 0];\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(c2 = RGBColor[0, 0.8, 0];\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(c3 = RGBColor[0, 0, 0.8];\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(p1 = 
        ListPlot[{{Ec1[\([2]\)], Ec1[\([3]\)]}}, 
          PlotStyle \[Rule] {c1, PointSize[pt]}, 
          DisplayFunction \[Rule] Identity];\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(p1e = 
        ScatterPlot3D[{Ec1}, PlotStyle \[Rule] {c1, PointSize[pt]}, 
          DisplayFunction \[Rule] Identity];\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(p2 = 
        ListPlot[{{Ec2[\([2]\)], Ec2[\([3]\)]}}, 
          PlotStyle \[Rule] {c2, PointSize[pt]}, 
          DisplayFunction \[Rule] Identity];\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(p2e = 
        ScatterPlot3D[{Ec2}, PlotStyle \[Rule] {c2, PointSize[pt]}, 
          DisplayFunction \[Rule] Identity];\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(p3 = 
        ListPlot[{{Ec3[\([2]\)], Ec3[\([3]\)]}}, 
          PlotStyle \[Rule] {c3, PointSize[pt]}, 
          DisplayFunction \[Rule] Identity];\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(p3e = 
        ScatterPlot3D[{Ec3}, PlotStyle \[Rule] {c3, PointSize[pt]}, 
          DisplayFunction \[Rule] Identity];\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(cTW1 = RGBColor[0.5, 0.5, 0];\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(pTW1 = 
        ListPlot[{{EcTW1[\([2]\)], EcTW1[\([3]\)]}}, 
          PlotStyle \[Rule] {cTW1, PointSize[pt]}, 
          DisplayFunction \[Rule] Identity];\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(pTW1e = 
        ScatterPlot3D[{EcTW1}, PlotStyle \[Rule] {cTW1, PointSize[pt]}, 
          DisplayFunction \[Rule] Identity];\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(cTW2 = RGBColor[0.5, 0, 0.5];\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(pTW2 = 
        ListPlot[{{EcTW2[\([2]\)], EcTW2[\([3]\)]}}, 
          PlotStyle \[Rule] {cTW2, PointSize[pt]}, 
          DisplayFunction \[Rule] Identity];\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(pTW2e = 
        ScatterPlot3D[{EcTW2}, PlotStyle \[Rule] {cTW2, PointSize[pt]}, 
          DisplayFunction \[Rule] Identity];\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(pAll = 
        Show[pTurb, 
          Graphics[{RGBColor[0.5, 0.5, 0.7], Thickness[thck], \ 
              Line[{{0, 0}, {0.65, 0.65}}]}], plt, pm, p1, p2, p3, pTW1, 
          pTW2, pmTurb, 
          FrameLabel \[Rule] \ {\*"\"\<<(\!\(u\_x\)\!\(\()\^2\)\)>\>\"", \
\*"\"\<<(\!\(u\_xx\)\!\(\()\^2\)\)>\>\""}, Frame \[Rule] True, Axes -> False, 
          RotateLabel \[Rule] False, 
          TextStyle \[Rule] {FontSize -> 10, FontFamily \[Rule] Times}, 
          DisplayFunction \[Rule] $DisplayFunction, ImageSize \[Rule] 600, 
          AspectRatio \[Rule] 1, PlotRange \[Rule] All];\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(pAll3D = 
        Show[pTurbE, plte, pme, p1e, p2e, p3e, pTW1e, pTW2e, 
          AxesLabel \[Rule] \ {"\<<E>\>", \
\*"\"\<<(\!\(u\_x\)\!\(\()\^2\)\)>\>\"", \
\*"\"\<<(\!\(u\_xx\)\!\(\()\^2\)\)>\>\""}, Axes \[Rule] True, 
          TextStyle \[Rule] {FontSize -> 10, FontFamily \[Rule] Times}, 
          DisplayFunction \[Rule] $DisplayFunction, ImageSize \[Rule] 600, 
          BoxRatios \[Rule] {0.8, 0.6, 0.6}, 
          PlotRange \[Rule] All];\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(Get["\<MathGL3d`OpenGLViewer`\>"];\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(MVShow3D[pAll3D, MVNewScene \[Rule] True, MVLineTubeSize \[Rule] 2.0, 
        MVPointSphereSize \[Rule] \ 0.01];\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(MVWritePOVRay["\<energy3D.pov\>"];\)\)], "Input",
  InitializationCell->True]
},
FrontEndVersion->"5.2 for X",
ScreenRectangle->{{0, 1280}, {0, 1024}},
AutoGeneratedPackage->Automatic,
WindowSize->{1280, 963},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
ShowSelection->True
]

(*******************************************************************
Cached data follows.  If you edit this Notebook file directly, not
using Mathematica, you must remove the line containing CacheID at
the top of  the file.  The cache data will then be recreated when
you save this file from within Mathematica.
*******************************************************************)

(*CellTagsOutline
CellTagsIndex->{}
*)

(*CellTagsIndex
CellTagsIndex->{}
*)

(*NotebookFileOutline
Notebook[{
Cell[1754, 51, 97, 2, 27, "Input",
  InitializationCell->True],
Cell[1854, 55, 84, 2, 27, "Input",
  InitializationCell->True],
Cell[1941, 59, 80, 2, 27, "Input",
  InitializationCell->True],
Cell[2024, 63, 77, 2, 27, "Input",
  InitializationCell->True],
Cell[2104, 67, 157, 4, 27, "Input",
  InitializationCell->True],
Cell[2264, 73, 75, 2, 27, "Input",
  InitializationCell->True],
Cell[2342, 77, 105, 2, 27, "Input",
  InitializationCell->True],
Cell[2450, 81, 107, 2, 27, "Input",
  InitializationCell->True],
Cell[2560, 85, 78, 2, 27, "Input",
  InitializationCell->True],
Cell[2641, 89, 75, 2, 27, "Input",
  InitializationCell->True],
Cell[2719, 93, 46, 1, 27, "Input"],
Cell[2768, 96, 327, 6, 27, "Input",
  InitializationCell->True],
Cell[3098, 104, 45, 1, 27, "Input"],
Cell[3146, 107, 5692, 110, 699, "Input",
  InitializationCell->True],
Cell[8841, 219, 137, 2, 27, "Input"],
Cell[8981, 223, 53, 1, 27, "Input"],
Cell[9037, 226, 107, 2, 27, "Input"],
Cell[9147, 230, 106, 2, 27, "Input"],
Cell[9256, 234, 108, 2, 27, "Input"],
Cell[9367, 238, 106, 2, 27, "Input"],
Cell[9476, 242, 116, 2, 27, "Input"],
Cell[9595, 246, 111, 2, 27, "Input"],
Cell[9709, 250, 111, 2, 27, "Input"],
Cell[9823, 254, 49, 1, 27, "Input"],
Cell[9875, 257, 46, 1, 27, "Input"],
Cell[9924, 260, 91, 1, 27, "Input"],
Cell[10018, 263, 85, 1, 27, "Input"],
Cell[10106, 266, 46, 1, 27, "Input"],
Cell[10155, 269, 215, 4, 27, "Input"],
Cell[10373, 275, 53, 1, 27, "Input"],
Cell[10429, 278, 92, 1, 27, "Input"],
Cell[10524, 281, 141, 3, 27, "Input"],
Cell[10668, 286, 49, 1, 27, "Input"],
Cell[10720, 289, 3639, 74, 411, "Input",
  InitializationCell->True],
Cell[14362, 365, 50, 1, 27, "Input"],
Cell[14415, 368, 109, 2, 27, "Input"],
Cell[14527, 372, 106, 2, 27, "Input"],
Cell[14636, 376, 114, 2, 27, "Input"],
Cell[14753, 380, 114, 2, 27, "Input"],
Cell[14870, 384, 79, 2, 27, "Input",
  InitializationCell->True],
Cell[14952, 388, 49, 1, 27, "Input"],
Cell[15004, 391, 53, 1, 27, "Input"],
Cell[15060, 394, 53, 1, 27, "Input"],
Cell[15116, 397, 116, 2, 27, "Input",
  InitializationCell->True],
Cell[15235, 401, 116, 2, 27, "Input",
  InitializationCell->True],
Cell[15354, 405, 116, 2, 27, "Input",
  InitializationCell->True],
Cell[15473, 409, 118, 2, 27, "Input",
  InitializationCell->True],
Cell[15594, 413, 66, 2, 27, "Input",
  InitializationCell->True],
Cell[15663, 417, 132, 3, 27, "Input",
  InitializationCell->True],
Cell[15798, 422, 66, 2, 27, "Input",
  InitializationCell->True],
Cell[15867, 426, 90, 2, 27, "Input",
  InitializationCell->True],
Cell[15960, 430, 90, 2, 27, "Input",
  InitializationCell->True],
Cell[16053, 434, 90, 2, 27, "Input",
  InitializationCell->True],
Cell[16146, 438, 215, 5, 27, "Input",
  InitializationCell->True],
Cell[16364, 445, 185, 4, 27, "Input",
  InitializationCell->True],
Cell[16552, 451, 215, 5, 27, "Input",
  InitializationCell->True],
Cell[16770, 458, 185, 4, 27, "Input",
  InitializationCell->True],
Cell[16958, 464, 215, 5, 27, "Input",
  InitializationCell->True],
Cell[17176, 471, 185, 4, 27, "Input",
  InitializationCell->True],
Cell[17364, 477, 94, 2, 27, "Input",
  InitializationCell->True],
Cell[17461, 481, 223, 5, 27, "Input",
  InitializationCell->True],
Cell[17687, 488, 191, 4, 27, "Input",
  InitializationCell->True],
Cell[17881, 494, 94, 2, 27, "Input",
  InitializationCell->True],
Cell[17978, 498, 223, 5, 27, "Input",
  InitializationCell->True],
Cell[18204, 505, 191, 4, 27, "Input",
  InitializationCell->True],
Cell[18398, 511, 655, 12, 68, "Input",
  InitializationCell->True],
Cell[19056, 525, 515, 10, 50, "Input",
  InitializationCell->True],
Cell[19574, 537, 99, 2, 27, "Input",
  InitializationCell->True],
Cell[19676, 541, 178, 3, 27, "Input",
  InitializationCell->True],
Cell[19857, 546, 99, 2, 27, "Input",
  InitializationCell->True]
}
]
*)



(*******************************************************************
End of Mathematica Notebook file.
*******************************************************************)

