(************** Content-type: application/mathematica **************
                     CreatedBy='Mathematica 5.2'

                    Mathematica-Compatible Notebook

This notebook can be used with any Mathematica-compatible
application, such as Mathematica, MathReader or Publicon. The data
for the notebook starts with the line containing stars above.

To get the notebook into a Mathematica-compatible application, do
one of the following:

* Save the data starting with the line of stars above into a file
  with a name ending in .nb, then open the file inside the
  application;

* Copy the data starting with the line of stars above to the
  clipboard, then use the Paste menu command inside the application.

Data for notebooks contains only printable 7-bit ASCII and can be
sent directly in email or through ftp in text mode.  Newlines can be
CR, LF or CRLF (Unix, Macintosh or MS-DOS style).

NOTE: If you modify the data for this notebook not in a Mathematica-
compatible application, you must delete the line below containing
the word CacheID, otherwise Mathematica-compatible applications may
try to use invalid cache data.

For more information on notebooks and Mathematica-compatible 
applications, contact Wolfram Research:
  web: http://www.wolfram.com
  email: info@wolfram.com
  phone: +1-217-398-0700 (U.S.)

Notebook reader applications are available free of charge from 
Wolfram Research.
*******************************************************************)

(*CacheID: 232*)


(*NotebookFileLineBreakTest
NotebookFileLineBreakTest*)
(*NotebookOptionsPosition[     27442,        810]*)
(*NotebookOutlinePosition[     28125,        834]*)
(*  CellTagsIndexPosition[     28081,        830]*)
(*WindowFrame->Normal*)



Notebook[{
Cell[BoxData[
    \(<< Graphics`Graphics3D`\)], "Input"],

Cell[BoxData[
    \(<< LinearAlgebra`MatrixManipulation`\)], "Input"],

Cell[BoxData[
    \(<< SiminosUtils`\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(<< Graphics`Legend`\)], "Input"],

Cell[BoxData[
    \(\(thck = 0.001;\)\)], "Input"],

Cell[BoxData[
    \(\(cscale = {2, 4, 4};\)\)], "Input"],

Cell[BoxData[
    \(\(Ec1 = cscale*Import["\<1w/steady_c.dat\>"] // Flatten;\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(Ec2 = cscale*Import["\<2w/steady_c.dat\>"] // Flatten;\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(Ec3 = cscale*Import["\<3w/steady_c.dat\>"] // Flatten;\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(EcTW1 = 
        cscale*Import["\<../req/w-1R/steady_c.dat\>"] // 
          Flatten;\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(EcTW1\)], "Input"],

Cell[BoxData[
    \(\(EcTW2 = 
        cscale*Import["\<../req/w-2R/steady_c.dat\>"] // 
          Flatten;\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(EcTW2\)], "Input"],

Cell[BoxData[
    \(\(pt = 0.02;\)\)], "Input"],

Cell[BoxData[
    \(\(c1 = RGBColor[0.8, 0, 0];\)\)], "Input"],

Cell[BoxData[
    \(\(c2 = RGBColor[0, 0.8, 0];\)\)], "Input"],

Cell[BoxData[
    \(\(c3 = RGBColor[0, 0, 0.8];\)\)], "Input"],

Cell[BoxData[
    \(\(p1PD = 
        ListPlot[{{Ec1[\([2]\)], Ec1[\([3]\)]}}, 
          PlotStyle \[Rule] {c1, PointSize[pt]}, 
          DisplayFunction \[Rule] Identity];\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(p1ED = 
        ListPlot[{{Ec1[\([1]\)], Ec1[\([3]\)]}}, 
          PlotStyle \[Rule] {c1, PointSize[pt]}, 
          DisplayFunction \[Rule] Identity];\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(p1EP = 
        ListPlot[{{Ec1[\([1]\)], Ec1[\([2]\)]}}, 
          PlotStyle \[Rule] {c1, PointSize[pt]}, 
          DisplayFunction \[Rule] Identity];\)\)], "Input"],

Cell[BoxData[
    \(\(p1PEdot = 
        ListPlot[{{Ec1[\([2]\)], Ec1[\([2]\)] - Ec1[\([3]\)]}}, 
          PlotStyle \[Rule] {c1, PointSize[pt]}, 
          DisplayFunction \[Rule] Identity];\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(p1DEdot = 
        ListPlot[{{Ec1[\([3]\)], Ec1[\([2]\)] - Ec1[\([3]\)]}}, 
          PlotStyle \[Rule] {c1, PointSize[pt]}, 
          DisplayFunction \[Rule] Identity];\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(p1EEdot = 
        ListPlot[{{Ec1[\([1]\)], Ec1[\([2]\)] - Ec1[\([3]\)]}}, 
          PlotStyle \[Rule] {c1, PointSize[pt]}, 
          DisplayFunction \[Rule] Identity];\)\)], "Input"],

Cell[BoxData[
    \(\(p1e = 
        ScatterPlot3D[{Ec1}, PlotStyle \[Rule] {c1, PointSize[pt]}, 
          DisplayFunction \[Rule] Identity];\)\)], "Input"],

Cell[BoxData[
    \(\(p1EPEdot = 
        ScatterPlot3D[{{Ec1[\([1]\)], Ec1[\([2]\)], 
              Ec1[\([2]\)] - Ec1[\([3]\)]}}, 
          PlotStyle \[Rule] {c1, PointSize[pt]}, 
          DisplayFunction \[Rule] Identity];\)\)], "Input"],

Cell[BoxData[
    \(\(p2PD = 
        ListPlot[{{Ec2[\([2]\)], Ec2[\([3]\)]}}, 
          PlotStyle \[Rule] {c2, PointSize[pt]}, 
          DisplayFunction \[Rule] Identity];\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(p2ED = 
        ListPlot[{{Ec2[\([1]\)], Ec2[\([3]\)]}}, 
          PlotStyle \[Rule] {c2, PointSize[pt]}, 
          DisplayFunction \[Rule] Identity];\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(p2EP = 
        ListPlot[{{Ec2[\([1]\)], Ec2[\([2]\)]}}, 
          PlotStyle \[Rule] {c2, PointSize[pt]}, 
          DisplayFunction \[Rule] Identity];\)\)], "Input"],

Cell[BoxData[
    \(\(p2PEdot = 
        ListPlot[{{Ec2[\([2]\)], Ec2[\([2]\)] - Ec2[\([3]\)]}}, 
          PlotStyle \[Rule] {c2, PointSize[pt]}, 
          DisplayFunction \[Rule] Identity];\)\)], "Input"],

Cell[BoxData[
    \(\(p2DEdot = 
        ListPlot[{{Ec2[\([3]\)], Ec2[\([2]\)] - Ec2[\([3]\)]}}, 
          PlotStyle \[Rule] {c2, PointSize[pt]}, 
          DisplayFunction \[Rule] Identity];\)\)], "Input"],

Cell[BoxData[
    \(\(p2EEdot = 
        ListPlot[{{Ec2[\([1]\)], Ec2[\([2]\)] - Ec2[\([3]\)]}}, 
          PlotStyle \[Rule] {c2, PointSize[pt]}, 
          DisplayFunction \[Rule] Identity];\)\)], "Input"],

Cell[BoxData[
    \(\(p2e = 
        ScatterPlot3D[{Ec2}, PlotStyle \[Rule] {c2, PointSize[pt]}, 
          DisplayFunction \[Rule] Identity];\)\)], "Input"],

Cell[BoxData[
    \(\(p2EPEdot = 
        ScatterPlot3D[{{Ec2[\([1]\)], Ec2[\([2]\)], 
              Ec2[\([2]\)] - Ec2[\([3]\)]}}, 
          PlotStyle \[Rule] {c2, PointSize[pt]}, 
          DisplayFunction \[Rule] Identity];\)\)], "Input"],

Cell[BoxData[
    \(\(p3PD = 
        ListPlot[{{Ec3[\([2]\)], Ec3[\([3]\)]}}, 
          PlotStyle \[Rule] {c3, PointSize[pt]}, 
          DisplayFunction \[Rule] Identity];\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(p3ED = 
        ListPlot[{{Ec3[\([1]\)], Ec3[\([3]\)]}}, 
          PlotStyle \[Rule] {c3, PointSize[pt]}, 
          DisplayFunction \[Rule] Identity];\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(p3EP = 
        ListPlot[{{Ec3[\([1]\)], Ec3[\([2]\)]}}, 
          PlotStyle \[Rule] {c3, PointSize[pt]}, 
          DisplayFunction \[Rule] Identity];\)\)], "Input"],

Cell[BoxData[
    \(\(p3PEdot = 
        ListPlot[{{Ec3[\([2]\)], Ec3[\([2]\)] - Ec3[\([3]\)]}}, 
          PlotStyle \[Rule] {c3, PointSize[pt]}, 
          DisplayFunction \[Rule] Identity];\)\)], "Input"],

Cell[BoxData[
    \(\(p3DEdot = 
        ListPlot[{{Ec3[\([3]\)], Ec3[\([2]\)] - Ec3[\([3]\)]}}, 
          PlotStyle \[Rule] {c3, PointSize[pt]}, 
          DisplayFunction \[Rule] Identity];\)\)], "Input"],

Cell[BoxData[
    \(\(p3EEdot = 
        ListPlot[{{Ec3[\([1]\)], Ec3[\([2]\)] - Ec3[\([3]\)]}}, 
          PlotStyle \[Rule] {c3, PointSize[pt]}, 
          DisplayFunction \[Rule] Identity];\)\)], "Input"],

Cell[BoxData[
    \(\(p3e = 
        ScatterPlot3D[{Ec3}, PlotStyle \[Rule] {c3, PointSize[pt]}, 
          DisplayFunction \[Rule] Identity];\)\)], "Input"],

Cell[BoxData[
    \(\(p3EPEdot = 
        ScatterPlot3D[{{Ec3[\([1]\)], Ec3[\([2]\)], 
              Ec3[\([2]\)] - Ec3[\([3]\)]}}, 
          PlotStyle \[Rule] {c3, PointSize[pt]}, 
          DisplayFunction \[Rule] Identity];\)\)], "Input"],

Cell[BoxData[
    \(\(cTW1 = RGBColor[0.6, 0.4, 0];\)\)], "Input"],

Cell[BoxData[
    \(\(pTW1 = 
        ListPlot[{{EcTW1[\([2]\)], EcTW1[\([3]\)]}}, 
          PlotStyle \[Rule] {cTW1, PointSize[pt]}, 
          DisplayFunction \[Rule] Identity];\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(pTW1ED = 
        ListPlot[{{EcTW1[\([1]\)], EcTW1[\([3]\)]}}, 
          PlotStyle \[Rule] {cTW1, PointSize[pt]}, 
          DisplayFunction \[Rule] Identity];\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(pTW1EP = 
        ListPlot[{{EcTW1[\([1]\)], EcTW1[\([2]\)]}}, 
          PlotStyle \[Rule] {cTW1, PointSize[pt]}, 
          DisplayFunction \[Rule] Identity];\)\)], "Input"],

Cell[BoxData[
    \(\(pTW1e = 
        ScatterPlot3D[{EcTW1}, PlotStyle \[Rule] {cTW1, PointSize[pt]}, 
          DisplayFunction \[Rule] Identity];\)\)], "Input"],

Cell[BoxData[
    \(\(cTW2 = RGBColor[0.5, 0, 0.5];\)\)], "Input"],

Cell[BoxData[
    \(\(pTW2 = 
        ListPlot[{{EcTW2[\([2]\)], EcTW2[\([3]\)]}}, 
          PlotStyle \[Rule] {cTW2, PointSize[pt]}, 
          DisplayFunction \[Rule] Identity];\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(pTW2ED = 
        ListPlot[{{EcTW2[\([1]\)], EcTW2[\([3]\)]}}, 
          PlotStyle \[Rule] {cTW2, PointSize[pt]}, 
          DisplayFunction \[Rule] Identity];\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(pTW2EP = 
        ListPlot[{{EcTW2[\([1]\)], EcTW2[\([2]\)]}}, 
          PlotStyle \[Rule] {cTW2, PointSize[pt]}, 
          DisplayFunction \[Rule] Identity];\)\)], "Input"],

Cell[BoxData[
    \(\(pTW2e = 
        ScatterPlot3D[{EcTW2}, PlotStyle \[Rule] {cTW2, PointSize[pt]}, 
          DisplayFunction \[Rule] Identity];\)\)], "Input"],

Cell[BoxData[
    \(\(Etab = ruslanizE@Import["\<../int/random/energy.dat\>"];\)\)], "Input"],

Cell[BoxData[
    \(Dimensions[Etab]\)], "Input"],

Cell[BoxData[
    \(\(Etab = Take[Etab, \(-80000\)];\)\)], "Input"],

Cell[BoxData[
    \(\(L = 22.0;\)\)], "Input"],

Cell[BoxData[
    \(Dimensions[Etab]\)], "Input"],

Cell[BoxData[
    \(\(Nk = 10000;\)\)], "Input"],

Cell[BoxData[
    \(\(dS = 0.02;\)\)], "Input"],

Cell["Use this for plots:", "Text"],

Cell[BoxData[
    \(\(turbS = interp1Traj[Take[Etab, {1, 10000}], 1, dS];\)\)], "Input"],

Cell[BoxData[
    \(Dimensions[turbS]\)], "Input"],

Cell[BoxData[
    \(\(turbS = elimPoints[Take[Etab, {1, 10000}], 0.005];\)\)], "Input"],

Cell[BoxData[
    \(Dimensions[turbS]\)], "Input"],

Cell[BoxData[
    \(turbS[\([1]\)]\)], "Input"],

Cell[BoxData[
    \(plotEtab[turbS, "\<turb\>", cTurb, pt, thck/10]\)], "Input"],

Cell["Use Etab to calculate mean values:", "Text"],

Cell[BoxData[
    \(mEc = Sum[Etab[\([i, 1]\)], {i, 1, Nk}]/Nk\)], "Input"],

Cell[BoxData[
    \(mvx2 = Sum[Etab[\([i, 2]\)], {i, 1, Nk}]/Nk\)], "Input"],

Cell[BoxData[
    \(mvxx2 = Sum[Etab[\([i, 3]\)], {i, 1, Nk}]/Nk\)], "Input"],

Cell[BoxData[
    \(\(cTurb = RGBColor[0.8, 0.8, 0.8];\)\)], "Input"],

Cell[BoxData[
    \(pmTurbPD = 
      Show[ListPlot[{{mvx2, mvxx2}}, PlotStyle \[Rule] {PointSize[pt]}, 
          DisplayFunction \[Rule] Identity]]\)], "Input"],

Cell[BoxData[
    \(pmTurbED = 
      Show[ListPlot[{{mEc, mvxx2}}, PlotStyle \[Rule] {PointSize[pt]}, 
          DisplayFunction \[Rule] Identity]]\)], "Input"],

Cell[BoxData[
    \(pmTurbEP = 
      Show[ListPlot[{{mEc, mvx2}}, PlotStyle \[Rule] {PointSize[pt]}, 
          DisplayFunction \[Rule] Identity]]\)], "Input"],

Cell[BoxData[
    \(\(pmeTurb = 
        ScatterPlot3D[{{mEc, mvx2, mvxx2}}, 
          PlotStyle \[Rule] {cTurb, PointSize[pt]}, 
          DisplayFunction \[Rule] Identity];\)\)], "Input"],

Cell[BoxData[
    \( (*pTurbPD = 
        ListPlot[TakeColumns[turbS, {2, 3}], 
          PlotStyle \[Rule] {cTurb, Thickness[thck/10]}, 
          PlotJoined \[Rule] True]; \n
      pTurbED = 
        ListPlot[TakeColumns[turbS, {1, 3, 2}], 
          PlotStyle \[Rule] {cTurb, PointSize[pt/10]}, 
          PlotJoined \[Rule] True]; \n
      pTurbPEdot = 
        ListPlot[
          AppendRows[TakeColumns[turbS, {2}], 
            TakeColumns[turbS, {2}] - TakeColumns[turbS, {3}]], 
          PlotStyle \[Rule] {cTurb, PointSize[pt/10]}, 
          PlotJoined \[Rule] True]; \n
      pTurbDEdot = 
        ListPlot[
          AppendRows[TakeColumns[turbS, {3}], 
            TakeColumns[turbS, {2}] - TakeColumns[turbS, {3}]], 
          PlotStyle \[Rule] {cTurb, PointSize[pt/10]}, 
          PlotJoined \[Rule] True]; \n
      pTurbEEdot = 
        ListPlot[
          AppendRows[TakeColumns[turbS, {1}], 
            TakeColumns[turbS, {2}] - TakeColumns[turbS, {3}]], 
          PlotStyle \[Rule] {cTurb, PointSize[pt/10]}, 
          PlotJoined \[Rule] True]; \n
      pTurbE = ScatterPlot3D[turbS, PlotJoined \[Rule] True, 
          PlotStyle \[Rule] {cTurb, PointSize[pt]}, 
          PlotRange \[Rule] All];*) \)], "Input"],

Cell[BoxData[
    \(\(\(\[IndentingNewLine]\)\( (*\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ *) \
\)\)\)], "Input"],

Cell[BoxData[
    \(cT19 = Hue[ .6]; cT32 = Hue[ .1]; cT46 = Hue[ .17]; 
    cT55 = Hue[ .22];\)], "Input"],

Cell[BoxData[
    \(plotEtabDir["\<../rpo/T19.0d0\>", cT19, 0.8  pt, \ 4  thck]\)], "Input"],

Cell[BoxData[
    \(Show[pPD["\<turb\>"], pPD["\<T19.0d0\>"], 
      DisplayFunction \[Rule] $DisplayFunction]\)], "Input"],

Cell[BoxData[{
    \(plotEtabDir["\<../rpo/T32.80d10.96\>", cT32, pt, 
      4\ thck]\), "\[IndentingNewLine]", 
    \( (*plotEtabDir["\<../rpo/T46.51d7.76\>", cT46, 0.8  pt, 
          4\ thck]\[IndentingNewLine]plotEtabDir["\<../rpo/T55.6d-5.2\>", 
          cT55, 0.8  pt, 4\ thck]*) \)}], "Input"],

Cell[BoxData[
    \( (*Show[pTurbPD, 
        Graphics[{RGBColor[0.5, 0.5, 0.7], Thickness[thck], \ 
            Line[{{0, 0}, {0.65, 0.65}}]}], pPD["\<T19.0d0\>"], 
        pmPD["\<T19.0d0\>"], pPD["\<T32.80d10.96\>"], pPD["\<T46.51d7.76\>"], 
        pPD["\<T55.6d-5.2\>"]]*) \)], "Input"],

Cell[BoxData[
    \(Show[pmTurbPD, pmPD["\<T32.80d10.96\>"], 
      DisplayFunction \[Rule] $DisplayFunction]\)], "Input"],

Cell[BoxData[
    \(\(pAllPD = 
        Show[Graphics[{RGBColor[1, 1, 1], Thickness[thck], \ 
              Line[{{0, 0}, {2.5, 2.5}}]}], pPD["\<turb\>"], 
          pPD["\<T32.80d10.96\>"], p1PD, p2PD, p3PD, pTW1, pTW2, pmTurbPD, 
          pmPD["\<T32.80d10.96\>"], FrameLabel \[Rule] \ {"\<P\>", "\<D\>"}, 
          Frame \[Rule] True, Axes -> False, RotateLabel \[Rule] False, 
          TextStyle \[Rule] {FontSize \[Rule] 26, 
              FontFamily \[Rule] Helvetica}, 
          DisplayFunction \[Rule] $DisplayFunction, ImageSize \[Rule] 600, 
          AspectRatio \[Rule] 1, PlotRange \[Rule] All, 
          FrameTicks \[Rule] \ {Range[0, 2.4, 0.6], Range[0, 2.4, 0.6], None, 
              None}];\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(Export["\<energyBalancePlot.eps\>", pAllPD, "\<EPS\>", 
      ConversionOptions \[Rule] {"\<IncludeSpecialFonts\>" \[Rule] 
            True, "\<ImageSize\>" \[Rule] 72*4}]\)], "Input"],

Cell[BoxData[
    \(\(pAllED = 
        Show[pED["\<turb\>"], pED["\<T32.80d10.96\>"], pmTurbED, 
          pmED["\<T32.80d10.96\>"], p1ED, p2ED, p3ED, pTW1ED, pTW2ED, 
          FrameLabel \[Rule] \ {"\<E\>", "\<D\>"}, Frame \[Rule] True, 
          Axes -> False, RotateLabel \[Rule] False, 
          TextStyle \[Rule] {FontSize \[Rule] 26, 
              FontFamily \[Rule] Helvetica}, 
          DisplayFunction \[Rule] $DisplayFunction, ImageSize \[Rule] 600, 
          AspectRatio \[Rule] 1, PlotRange \[Rule] All, 
          FrameTicks \[Rule] \ {Range[0, 1.6, 0.3], Range[0, 2.4, 0.6], None, 
              None}];\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(pAllEP = 
        Show[pEP["\<turb\>"], pEP["\<T32.80d10.96\>"], pmTurbEP, 
          pmEP["\<T32.80d10.96\>"], p1EP, p2EP, p3EP, pTW1EP, pTW2EP, 
          FrameLabel \[Rule] \ {"\<E\>", "\<P\>"}, Frame \[Rule] True, 
          Axes -> False, RotateLabel \[Rule] False, 
          TextStyle \[Rule] {FontSize \[Rule] 26, 
              FontFamily \[Rule] Helvetica}, 
          DisplayFunction \[Rule] $DisplayFunction, ImageSize \[Rule] 600, 
          AspectRatio \[Rule] 1, PlotRange \[Rule] All, 
          FrameTicks \[Rule] \ {Range[0, 1.6, 0.3], Range[0, 2.4, 0.6], None, 
              None}];\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(Export["\<equivaEP.eps\>", pAllEP, "\<EPS\>", 
      ConversionOptions \[Rule] {"\<IncludeSpecialFonts\>" \[Rule] 
            True, "\<ImageSize\>" \[Rule] 72*4}]\)], "Input"],

Cell[CellGroupData[{

Cell["Start Drawing Connections", "Subsection"],

Cell[BoxData[
    \(Clear[plotEconn, plotEconnDir]\)], "Input"],

Cell[BoxData[
    \(dropRepeats[x_, prec_] := 
      UnsortedUnion[SetPrecision[x, prec]]\)], "Input"],

Cell[BoxData[
    \(plotEconnDir[dir_, c_, rskip_:  1, ds_:  0.001, pt_:  0.01, 
        thck_:  0.005] := 
      Module[{econn, label}, \[IndentingNewLine]econn = 
          ruslanizE@Import[dir <> "\</energy.dat\>"]; label = toDir[dir]; 
        plotEconn[econn, label, c, rskip, ds, pt, thck]]\)], "Input"],

Cell[BoxData[
    \(plotEconn[econn_, label_, c_, rskip_:  1, ds_:  0.001, pt_:  0.01, 
        thck_:  0.005] := 
      Module[{sconn, dif, cros}, \[IndentingNewLine]\ 
        dif = Table[
            Norm[econn[\([i]\)] - econn[\([i - 1]\)]], {i, 
              2, \(Dimensions[econn]\)[\([1]\)]}]; \ cros = {Null}; 
        Do[If[dif[\([\)\(i\)\(]\)] > ds, cros = Append[cros, {i}]], {i, 
            1, \(Dimensions[dif]\)[\([\)\(1\)\(]\)]}]; cros = Drop[cros, 1]; 
        sconn = Extract[econn, cros]; plotEtab[sconn, label, c, pt, thck]; 
        label]\)], "Input"],

Cell[BoxData[
    \(SetAccuracy[\[Pi], 5]\)], "Input"],

Cell[BoxData[
    \(plotEconnDir["\<../conn/3wA2w\>", RGBColor[0, 0, 0.8]]\)], "Input"],

Cell[BoxData[
    \(Show[pPD["\<3wA2w\>"], 
      DisplayFunction \[Rule] $DisplayFunction]\)], "Input"],

Cell[BoxData[
    \(plotEconnDir["\<../conn/3wA2wMinus\>", RGBColor[0, 0.7, 1]]\)], "Input"],

Cell[BoxData[
    \(Show[pPD["\<3wA2wMinus\>"], 
      DisplayFunction \[Rule] $DisplayFunction]\)], "Input"],

Cell[BoxData[
    \(\(v2w3w = Import["\<../manif/2w/find2w3w/v.dat\>"];\)\)], "Input"],

Cell[BoxData[
    \(\(v2w3w = Take[v2w3w, \(Dimensions[v2w3w]\)[\([1]\)]/3];\)\)], "Input"],

Cell[BoxData[
    \( (*ListDensityPlot[v2w3w, Mesh \[Rule] False]*) \)], "Input"],

Cell[BoxData[
    \(\(e2w3w = ruslanizE@energyTraj[v2w3w, L];\)\)], "Input"],

Cell[BoxData[
    \(\(?dropRepeats\)\)], "Input"],

Cell[BoxData[
    \(dropDimRepeats[x_List] := Module[\({xtmp}\)\(,\)]\)], "Input"],

Cell[BoxData[
    \(Clear[UnsortedUnion]\)], "Input"],

Cell[BoxData[
    \(UnsortedUnion[x_] := 
      Module[{f}, f[y_] := \((f[y] = Sequence[]; y)\); f /@ x]\)], "Input"],

Cell[BoxData[
    \(plotEconn[e2w3w, "\<2w3w\>", RGBColor[0, 1, 0], 1]\)], "Input"],

Cell[BoxData[
    \(Show[pPEdot["\<2w3w\>"], p1PEdot, p2PEdot, p3PEdot, 
      FrameLabel \[Rule] \ {"\<P\>", \*"\"\<\!\(E\& . \)\>\""}, 
      Frame \[Rule] True, Axes -> False, RotateLabel \[Rule] False, 
      TextStyle \[Rule] {FontSize \[Rule] 26, FontFamily \[Rule] Helvetica}, 
      DisplayFunction \[Rule] $DisplayFunction, ImageSize \[Rule] 600, 
      AspectRatio \[Rule] 1, PlotRange \[Rule] All, 
      FrameTicks \[Rule] \ {Range[0, 2.4, 0.6], Range[\(-0.2\), 0.2, 0.2], 
          None, None}]\)], "Input"],

Cell[BoxData[
    \(\(v1w3w = Import["\<../manif/1w/find1w3w/v.dat\>"];\)\)], "Input"],

Cell[BoxData[
    \(\(v1w3w = Take[v1w3w, \(Dimensions[v1w3w]\)[\([1]\)]/3];\)\)], "Input"],

Cell[BoxData[
    \(ListDensityPlot[v1w3w, Mesh \[Rule] False]\)], "Input"],

Cell[BoxData[
    \(\(e1w3w = ruslanizE@energyTraj[v1w3w, L];\)\)], "Input"],

Cell[BoxData[
    \(plotEtab[e1w3w, "\<1w3w\>", RGBColor[1, 0, 0]]\)], "Input"],

Cell[BoxData[
    \(\(Show[pPD["\<turb\>"], 
        Graphics[{RGBColor[0.5, 0.5, 0.7], Thickness[4  thck], \ 
            Line[{{0, 0}, {0.65, 0.65}}]}], pPD["\<T32.80d10.96\>"], 
        pPD["\<3wA2w\>"], pPD["\<3wA2wMinus\>"], p1PD, p2PD, p3PD, pTW1, 
        pTW2, pmTurbPD, pmPD["\<T32.80d10.96\>"], pPD["\<2w3w\>"], 
        pPD["\<1w3w\>"], FrameLabel \[Rule] \ {"\<P\>", "\<D\>"}, 
        Frame \[Rule] True, Axes -> False, RotateLabel \[Rule] False, 
        TextStyle \[Rule] {FontSize \[Rule] 26, 
            FontFamily \[Rule] Helvetica}, 
        DisplayFunction \[Rule] $DisplayFunction, ImageSize \[Rule] 600, 
        AspectRatio \[Rule] 1, PlotRange \[Rule] All, 
        FrameTicks \[Rule] \ {Range[0, 2.4, 0.6], Range[0, 2.4, 0.6], None, 
            None}];\)\)], "Input"],

Cell[BoxData[
    \(connPEdot = 
      Show[pPEdot["\<turb\>"], pPEdot["\<3wA2w\>"], pPEdot["\<1w3w\>"], 
        pPEdot["\<2w3w\>"], pPEdot["\<3wA2wMinus\>"], p1PEdot, p2PEdot, 
        p3PEdot, FrameLabel \[Rule] \ {"\<P\>", \*"\"\<\!\(E\& . \)\>\""}, 
        Frame \[Rule] True, Axes -> False, RotateLabel \[Rule] False, 
        TextStyle \[Rule] {FontSize \[Rule] 26, 
            FontFamily \[Rule] Helvetica}, 
        DisplayFunction \[Rule] $DisplayFunction, ImageSize \[Rule] 600, 
        AspectRatio \[Rule] 1, PlotRange \[Rule] All, 
        FrameTicks \[Rule] \ {Range[0, 2.4, 0.6], Range[\(-0.2\), 0.2, 0.2], 
            None, None}]\)], "Input"],

Cell[BoxData[
    \(Export["\<connPEdot.eps\>", connPEdot, "\<EPS\>", 
      ConversionOptions \[Rule] {"\<IncludeSpecialFonts\>" \[Rule] 
            True, "\<ImageSize\>" \[Rule] 72*4}]\)], "Input"],

Cell[BoxData[
    \(Show[pDEdot["\<turb\>"], pDEdot["\<3wA2w\>"], pDEdot["\<3wA2wMinus\>"], 
      pDEdot["\<1w3w\>"], pDEdot["\<2w3w\>"], p1DEdot, p2DEdot, p3DEdot, 
      DisplayFunction \[Rule] $DisplayFunction, 
      FrameLabel \[Rule] \ {"\<D\>", \*"\"\<\!\(E\& . \)\>\""}, 
      Frame \[Rule] True, Axes -> False, RotateLabel \[Rule] False, 
      TextStyle \[Rule] {FontSize \[Rule] 26, FontFamily \[Rule] Helvetica}, 
      DisplayFunction \[Rule] $DisplayFunction, ImageSize \[Rule] 600, 
      AspectRatio \[Rule] 1, PlotRange \[Rule] All, 
      FrameTicks \[Rule] \ {Range[0, 2.4, 0.6], {\(-0.2\), 0, 0.2}, None, 
          None}]\)], "Input"],

Cell[BoxData[
    \(Show[pEEdot["\<turb\>"], pEEdot["\<3wA2w\>"], pEEdot["\<3wA2wMinus\>"], 
      pEEdot["\<1w3w\>"], pEEdot["\<2w3w\>"], p1EEdot, p2EEdot, p3EEdot, 
      DisplayFunction \[Rule] $DisplayFunction, 
      FrameLabel \[Rule] \ {"\<E\>", \*"\"\<\!\(E\& . \)\>\""}, 
      Frame \[Rule] True, Axes -> False, RotateLabel \[Rule] False, 
      TextStyle \[Rule] {FontSize \[Rule] 26, FontFamily \[Rule] Helvetica}, 
      DisplayFunction \[Rule] $DisplayFunction, ImageSize \[Rule] 600, 
      AspectRatio \[Rule] 1, PlotRange \[Rule] All, 
      FrameTicks \[Rule] \ {Range[0, 1.6, 0.3], {\(-0.2\), 0, 0.2}, None, 
          None}]\)], "Input"],

Cell[BoxData[
    \(connEP = 
      Show[pEP["\<turb\>"]\ , pEP["\<3wA2w\>"], pEP["\<3wA2wMinus\>"], 
        pEP["\<1w3w\>"], pEP["\<2w3w\>"], p1EP, p2EP, p3EP, 
        DisplayFunction \[Rule] $DisplayFunction, 
        FrameLabel \[Rule] \ {"\<E\>", "\<P\>"}, Frame \[Rule] True, 
        Axes -> False, RotateLabel \[Rule] False, 
        TextStyle \[Rule] {FontSize \[Rule] 26, 
            FontFamily \[Rule] Helvetica}, 
        DisplayFunction \[Rule] $DisplayFunction, ImageSize \[Rule] 600, 
        AspectRatio \[Rule] 1, PlotRange \[Rule] All, 
        FrameTicks \[Rule] \ {Range[0, 1.6, 0.3], Range[0, 2.4, 0.6], None, 
            None}]\)], "Input"],

Cell[BoxData[
    \(Export["\<connEP.eps\>", connEP, "\<EPS\>", 
      ConversionOptions \[Rule] {"\<IncludeSpecialFonts\>" \[Rule] 
            True, "\<ImageSize\>" \[Rule] 72*4}]\)], "Input"],

Cell[BoxData[
    \(Show[pPD["\<turb\>"]\ , pPD["\<3wA2w\>"], pPD["\<3wA2wMinus\>"], 
      pPD["\<1w3w\>"], pPD["\<2w3w\>"], p1PD, p2PD, p3PD, 
      DisplayFunction \[Rule] $DisplayFunction, 
      PlotRange \[Rule] All]\)], "Input"],

Cell[BoxData[
    \(\(pAll3D = 
        Show[pEPEdot["\<turb\>"] (*\(,\)\(pEPEdot["\<T32.80d10.96\>"]\)*) , 
          pEPEdot["\<3wA2w\>"], pEPEdot["\<3wA2wMinus\>"], 
          pEPEdot["\<2w3w\>"], pEPEdot["\<1w3w\>"], Axes \[Rule] True, 
          TextStyle \[Rule] {FontSize -> 10, FontFamily \[Rule] Times}, 
          DisplayFunction \[Rule] $DisplayFunction, ImageSize \[Rule] 600, 
          BoxRatios \[Rule] {0.8, 0.6, 0.6}, 
          PlotRange \[Rule] All];\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(Get["\<MathGL3d`OpenGLViewer`\>"];\)\)], "Input"],

Cell[BoxData[
    \(mvtube = 0.00; mvsphere = 0.01;\)], "Input"],

Cell[BoxData[
    \(MVShow3D[
      Show[pEPEdot["\<turb\>"], p1EPEdot, p2EPEdot, p3EPEdot, 
        pEPEdot["\<3wA2w\>"], pEPEdot["\<3wA2wMinus\>"], pEPEdot["\<2w3w\>"], 
        pEPEdot["\<1w3w\>"]], MVNewScene \[Rule] True, 
      MVLineTubeSize \[Rule] mvtube, 
      MVPointSphereSize \[Rule] mvsphere]\)], "Input"],

Cell[BoxData[
    \(MVShow3D[Show[pEPEdot["\<turb\>"]], MVNewScene \[Rule] True, 
      MVLineTubeSize \[Rule] mvtube, 
      MVPointSphereSize \[Rule] mvsphere]\)], "Input"],

Cell[BoxData[
    \(MVWritePOVRay["\<turbEPEdot.pov\>"]\)], "Input"],

Cell[BoxData[
    \(MVClose[]\)], "Input"],

Cell[BoxData[
    \(\(Get["\<MathGL3d`OpenGLViewer`\>"];\)\)], "Input"],

Cell[BoxData[
    \(mvtube = 0.005; mvsphere = 1;\)], "Input"],

Cell[BoxData[
    \(MVShow3D[
      Show[p1EPEdot, p3EPEdot, p2EPEdot, pEPEdot["\<3wA2w\>"], 
        pEPEdot["\<3wA2wMinus\>"], pEPEdot["\<2w3w\>"], pEPEdot["\<1w3w\>"]], 
      MVNewScene \[Rule] True, MVLineTubeSize \[Rule] mvtube, 
      MVPointSphereSize \[Rule] mvsphere]\)], "Input"],

Cell[BoxData[
    \(MVWritePOVRay["\<connEPEdot.pov\>"]\)], "Input"],

Cell[BoxData[
    \(MVClose[]\)], "Input"],

Cell[BoxData[
    \(\(\(\[IndentingNewLine]\)\(\[IndentingNewLine]\)\(\[IndentingNewLine]\)\
\)\)], "Input"],

Cell[BoxData[
    \(\(econ = ruslanizE@Import["\<../conn/3wA2w/energy.dat\>"];\)\)], "Input"],

Cell[BoxData[
    \(Dimensions[econ]\)], "Input"],

Cell[BoxData[
    \(\(dif = 
        Table[Norm[econ[\([i]\)] - econ[\([i - 1]\)]], {i, 
            2, \(Dimensions[econ]\)[\([1]\)]}];\)\)], "Input"],

Cell[BoxData[
    \(ListPlot[\ dif, PlotRange \[Rule] All]\)], "Input"],

Cell[BoxData[
    \(Dimensions[dif]\)], "Input"],

Cell[BoxData[
    \(plotEconn[Take[econ, {1700, 2000}], "\<test\>", 
      RGBColor[0, 0, 0]]\)], "Input"],

Cell[BoxData[
    \(\(cros = {Null};\)\)], "Input"],

Cell[BoxData[
    \(\(Do[
        If[dif[\([i]\)] > 0.001, cros = Append[cros, {i}]], {i, 
          1, \(Dimensions[dif]\)[\([1]\)]}];\)\)], "Input"],

Cell[BoxData[
    \(Dimensions[cros]\)], "Input"],

Cell[BoxData[
    \(cros[\([2]\)]\)], "Input"],

Cell[BoxData[
    \(cros[\([4]\)]\)], "Input"],

Cell[BoxData[
    \(\(cros = Drop[cros, 1];\)\)], "Input"],

Cell[BoxData[
    \(\(pconn = Extract[econ, cros];\)\)], "Input"],

Cell[BoxData[
    \(plotEconn[pconn, "\<test2\>", RGBColor[0, 0, 0]]\)], "Input"],

Cell[BoxData[
    \(Show[pPD["\<test\>"], 
      DisplayFunction \[Rule] $DisplayFunction]\)], "Input"],

Cell[BoxData[
    \(Show[pPD["\<test2\>"], 
      DisplayFunction \[Rule] $DisplayFunction]\)], "Input"]
}, Open  ]]
},
FrontEndVersion->"5.2 for X",
ScreenRectangle->{{0, 1280}, {0, 1024}},
AutoGeneratedPackage->Automatic,
WindowSize->{1272, 950},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
ShowSelection->True
]

(*******************************************************************
Cached data follows.  If you edit this Notebook file directly, not
using Mathematica, you must remove the line containing CacheID at
the top of  the file.  The cache data will then be recreated when
you save this file from within Mathematica.
*******************************************************************)

(*CellTagsOutline
CellTagsIndex->{}
*)

(*CellTagsIndex
CellTagsIndex->{}
*)

(*NotebookFileOutline
Notebook[{
Cell[1754, 51, 56, 1, 27, "Input"],
Cell[1813, 54, 69, 1, 27, "Input"],
Cell[1885, 57, 77, 2, 27, "Input",
  InitializationCell->True],
Cell[1965, 61, 52, 1, 27, "Input"],
Cell[2020, 64, 50, 1, 27, "Input"],
Cell[2073, 67, 56, 1, 27, "Input"],
Cell[2132, 70, 119, 2, 27, "Input",
  InitializationCell->True],
Cell[2254, 74, 119, 2, 27, "Input",
  InitializationCell->True],
Cell[2376, 78, 119, 2, 27, "Input",
  InitializationCell->True],
Cell[2498, 82, 150, 4, 27, "Input",
  InitializationCell->True],
Cell[2651, 88, 38, 1, 27, "Input"],
Cell[2692, 91, 150, 4, 27, "Input",
  InitializationCell->True],
Cell[2845, 97, 38, 1, 27, "Input"],
Cell[2886, 100, 47, 1, 27, "Input"],
Cell[2936, 103, 62, 1, 27, "Input"],
Cell[3001, 106, 62, 1, 27, "Input"],
Cell[3066, 109, 62, 1, 27, "Input"],
Cell[3131, 112, 217, 5, 27, "Input",
  InitializationCell->True],
Cell[3351, 119, 217, 5, 27, "Input",
  InitializationCell->True],
Cell[3571, 126, 189, 4, 27, "Input"],
Cell[3763, 132, 235, 5, 27, "Input",
  InitializationCell->True],
Cell[4001, 139, 235, 5, 27, "Input",
  InitializationCell->True],
Cell[4239, 146, 207, 4, 27, "Input"],
Cell[4449, 152, 157, 3, 27, "Input"],
Cell[4609, 157, 242, 5, 27, "Input"],
Cell[4854, 164, 217, 5, 27, "Input",
  InitializationCell->True],
Cell[5074, 171, 217, 5, 27, "Input",
  InitializationCell->True],
Cell[5294, 178, 189, 4, 27, "Input"],
Cell[5486, 184, 207, 4, 27, "Input"],
Cell[5696, 190, 207, 4, 27, "Input"],
Cell[5906, 196, 207, 4, 27, "Input"],
Cell[6116, 202, 157, 3, 27, "Input"],
Cell[6276, 207, 242, 5, 27, "Input"],
Cell[6521, 214, 217, 5, 27, "Input",
  InitializationCell->True],
Cell[6741, 221, 217, 5, 27, "Input",
  InitializationCell->True],
Cell[6961, 228, 189, 4, 27, "Input"],
Cell[7153, 234, 207, 4, 27, "Input"],
Cell[7363, 240, 207, 4, 27, "Input"],
Cell[7573, 246, 207, 4, 27, "Input"],
Cell[7783, 252, 157, 3, 27, "Input"],
Cell[7943, 257, 242, 5, 27, "Input"],
Cell[8188, 264, 66, 1, 27, "Input"],
Cell[8257, 267, 223, 5, 27, "Input",
  InitializationCell->True],
Cell[8483, 274, 225, 5, 27, "Input",
  InitializationCell->True],
Cell[8711, 281, 197, 4, 27, "Input"],
Cell[8911, 287, 163, 3, 27, "Input"],
Cell[9077, 292, 66, 1, 27, "Input"],
Cell[9146, 295, 223, 5, 27, "Input",
  InitializationCell->True],
Cell[9372, 302, 225, 5, 27, "Input",
  InitializationCell->True],
Cell[9600, 309, 197, 4, 27, "Input"],
Cell[9800, 315, 163, 3, 27, "Input"],
Cell[9966, 320, 93, 1, 27, "Input"],
Cell[10062, 323, 49, 1, 27, "Input"],
Cell[10114, 326, 67, 1, 27, "Input"],
Cell[10184, 329, 46, 1, 27, "Input"],
Cell[10233, 332, 49, 1, 27, "Input"],
Cell[10285, 335, 48, 1, 27, "Input"],
Cell[10336, 338, 47, 1, 27, "Input"],
Cell[10386, 341, 35, 0, 32, "Text"],
Cell[10424, 343, 88, 1, 27, "Input"],
Cell[10515, 346, 50, 1, 27, "Input"],
Cell[10568, 349, 87, 1, 27, "Input"],
Cell[10658, 352, 50, 1, 27, "Input"],
Cell[10711, 355, 47, 1, 27, "Input"],
Cell[10761, 358, 80, 1, 27, "Input"],
Cell[10844, 361, 50, 0, 32, "Text"],
Cell[10897, 363, 75, 1, 27, "Input"],
Cell[10975, 366, 76, 1, 27, "Input"],
Cell[11054, 369, 77, 1, 27, "Input"],
Cell[11134, 372, 69, 1, 27, "Input"],
Cell[11206, 375, 162, 3, 27, "Input"],
Cell[11371, 380, 161, 3, 27, "Input"],
Cell[11535, 385, 160, 3, 27, "Input"],
Cell[11698, 390, 190, 4, 27, "Input"],
Cell[11891, 396, 1237, 29, 107, "Input"],
Cell[13131, 427, 112, 2, 43, "Input"],
Cell[13246, 431, 107, 2, 27, "Input"],
Cell[13356, 435, 92, 1, 27, "Input"],
Cell[13451, 438, 123, 2, 27, "Input"],
Cell[13577, 442, 301, 5, 59, "Input"],
Cell[13881, 449, 291, 5, 43, "Input"],
Cell[14175, 456, 122, 2, 27, "Input"],
Cell[14300, 460, 756, 13, 59, "Input",
  InitializationCell->True],
Cell[15059, 475, 205, 3, 27, "Input"],
Cell[15267, 480, 667, 12, 59, "Input",
  InitializationCell->True],
Cell[15937, 494, 667, 12, 59, "Input",
  InitializationCell->True],
Cell[16607, 508, 196, 3, 27, "Input"],

Cell[CellGroupData[{
Cell[16828, 515, 47, 0, 38, "Subsection"],
Cell[16878, 517, 63, 1, 27, "Input"],
Cell[16944, 520, 102, 2, 27, "Input"],
Cell[17049, 524, 309, 5, 43, "Input"],
Cell[17361, 531, 574, 10, 59, "Input"],
Cell[17938, 543, 54, 1, 27, "Input"],
Cell[17995, 546, 87, 1, 27, "Input"],
Cell[18085, 549, 104, 2, 27, "Input"],
Cell[18192, 553, 92, 1, 27, "Input"],
Cell[18287, 556, 109, 2, 27, "Input"],
Cell[18399, 560, 86, 1, 27, "Input"],
Cell[18488, 563, 91, 1, 27, "Input"],
Cell[18582, 566, 81, 1, 27, "Input"],
Cell[18666, 569, 76, 1, 27, "Input"],
Cell[18745, 572, 49, 1, 27, "Input"],
Cell[18797, 575, 82, 1, 27, "Input"],
Cell[18882, 578, 53, 1, 27, "Input"],
Cell[18938, 581, 117, 2, 27, "Input"],
Cell[19058, 585, 83, 1, 27, "Input"],
Cell[19144, 588, 521, 8, 67, "Input"],
Cell[19668, 598, 86, 1, 27, "Input"],
Cell[19757, 601, 91, 1, 27, "Input"],
Cell[19851, 604, 75, 1, 27, "Input"],
Cell[19929, 607, 76, 1, 27, "Input"],
Cell[20008, 610, 79, 1, 27, "Input"],
Cell[20090, 613, 794, 13, 75, "Input"],
Cell[20887, 628, 663, 11, 67, "Input"],
Cell[21553, 641, 200, 3, 27, "Input"],
Cell[21756, 646, 657, 10, 68, "Input"],
Cell[22416, 658, 657, 10, 68, "Input"],
Cell[23076, 670, 665, 12, 59, "Input"],
Cell[23744, 684, 194, 3, 27, "Input"],
Cell[23941, 689, 235, 4, 27, "Input"],
Cell[24179, 695, 512, 9, 43, "Input",
  InitializationCell->True],
Cell[24694, 706, 71, 1, 27, "Input"],
Cell[24768, 709, 64, 1, 27, "Input"],
Cell[24835, 712, 320, 6, 43, "Input"],
Cell[25158, 720, 174, 3, 27, "Input"],
Cell[25335, 725, 68, 1, 27, "Input"],
Cell[25406, 728, 42, 1, 27, "Input"],
Cell[25451, 731, 71, 1, 27, "Input"],
Cell[25525, 734, 62, 1, 27, "Input"],
Cell[25590, 737, 290, 5, 43, "Input"],
Cell[25883, 744, 68, 1, 27, "Input"],
Cell[25954, 747, 42, 1, 27, "Input"],
Cell[25999, 750, 108, 2, 75, "Input"],
Cell[26110, 754, 93, 1, 27, "Input"],
Cell[26206, 757, 49, 1, 27, "Input"],
Cell[26258, 760, 151, 3, 27, "Input"],
Cell[26412, 765, 71, 1, 27, "Input"],
Cell[26486, 768, 48, 1, 27, "Input"],
Cell[26537, 771, 106, 2, 27, "Input"],
Cell[26646, 775, 51, 1, 27, "Input"],
Cell[26700, 778, 150, 3, 27, "Input"],
Cell[26853, 783, 49, 1, 27, "Input"],
Cell[26905, 786, 46, 1, 27, "Input"],
Cell[26954, 789, 46, 1, 27, "Input"],
Cell[27003, 792, 58, 1, 27, "Input"],
Cell[27064, 795, 65, 1, 27, "Input"],
Cell[27132, 798, 81, 1, 27, "Input"],
Cell[27216, 801, 103, 2, 27, "Input"],
Cell[27322, 805, 104, 2, 27, "Input"]
}, Open  ]]
}
]
*)



(*******************************************************************
End of Mathematica Notebook file.
*******************************************************************)

