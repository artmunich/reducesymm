(*******************************************************************
This file was generated automatically by the Mathematica front end.
It contains Initialization cells from a Notebook file, which
typically will have the same name as this file except ending in
".nb" instead of ".m".

This file is intended to be loaded into the Mathematica kernel using
the package loading commands Get or Needs.  Doing so is equivalent
to using the Evaluate Initialization Cells menu command in the front
end.

DO NOT EDIT THIS FILE.  This entire file is regenerated
automatically each time the parent Notebook file is saved in the
Mathematica front end.  Any changes you make to this file will be
overwritten.
***********************************************************************)

Clear[wd];

wd[]:=StringDrop[Directory[],
      Flatten[StringPosition[Directory[],
              ParentDirectory[Directory[]]] ][[2]]+1];

fp=FourierParameters\[Rule]{-1,1};

uSpatial[u_,L_]:=Module[{ux,uxx,dx,d},d=Dimensions[u][[1]];
    dx=L/(d-1);ux=Table[Null,{d}];
    Do[ux[[i]]=(u[[Mod[i+1,d,1]]]-u[[Mod[i-1,d,1]]])/(2dx),{i,1,d}];
    uxx=Table[Null,{d}];
    Do[uxx[[i]]=(ux[[Mod[i+1,d,1]]]-ux[[Mod[i-1,d,1]]])/(2dx),{i,1,d}];
    Table[{u[[i]],ux[[i]],uxx[[i]]},{i,1,d}]]

\!\(uDer[u_, n_, L_] := Module[{a, d}, \[IndentingNewLine]d = \(Dimensions[u]\)[\([1]\)]; a = Fourier[u, fp]; Do[a[\([k + 1]\)] = \(\((\(-2\) \[Pi]\ I\ k/L)\)\^n\) a[\([k + 1]\)], {k, 0, d/2}]; Do[a[\([d + 1 - k]\)] = Conjugate[a[\([1 + k]\)]], {k, 1, d/2 - 1}]\ ; \ Chop[InverseFourier[a, fp], 10^\(-10\)]]\)

uShiftF[u_,sh_,L_]:=Module[{a,d},d=Dimensions[u][[1]];a=Fourier[u,fp];
    Do[a[[k+1]]=Exp[-2 \[Pi] sh I k/L]a[[k+1]],{k,1,d/2+1}];
    Do[a[[d+1-k]]=Conjugate[a[[1+k]]],{k,1,d/2-1}];
    Chop[InverseFourier[a,fp],10^-9]]

uShiftFTraj[traj_,sh_,L_]:=Map[uShiftF[#,sh,L]&,traj,{1}];

uClose[u_]:=Append[u,u[[1]] ]

uAntiSym[u_]:=
  Module[{uAnt,i,d},d=Dimensions[u][[1]];uAnt=Table[0,{d}];uAnt[[1]]=-u[[1]];
    Do[uAnt[[i+1]]=-u[[d+1-i]],{i,1,d-1}];uAnt]

uAntiImag[u_]:=
  Module[{i,d},d=Dimensions[u][[1]];Table[-u[[Mod[d/2+1-k+1,d,1]]],{k,1,d}]]

uAntiShiftHalf[u_]:=
  Module[{uShift,i,d},d=Dimensions[u][[1]];uShift=Table[0,{d}];
    Do[uShift[[i]]=-u[[Mod[d/2+i,d,1]]],{i,1,d}];uShift]

uShift[u_,s_]:=Module[{uShift,i,d},d=Dimensions[u][[1]];uShift=Table[0,{d}];
    Do[uShift[[i]]=u[[Mod[s+i,d,1]]],{i,1,d}];uShift]

Clear[hby]
hby[x_]:=Hue[0.7+x/2]/;0\[LessEqual]x\[LessEqual]0.5
hby[x_]:=Hue[(x-0.5)/2.5]/;0.5<x\[LessEqual]1

(*plotEnergy[dir_,color_]:=Module[{d,Np,mE,mvx2,mvxx2,Etab,label},
      <<Graphics`Graphics3D`;
      Etab=Import[dir<>"/energy.dat"];
      d=Dimensions[Etab][[2]];
      Np=Dimensions[Etab][[1]];
      mE=Sum[Etab[[i,1]],{i,1,Np}]/Np;
      mvx2=Sum[Etab[[i,2]],{i,1,Np}]/Np;
      mvxx2=Sum[Etab[[i,3]],{i,1,Np}]/Np;
      label=StringDrop[dir,Flatten[StringPosition[dir,"/"]][[-1]]];
      pm[label]=
        ListPlot[{{mvx2,mvxx2}},PlotStyle\[Rule]{color,PointSize[pt]},
          DisplayFunction\[Rule]Identity];
      pme[label]=
        ScatterPlot3D[{{mE,mvx2,mvxx2}},PlotStyle\[Rule]{color,PointSize[pt]},
          DisplayFunction\[Rule]Identity];
      plt[label]=
        ListPlot[TakeColumns[Etab,{2,3}],PlotJoined\[Rule]True,
          PlotRange\[Rule]All,AspectRatio\[Rule]1,
          PlotStyle\[Rule]{color,Thickness[thck]}];
      plte[label]=
        ScatterPlot3D[Etab,PlotJoined\[Rule]True,
          PlotStyle\[Rule]{color,Thickness[thck]}]]*)

ToDir[file_]:=
    StringDrop[StringDrop[file,Flatten[StringPosition[file,"/"]][[-1]]],-4];
toDir[file_]:=StringDrop[file,Flatten[StringPosition[file,"/"]][[-1]]];
ToPeriod[file_]:=ToExpression[StringDrop[StringDrop[ToDir[file],7],-7]];
ToShift[file_]:=ToExpression[StringDrop[ToDir[file],14]];

cInner[a_,b_]:=Conjugate[a].b;

coords[a_,b_,
    ao_]:={cInner[a-ao,b[[1]]],cInner[a-ao,b[[2]]],cInner[a-ao,b[[3]]]}//Chop

fourTraj[traj_]:=Map[Fourier[#,fp]&,traj,{1}];

coordsTraj[traj_,b_,ao_]:=Map[coords[#,b,ao]&,traj,{1}];

UnsortedUnion[x_List]:=
  Module[{len=Length[x],tmp},
    tmp=Split[Sort[Transpose[{x,Range[len]}]],(#1[[1]]===#2[[1]]&)][[All,1]];
    Sort[Transpose[RotateLeft[Transpose[tmp]]]][[All,2]]]

gsorth[x_]:=Module[{y,Nv,d,sm},Nv=Dimensions[x][[1]];d=Dimensions[x][[2]];
    y=Table[Null,{Nv}];y[[1]]=x[[1]]/Norm[x[[1]]];
    Do[sm=Sum[Conjugate[y[[j-k]]].x[[j]]y[[j-k]],{k,1,j-1}];
      y[[j]]=(x[[j]]-sm)/Norm[x[[j]]-sm],{j,2,Nv}];y]



interpTraj[file_,b_,a_,Npt_,Nplt_,NpS_,rSkip_,nd_]:=
  Module[{vfile,vi,v,p,ds,s,dS,adum,a1s,a2s,a3s,aStab},vfile=OpenRead[file];
    aStab=Table[Null,{Npt}];
    Do[vi=ReadList[vfile,Number,nd*Nplt,RecordLists\[Rule]True];
      v=Take[vi,{1,Dimensions[vi][[1]],rSkip}];
      p=coordsTraj[fourTraj[v],b,a];
      ds=Table[Norm[p[[i+1]]-p[[i]]],{i,1,Nplt-1}];
      s=Table[Null,{Dimensions[ds][[1]]+1}];
      s[[1]]=0;
      Do[s[[i+1]]=s[[i]]+ds[[i]],{i,1,Dimensions[ds][[1]]}];
      dS=s[[Dimensions[s][[1]]]]/NpS;
      adum=TakeColumns[p,{1}]//Flatten;
      a1s=Table[{s[[i]],adum[[i]]},{i,1,Dimensions[s][[1]]}];
      adum=TakeColumns[p,{2}]//Flatten;
      a2s=Table[{s[[i]],adum[[i]]},{i,1,Dimensions[s][[1]]}];
      adum=TakeColumns[p,{3}]//Flatten;
      a3s=Table[{s[[i]],adum[[i]]},{i,1,Dimensions[s][[1]]}];
      aS={Interpolation[a1s],Interpolation[a2s],Interpolation[a3s]};
      aStab[[j]]=
        Table[{aS[[1]][sx*dS],aS[[2]][sx*dS],aS[[3]][sx*dS]},{sx,1,NpS}],{j,1,
        Npt}];
    Close[vfile];
    aStab]

interp1Traj[p_,rSkip_,dS_]:=
  Module[{pdum,ds,s,adum,Npt,NpS,aS,a1s,a2s,a3s,aStab},
    Npt=Dimensions[p][[1]];
    pdum=Take[p,{1,Dimensions[p][[1]],rSkip}];
    Print[Dimensions[p]];
    ds=Table[Norm[pdum[[i+1]]-pdum[[i]]],{i,1,Npt-1}];
    s=Table[0,{Npt}];
    Print[Dimensions[ds]];
    Do[s[[i+1]]=s[[i]]+ds[[i]],{i,1,Npt-1}];
    Print[Dimensions[s]];
    NpS=Floor[s[[Dimensions[s][[1]]]]/dS];
    adum=TakeColumns[p,{1}]//Flatten;
    a1s=Table[{s[[i]],adum[[i]]},{i,1,Dimensions[s][[1]]}];
    adum=TakeColumns[p,{2}]//Flatten;
    a2s=Table[{s[[i]],adum[[i]]},{i,1,Dimensions[s][[1]]}];
    adum=TakeColumns[p,{3}]//Flatten;
    a3s=Table[{s[[i]],adum[[i]]},{i,1,Dimensions[s][[1]]}];
    aS={Interpolation[a1s],Interpolation[a2s],Interpolation[a3s]};
    aStab=Table[{aS[[1]][sx*dS],aS[[2]][sx*dS],aS[[3]][sx*dS]},{sx,1,NpS}];
    aStab]


apPoinc[traj_,coord_]:=Module[{cros,ctraj},cros={Null};
    ctraj=Take[traj,All,{coord}]//Flatten;
    Do[If[(ctraj[[i-1]]>0)&&(ctraj[[i]]\[LessEqual]0),
        cros=Append[cros,{i}]],{i,2,Dimensions[ctraj][[1]]}];
    cros=Drop[cros,1];
    (Extract[traj,cros]+Extract[traj,cros-1])/2]


d1[x_List,t_]:=D[#,t]&/@x;

d2[x_List,t_]:=D[#,t,t]&/@x;

norm[x_List]:=x/Sqrt[x.x];

FrenetFrame[x_List,t_,phi_,r_]:=
    Module[{xp,xpp,tangent,binormal,normal},xp=d1[x,t];
      xpp=d2[x,t];
      tangent=norm[xp];
      binormal=norm[Cross[xp,xpp]];
      normal=Cross[binormal,tangent];
      x+normal*r*Cos[phi]+r*binormal*Sin[phi]];

ruslanizE[list_]:=Map[Times[{2,4,4},#]&,list,{1}]

\!\(plotEtab[Etab_, label_, c_, pt_:  0.01, thck_:  0.005] := \[IndentingNewLine]Module[{Nk, coord, cros, poinc, plPoinc, rPoincE, rPoinc1, plrPoincE, plrPoinc1}, \[IndentingNewLine]Nk = \(Dimensions[Etab]\)[\([1]\)]; \[IndentingNewLine]mE = Sum[Etab[\([i, 1]\)], {i, 1, Nk}]/Nk; \[IndentingNewLine]mP = Sum[Etab[\([i, 2]\)], {i, 1, Nk}]/Nk; \[IndentingNewLine]mD = Sum[Etab[\([i, 3]\)], {i, 1, Nk}]/Nk; \[IndentingNewLine]pEPEdot[label] = ScatterPlot3D[AppendRows[TakeColumns[Etab, {1}], TakeColumns[Etab, {2}], TakeColumns[Etab, {2}] - TakeColumns[Etab, {3}]]\ \ , DisplayFunction -> \ Identity, PlotJoined -> True, PlotRange -> All, AspectRatio -> Automatic, FrameLabel -> \ {"\<E\>", "\<P\>", \*"\"\<\!\(E\& . \)\>\""}, PlotStyle -> \ {c\ }]; \[IndentingNewLine]pPEdot[label]\  = ListPlot[AppendRows[TakeColumns[Etab, {2}], TakeColumns[Etab, {2}] - TakeColumns[Etab, {3}]]\ \ , DisplayFunction -> \ Identity, PlotJoined -> True, AspectRatio -> Automatic, PlotStyle -> {c, Thickness[thck]}, FrameLabel -> \ {"\<P\>", \*"\"\<\!\(E\& . \)\>\""}]; \[IndentingNewLine]pmPD[label] = ListPlot[{{mP, mD}}, PlotStyle \[Rule] {c, PointSize[pt]}, DisplayFunction \[Rule] Identity]; \[IndentingNewLine]pmEP[label] = ListPlot[{{mE, mP}}, PlotStyle \[Rule] {c, PointSize[pt]}, DisplayFunction \[Rule] Identity]; \[IndentingNewLine]pmED[label] = ListPlot[{{mE, mD}}, PlotStyle \[Rule] {c, PointSize[pt]}, DisplayFunction \[Rule] Identity]; \[IndentingNewLine]pPD[label] = ListPlot[AppendRows[TakeColumns[Etab, {2}], TakeColumns[Etab, {3}]]\ \ , DisplayFunction -> \ Identity, PlotJoined -> True, PlotRange -> All, AspectRatio -> Automatic, FrameLabel -> \ {"\<P\>", "\<D\>"}, PlotStyle -> {c, Thickness[thck]}]; \[IndentingNewLine]pEP[label] = ListPlot[AppendRows[TakeColumns[Etab, {1}], TakeColumns[Etab, {2}]]\ \ , DisplayFunction -> \ Identity, PlotJoined -> True, PlotRange -> All, AspectRatio -> Automatic, FrameLabel -> \ {"\<E\>", "\<P\>"}, PlotStyle -> {c, Thickness[thck]}]; \[IndentingNewLine]pED[label] = ListPlot[AppendRows[TakeColumns[Etab, {1}], TakeColumns[Etab, {3}]]\ \ , DisplayFunction -> \ Identity, PlotJoined -> True, PlotRange -> All, AspectRatio -> Automatic, FrameLabel -> \ {"\<E\>", "\<D\>"}, PlotStyle -> {c, Thickness[thck]}]; \[IndentingNewLine]pDEdot[label] = ListPlot[AppendRows[TakeColumns[Etab, {3}], TakeColumns[Etab, {2}] - TakeColumns[Etab, {3}]]\ \ , DisplayFunction -> \ Identity, PlotJoined -> True, PlotRange -> All, AspectRatio -> Automatic, FrameLabel -> \ {"\<D\>", \*"\"\<\!\(E\& . \)\>\""}, PlotStyle -> {c, Thickness[thck]}]; \[IndentingNewLine]pEEdot[label] = ListPlot[AppendRows[TakeColumns[Etab, {1}], TakeColumns[Etab, {2}] - TakeColumns[Etab, {3}]]\ \ , DisplayFunction -> \ Identity, PlotJoined -> True, PlotRange -> All, AspectRatio -> Automatic, FrameLabel -> \ {"\<E\>", \*"\"\<\!\(E\& . \)\>\""}, PlotStyle -> {c, Thickness[thck]}]; \[IndentingNewLine]coord = Etab[\([All, 3]\)] - Etab[\([All, 2]\)]; \[IndentingNewLine]cros = {Null}; \[IndentingNewLine]Do[If[\ \((coord[\([i - 1]\)] > 0)\)\  && \ \((coord[\([i]\)] <= \ 0)\), cros = Append[cros, {i}]], {i, 2, \(Dimensions[coord]\)[\([1]\)]}]; \[IndentingNewLine]cros = Drop[cros, 1]; \[IndentingNewLine]poinc = \((Extract[Etab[\([All, {1, 2}]\)], cros] + Extract[Etab[\([All, {1, 2}]\)], cros - 1])\)/2; \[IndentingNewLine]label\[IndentingNewLine]]\)

plotEtabDir[dir_,c_,pt_:0.01,thck_:0.005]:=
  Module[{Etab,label},
    Etab=ruslanizE@Import[dir<>"/energy.dat"];
    label=toDir[dir];
    plotEtab[Etab,label,c,pt,thck]
    ]

\!\(energyTraj[traj_, L_] := Module[{d, E, ux, uxx}, d = \(Dimensions[traj]\)[\([2]\)]; ux = Map[uDer[#, 1, L] &, traj, {1}]; uxx = Map[uDer[#, 2, L] &, traj, {1}]; Transpose[{Table[Sum[traj[\([j, i]\)]\^2, {i, 1, d}], {j, 1, \(Dimensions[traj]\)[\([1]\)]}\ ]/d, Table[Sum[ux[\([j, i]\)]\^2, {i, 1, d}], {j, 1, \(Dimensions[traj]\)[\([1]\)]}\ ]/d, Table[Sum[uxx[\([j, i]\)]\^2, {i, 1, d}], {j, 1, \(Dimensions[traj]\)[\([1]\)]}\ ]/d}]]\)

